types babylon_vienna_congress 
{
    ### COUNTRIES TAB
	type babylon_vienna_congress_overview = flowcontainer {
        layoutpolicy_horizontal = expanding
        layoutpolicy_vertical = expanding
        #spacing = -50

        #size = { 100% 100% }
        #margin_left = 100
        align = top
        margin_top = 20
        direction = vertical
        flowcontainer = {
            spacing = 5
            margin_top = 20
            direction = vertical
            parentanchor = center|top
            flowcontainer = { # Great Powers
                spacing = 5
                margin_top = 20
                direction = vertical
                parentanchor = hcenter
                textbox = {
                    raw_text = "Remaining Time: [GetVarTimeRemaining( GetPlayer.MakeScope, GetGlobalVariable('babylon_vienna_congress_in_session') )]"
                    autoresize = yes
                }
                textbox = {
                    autoresize = yes
                    raw_text = "[Concept('concept_great_power', 'Great Powers')]"
                    using = header_font_fancy
                    using = fontsize_mega
                }
                divider_decorative = {}
                
                textbox = {
                    visible = "[IsDataModelEmpty(GetGlobalList('babylon_congress_great_powers'))]"
                    autoresize = yes
                    raw_text = "Please let the game run for a bit."
                }
                fixedgridbox = {
                    addcolumn = 120
                    addrow = 95
                    datamodel_wrap = 4
                    flipdirection = yes
                    datamodel = "[GetGlobalList('babylon_congress_great_powers')]"
                    item = {
                        large_flag = {
                            using = tooltip_above
                            datacontext = "[Scope.AccessCountry]"						
                            blockoverride "flag_tooltip" {
                                tooltip = "[ContextualDiplomaticPact.GetTooltip]"
                            }
                            textbox = {
                                autoresize = yes
                                margin_top = 65
                                margin_left = 35
                                raw_text = "[Scope.AccessCountry.GetPrestige]"
                                align = center
                            }
                        }			
                    }
                }
            }
            divider_clean = {}
            
            flowcontainer = { # Major Powers
                spacing = 5
                direction = vertical
                textbox = {
                    autoresize = yes
                    raw_text = "[Concept('concept_major_power', 'Major Powers')]"
                    using = header_font_fancy
                    using = fontsize_xxl
                    align = left
                }
                divider_clean = {}
                
                textbox = {
                    visible = "[IsDataModelEmpty(GetGlobalList('babylon_congress_major_powers'))]"
                    autoresize = yes
                    raw_text = "Please let the game run for a bit."
                }
                fixedgridbox = {
                    addcolumn = 80
                    addrow = 60
                    datamodel_wrap = 5
                    flipdirection = yes
                    datamodel = "[GetGlobalList('babylon_congress_major_powers')]"
                    item = {

                        small_flag = {
                            parentanchor = vcenter
                            using = tooltip_above
                            datacontext = "[Scope.AccessCountry]"
                            blockoverride "flag_tooltip" {
                                tooltip = "[ContextualDiplomaticPact.GetTooltip]"
                            }
                            textbox = {
                                autoresize = yes
                                margin_top = 30
                                margin_left = 15
                                raw_text = "[Scope.AccessCountry.GetPrestige]"
                                align = center
                            }
                        }
                    }
                }
            }
        }
    }
    ### CURRENT CONFERENCE TAB
    type babylon_vienna_congress_current_conference =  flowcontainer {
        layoutpolicy_horizontal = expanding
        layoutpolicy_vertical = expanding
        #spacing = -50

        #size = { 100% 100% }
        direction = vertical
        align = top
        #margin_left = 100
        margin_top = 20
        
        flowcontainer = {
            spacing = 20
            direction = vertical
            parentanchor = center|top
            # textbox = {
            #     text = "end_congress_confirmation NOT set"
            #     visible = "[Not(GetVariableSystem.Exists('end_congress_confirmation'))]"
            # }
            # textbox = {
            #     text = "end_congress_confirmation set"
            #     visible = "[GetVariableSystem.Exists('end_congress_confirmation')]"
            # }
            # button = {
            #     using = default_button
            #     onclick = "[GetVariableSystem.Clear('end_congress_confirmation')]"
            #     parentanchor = center|top
            #     textbox = {
            #         resizeparent = yes
            #         raw_text = "clear end_congress_confirmation"
            #         align = center|nobaseline
            #         autoresize = yes
            #         maximumsize = { 250 -1 }
            #         minimumsize = { 250 -1 }
            #         margin = { 10 10 }
            #         parentanchor = center
            #     }
            # }
            flowcontainer = {	
                margin_top = 20
                #margin_right = 90
                parentanchor = hcenter
                direction = vertical
                flowcontainer = {
                    parentanchor = center|top
                    direction = horizontal
                    textbox = {
                        raw_text = "Current Conference"
                        autoresize = yes
                        using = header_font_fancy
                        using = fontsize_mega
                    }
                }
                divider_decorative = {}
                flowcontainer = {
                    visible = "[GetGlobalVariable('babylon_vienna_congress_in_session').IsSet]"
                    direction = vertical
                    textbox = {
                        autoresize = yes
                        text = "CURRENT_CONFERENCE_NAME"
                        using = header_font_fancy
                        using = fontsize_mega
                        parentanchor = center|top
                    }
                    divider_decorative = {}
                    # benches
                    flowcontainer = {
                        direction = horizontal
                        # Left observer bench
                        # Oppose observers
                        flowcontainer = {
                            direction = vertical
                            parentanchor = vcenter
                            margin_right = 20
                            fixedgridbox = {
                                addcolumn = 40
                                addrow = 30
                                flipdirection = no
                                datamodel_wrap = 15
                                spacing = 5
                                datamodel = "[GetGlobalList('current_congress_members_on_observer_bench_stance_3')]"
                                item = {
                                    tiny_flag = {
                                        using = tooltip_above
                                        datacontext = "[Scope.AccessCountry]"						
                                        blockoverride "flag_tooltip" {
                                            tooltip = "[ContextualDiplomaticPact.GetTooltip]"
                                        }
                                    }			
                                }
                            }
                        }
                        vertical_divider = {
                        }
                        # Left bench
                        # Oppose section
                        flowcontainer = {
                            direction = vertical
                            textbox = {
                                autoresize = yes
                                raw_text = "Opposing"
                                using = header_font_fancy
                                using = fontsize_mega
                                margin_bottom = 5
                                parentanchor = center|top
                            }
                            divider_decorative = {}
                            button = {
                                using = default_button
                                onclick = "[GetScriptedGui('set_congress_stance').Execute(GuiScope.SetRoot(GetMetaPlayer.GetPlayedOrObservedCountry.MakeScope).AddScope('congress_stance', MakeScopeValue('(CFixedPoint)3')).End)]"
                                enabled = "[And(Not(GetScriptedGui('has_congress_stance').IsShown(GuiScope.SetRoot(GetMetaPlayer.GetPlayedOrObservedCountry.MakeScope).AddScope('congress_stance', MakeScopeValue('(CFixedPoint)3')).End)),GetPlayer.MakeScope.GetVariable('voting_conference_member').IsSet)]"
                                parentanchor = center|top
                                textbox = {
                                    resizeparent = yes
                                    raw_text = "Oppose"
                                    align = center|nobaseline
                                    autoresize = yes
                                    maximumsize = { 250 -1 }
                                    minimumsize = { 250 -1 }
                                    margin = { 10 10 }
                                    parentanchor = center
                                }
                            }
                            divider_decorative = {}
                            textbox = {
                                autoresize = yes
                                raw_text = "#v [GetPlayer.MakeScope.ScriptValue('conference_opposers_prestige_value')]#!"
                                using = header_font_fancy
                                using = fontsize_mega
                                margin_bottom = 5
                                parentanchor = center|top
                            }
                            divider_decorative = {}
                            flowcontainer = {
                                margin_left = 20
                                margin_top = 20
                                fixedgridbox = {
                                    addcolumn = 120
                                    addrow = 95
                                    datamodel_wrap = 4
                                    flipdirection = no
                                    datamodel = "[GetGlobalList('current_congress_members_on_stance_3')]"
                                    item = {
                                        large_flag = {
                                            using = tooltip_above
                                            datacontext = "[Scope.AccessCountry]"						
                                            blockoverride "flag_tooltip" {
                                                tooltip = "[ContextualDiplomaticPact.GetTooltip]"
                                            }
                                            textbox = {
                                                autoresize = yes
                                                margin_top = 65
                                                margin_left = 35
                                                raw_text = "[Scope.AccessCountry.GetPrestige]"
                                                align = center
                                            }
                                        }			
                                    }
                                }
                            }
                        }
                        vertical_divider = {}
                        # Middle bench
                        # Abstain section
                        flowcontainer = {
                            direction = vertical
                            textbox = {
                                autoresize = yes
                                raw_text = "Abstaining"
                                using = header_font_fancy
                                using = fontsize_mega
                                margin_bottom = 5
                                parentanchor = center|top
                            }
                            divider_decorative = {}
                            button = {
                                using = default_button
                                onclick = "[GetScriptedGui('set_congress_stance').Execute(GuiScope.SetRoot(GetMetaPlayer.GetPlayedOrObservedCountry.MakeScope).AddScope('congress_stance', MakeScopeValue('(CFixedPoint)2')).End)]"
                                enabled = "[And(Not(GetScriptedGui('has_congress_stance').IsShown(GuiScope.SetRoot(GetMetaPlayer.GetPlayedOrObservedCountry.MakeScope).AddScope('congress_stance', MakeScopeValue('(CFixedPoint)2')).End)),GetPlayer.MakeScope.GetVariable('voting_conference_member').IsSet)]"
                                parentanchor = center|top
                                textbox = {
                                    resizeparent = yes
                                    raw_text = "Abstain"
                                    align = center|nobaseline
                                    autoresize = yes
                                    maximumsize = { 250 -1 }
                                    minimumsize = { 250 -1 }
                                    margin = { 10 10 }
                                    parentanchor = center
                                }
                            }
                            divider_decorative = {}
                            textbox = {
                                autoresize = yes
                                raw_text = "#v [GetPlayer.MakeScope.ScriptValue('conference_neutral_prestige_value')]#!"
                                using = header_font_fancy
                                using = fontsize_mega
                                margin_bottom = 5
                                parentanchor = center|top
                            }
                            divider_decorative = {}
                            flowcontainer = {
                                margin_left = 20
                                margin_top = 20
                                fixedgridbox = {
                                    addcolumn = 120
                                    addrow = 95
                                    datamodel_wrap = 4
                                    flipdirection = no
                                    datamodel = "[GetGlobalList('current_congress_members_on_stance_2')]"
                                    item = {
                                        large_flag = {
                                            using = tooltip_above
                                            datacontext = "[Scope.AccessCountry]"						
                                            blockoverride "flag_tooltip" {
                                                tooltip = "[ContextualDiplomaticPact.GetTooltip]"
                                            }
                                            textbox = {
                                                autoresize = yes
                                                margin_top = 65
                                                margin_left = 35
                                                raw_text = "[Scope.AccessCountry.GetPrestige]"
                                                align = center
                                            }
                                        }			
                                    }
                                }
                            }
                        }
                        vertical_divider = {}
                        # Right Bench
                        # Support section
                        flowcontainer = {
                            direction = vertical
                            textbox = {
                                autoresize = yes
                                raw_text = "Supporters"
                                using = header_font_fancy
                                using = fontsize_mega
                                margin_bottom = 5
                                parentanchor = center|top
                            }
                            divider_decorative = {}
                            button = {
                                using = default_button
                                onclick = "[GetScriptedGui('set_congress_stance').Execute(GuiScope.SetRoot(GetMetaPlayer.GetPlayedOrObservedCountry.MakeScope).AddScope('congress_stance', MakeScopeValue('(CFixedPoint)1')).End)]"
                                enabled = "[And(Not(GetScriptedGui('has_congress_stance').IsShown(GuiScope.SetRoot(GetMetaPlayer.GetPlayedOrObservedCountry.MakeScope).AddScope('congress_stance', MakeScopeValue('(CFixedPoint)1')).End)),GetPlayer.MakeScope.GetVariable('voting_conference_member').IsSet)]"
                                parentanchor = center|top
                                textbox = {
                                    resizeparent = yes
                                    raw_text = "Support"
                                    align = center|nobaseline
                                    autoresize = yes
                                    maximumsize = { 250 -1 }
                                    minimumsize = { 250 -1 }
                                    margin = { 10 10 }
                                    parentanchor = center
                                }
                            }
                            divider_decorative = {}
                            textbox = {
                                autoresize = yes
                                raw_text = "#v [GetPlayer.MakeScope.ScriptValue('conference_supporters_prestige_value')]#!"
                                using = header_font_fancy
                                using = fontsize_mega
                                margin_bottom = 5
                                parentanchor = center|top
                            }
                            divider_decorative = {}
                            flowcontainer = {
                                margin_left = 20
                                margin_top = 20
                                fixedgridbox = {
                                    addcolumn = 120
                                    addrow = 95
                                    datamodel_wrap = 4
                                    flipdirection = no
                                    datamodel = "[GetGlobalList('current_congress_members_on_stance_1')]"
                                    item = {
                                        large_flag = {
                                            using = tooltip_above
                                            datacontext = "[Scope.AccessCountry]"						
                                            blockoverride "flag_tooltip" {
                                                tooltip = "[ContextualDiplomaticPact.GetTooltip]"
                                            }
                                            textbox = {
                                                autoresize = yes
                                                margin_top = 65
                                                margin_left = 35
                                                raw_text = "[Scope.AccessCountry.GetPrestige]"
                                                align = center
                                            }
                                        }			
                                    }
                                }
                            }
                        }
                        vertical_divider = {}
                        # Right observers
                        # Support observers
                        flowcontainer = {
                            direction = vertical
                            parentanchor = vcenter
                            margin_left = 20
                            fixedgridbox = {
                                addcolumn = 40
                                addrow = 30
                                flipdirection = no
                                datamodel_wrap = 15
                                spacing = 5
                                datamodel = "[GetGlobalList('current_congress_members_on_observer_bench_stance_1')]"
                                item = {
                                    tiny_flag = {
                                        using = tooltip_above
                                        datacontext = "[Scope.AccessCountry]"						
                                        blockoverride "flag_tooltip" {
                                            tooltip = "[ContextualDiplomaticPact.GetTooltip]"
                                        }
                                    }			
                                }
                            }
                        }
                    }
                    divider_decorative = {}
                    # Power bar
                    flowcontainer = {
                        direction = horizontal
                        parentanchor = center|top
                        margin_top = 5
                        margin_bottom = 5
                        double_direction_progressbar_gold = {
                            size =  { 360 30 }
                            #position = { 40 -3 }
                            parentanchor = bottom

                            blockoverride "value_left" {
                                value = "[FixedPointToFloat(GetPlayer.MakeScope.ScriptValue('conference_power_balance_percentage_value'))]"
                            }
                            blockoverride "value_right" {
                                value = "[FixedPointToFloat(GetPlayer.MakeScope.ScriptValue('conference_power_balance_percentage_value'))]"
                            }
                            textbox = {
                                raw_text = "#v [FixedPointToProgressbarValue(GetPlayer.MakeScope.ScriptValue('conference_power_balance_percentage_value'))|v1]%#!"
                                parentanchor = center|top
                                autoresize = yes
                            }
                        }
                    }
                    # End congress button
                    button = {
                        using = default_button
                        onclick = "[GetVariableSystem.Toggle('end_congress_confirmation')]"
                        enabled = "[And(GetScriptedGui('is_congress_initiator').IsShown( GuiScope.SetRoot(GetPlayer.MakeScope).End), Not(GetGlobalVariable('babylon_vienna_congress_minimum_time').IsSet))]"
                        parentanchor = center|top
                        margin_top = 20
                        textbox = {
                            resizeparent = yes
                            raw_text = "End Conference Early"
                            align = center|nobaseline
                            autoresize = yes
                            maximumsize = { 250 -1 }
                            minimumsize = { 250 -1 }
                            margin = { 10 10 }
                            parentanchor = center
                        }
                    }
                    # Middle observer bench
                    flowcontainer = {
                        direction = vertical
                        parentanchor = hcenter
                        margin_top = 20
                        fixedgridbox = {
                            addcolumn = 40
                            addrow = 30
                            flipdirection = yes
                            datamodel_wrap = 21
                            spacing = 5
                            datamodel = "[GetGlobalList('current_congress_members_on_observer_bench_stance_2')]"
                            item = {
                                tiny_flag = {
                                    using = tooltip_above
                                    datacontext = "[Scope.AccessCountry]"						
                                    blockoverride "flag_tooltip" {
                                        tooltip = "[ContextualDiplomaticPact.GetTooltip]"
                                    }
                                }			
                            }
                        }
                    }
                }
            }
        }
        
    }
    # PROPOSALS TAB
    type babylon_vienna_congress_proposals =  flowcontainer {
        layoutpolicy_horizontal = expanding
        layoutpolicy_vertical = expanding
        #direction = horizontal
        margin_left = 100
        margin_top = 20
        datacontext = "[GetPlayer]"
        flowcontainer = {
            spacing = 5
            direction = horizontal
            flowcontainer = {	
                spacing = 5
                margin_top = 20
                margin_right = 90	
                direction = vertical	
                textbox = {
                    autoresize = yes
                    raw_text = "Possible proposals"
                    using = header_font_fancy
                    using = fontsize_mega
                    align = center
                }
                divider_decorative = {}
                textbox = {
                    visible = "[IsDataModelEmpty(GetGlobalList('babylon_congress_great_powers'))]"
                    autoresize = yes
                    raw_text = "Please let the game run for a bit."
                }
                flowcontainer = {	
                    direction = vertical
                    visible = "[And(And(Not(IsDataModelEmpty(GetGlobalList('babylon_congress_great_powers'))), Not(GetGlobalVariable('babylon_vienna_congress_in_session').IsSet)),GetScriptedGui('is_great_power').IsShown( GuiScope.SetRoot(GetPlayer.MakeScope).End))]"
                    button = {
                        using = default_button

                        onclick = "[GetScriptedGui('set_proposal_type').Execute(GuiScope.SetRoot(GetMetaPlayer.GetPlayedOrObservedCountry.MakeScope).AddScope('set_proposal_type', MakeScopeValue('(CFixedPoint)1')).End)]"
						enabled = "[Not(GetScriptedGui('has_proposal_type').IsShown(GuiScope.SetRoot(GetMetaPlayer.GetPlayedOrObservedCountry.MakeScope).AddScope('proposal_type', MakeScopeValue('(CFixedPoint)1')).End))]"
                        textbox = {
                            resizeparent = yes
                            raw_text = "Denouncement"
                            align = center|nobaseline
                            autoresize = yes
                            maximumsize = { 250 -1 }
                            minimumsize = { 250 -1 }
                            margin = { 10 10 }
                            parentanchor = center
                        }
                    }
                    button = {
                        using = default_button
                        onclick = "[GetScriptedGui('set_proposal_type').Execute(GuiScope.SetRoot(GetMetaPlayer.GetPlayedOrObservedCountry.MakeScope).AddScope('set_proposal_type', MakeScopeValue('(CFixedPoint)2')).End)]"

						enabled = "[Not(GetScriptedGui('has_proposal_type').IsShown(GuiScope.SetRoot(GetMetaPlayer.GetPlayedOrObservedCountry.MakeScope).AddScope('proposal_type', MakeScopeValue('(CFixedPoint)2')).End))]"
                        textbox = {
                            resizeparent = yes
                            raw_text = "State Claim"
                            align = center|nobaseline
                            autoresize = yes
                            maximumsize = { 250 -1 }
                            minimumsize = { 250 -1 }
                            margin = { 10 10 }
                            parentanchor = center
                        }
                    }
                    button = {
                        using = default_button
                        onclick = "[GetScriptedGui('set_proposal_type').Execute(GuiScope.SetRoot(GetMetaPlayer.GetPlayedOrObservedCountry.MakeScope).AddScope('set_proposal_type', MakeScopeValue('(CFixedPoint)3')).End)]"

						enabled = "[Not(GetScriptedGui('has_proposal_type').IsShown(GuiScope.SetRoot(GetMetaPlayer.GetPlayedOrObservedCountry.MakeScope).AddScope('proposal_type', MakeScopeValue('(CFixedPoint)3')).End))]"
                        textbox = {
                            resizeparent = yes
                            raw_text = "Embargo"
                            align = center|nobaseline
                            autoresize = yes
                            maximumsize = { 250 -1 }
                            minimumsize = { 250 -1 }
                            margin = { 10 10 }
                            parentanchor = center
                        }
                    }
                    button = {
                        using = default_button
                        onclick = "[GetScriptedGui('set_proposal_type').Execute(GuiScope.SetRoot(GetMetaPlayer.GetPlayedOrObservedCountry.MakeScope).AddScope('set_proposal_type', MakeScopeValue('(CFixedPoint)4')).End)]"

						enabled = "[Not(GetScriptedGui('has_proposal_type').IsShown(GuiScope.SetRoot(GetMetaPlayer.GetPlayedOrObservedCountry.MakeScope).AddScope('proposal_type', MakeScopeValue('(CFixedPoint)4')).End))]"
                        textbox = {
                            resizeparent = yes
                            raw_text = "Recognition"
                            align = center|nobaseline
                            autoresize = yes
                            maximumsize = { 250 -1 }
                            minimumsize = { 250 -1 }
                            margin = { 10 10 }
                            parentanchor = center
                        }
                    }
                    divider_decorative = {}
                    
                }
                flowcontainer = {
                    visible = "[And(And(Not(IsDataModelEmpty(GetGlobalList('babylon_congress_great_powers'))), Not(GetGlobalVariable('babylon_vienna_congress_in_session').IsSet)),GetScriptedGui('is_great_power').IsShown( GuiScope.SetRoot(GetPlayer.MakeScope).End))]"

                    button = {
                        using = default_button
                        onclick = "[InformationPanelBar.ClosePanel]"
						onclick = "[GetVariableSystem.Toggle('babylon_vienna_congress_state_selector_open')]"
                        onclick = "[GetVariableSystem.Set('state_selector_mode','strategic_region')]"
                        onclick = "[GetVariableSystem.Clear('babylon_vienna_congress_open')]"
                        enabled = "[GetPlayer.MakeScope.Var('congress_proposal_type').IsSet]"
                        textbox = {
                            resizeparent = yes
                            raw_text = "Select Target"
                            align = center|nobaseline
                            autoresize = yes
                            maximumsize = { 250 -1 }
                            minimumsize = { 250 -1 }
                            margin = { 10 10 }
                            parentanchor = center
                        }
                    }
                }
            }
            vertical_divider = {
                visible = "[And(Not(IsDataModelEmpty(GetGlobalList('babylon_congress_great_powers'))), Not(GetGlobalVariable('babylon_vienna_congress_in_session').IsSet))]"
            }
            flowcontainer = {
                margin_top = 20
                visible = "[And(Not(IsDataModelEmpty(GetGlobalList('babylon_congress_great_powers'))), Not(GetGlobalVariable('babylon_vienna_congress_in_session').IsSet))]"
                textbox = {
                    autoresize = yes
                    text = "CONGRESS_HOW_TO_DESCRIPTION"
                }
            }
            vertical_divider = {
                visible = "[And( GetPlayer.MakeScope.GetVariable('congress_proposal_type').IsSet , Not( GetGlobalVariable('babylon_vienna_congress_in_session').IsSet ) )]"
            }

            flowcontainer = {
                visible = "[And(  GetPlayer.MakeScope.GetVariable('congress_proposal_type').IsSet, Not( GetGlobalVariable('babylon_vienna_congress_in_session').IsSet ) )]"
                spacing = 5
                direction = vertical
                margin_top = 20
                margin_right = 90
                textbox = {
                    visible = "[GetScriptedGui('has_proposal_type').IsShown(GuiScope.SetRoot(GetMetaPlayer.GetPlayedOrObservedCountry.MakeScope).AddScope('proposal_type', MakeScopeValue('(CFixedPoint)1')).End)]"
                    text = "DENOUNCEMENT_DESCRIPTION"
                    autoresize = yes
                }
                textbox = {
                    visible = "[GetScriptedGui('has_proposal_type').IsShown(GuiScope.SetRoot(GetMetaPlayer.GetPlayedOrObservedCountry.MakeScope).AddScope('proposal_type', MakeScopeValue('(CFixedPoint)2')).End)]"
                    text = "STATE_CLAIM_DESCRIPTION"
                    autoresize = yes
                }
                textbox = {
                    visible = "[GetScriptedGui('has_proposal_type').IsShown(GuiScope.SetRoot(GetMetaPlayer.GetPlayedOrObservedCountry.MakeScope).AddScope('proposal_type', MakeScopeValue('(CFixedPoint)3')).End)]"
                    text = "EMBARGO_DESCRIPTION"
                    autoresize = yes
                }
                textbox = {
                    visible = "[GetScriptedGui('has_proposal_type').IsShown(GuiScope.SetRoot(GetMetaPlayer.GetPlayedOrObservedCountry.MakeScope).AddScope('proposal_type', MakeScopeValue('(CFixedPoint)4')).End)]"
                    text = "RECOGNITION_DESCRIPTION"
                    autoresize = yes
                }
            }
        }
    }
}
