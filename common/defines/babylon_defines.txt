NMilitary = {
	CONVOY_RAIDING_DELAY_BASE_DAYS = 3	# was 5     # atleast this many days between each admiral raiding attempt
	CONVOY_RAIDING_DELAY_MAX_RANDOM_DAYS_FACTOR = 7	# was 10    # up to this many extra days between each admiral raiding attempt
	CONVOY_RAIDING_CONVOY_ATTACK_CHANCE = 0.5	# was 0.2   # Chance each attempt that convoy raiders find convoys to attack from each country along the shipping lane (1 = 100%)
	INTERCEPTION_DELAY_BASE_DAYS = 3	# was 5     # atleast this many days between each admiral interception attempt
	INTERCEPTION_DELAY_MAX_RANDOM_DAYS_FACTOR = 7	# was 10    # up to this many extra days between each admiral interception attempt
	INTERCEPTION_BASE_CHANCE = 0.4	# was 0.1   # base chance when trying to intercept enemy admirals
}

NWar = {
	DEVASTATION_MAX = 100
	DEVASTATION_INCREASE_RATE = 0.1	# Per day, scales with level of occupation
	DEVASTATION_DECAY_RATE = -0.06	#-0.1 Per day, when there are no occupations
	DEVASTATION_FROM_BATTLES = 0.15	# For each battle
	AUTO_CAPITULATE_WAR_SUPPORT = -100	# When war support is this low, the country will auto capitulate
	DAYS_BETWEEN_WAR_EXHAUSTION = 7	# Every this many days war support will be reduced by the war exhaustion formula
	WAR_EXHAUSTION_BASE = 0.25
	WAR_EXHAUSTION_KIA_FACTOR = 5	#20 # Scaled by casualties compared to total manpower
	WAR_EXHAUSTION_KIA_BASE_MULTIPLIER = 0.05	#0.1	# War Exhaustion from casualties is always multiplied by at least this
	WAR_EXHAUSTION_KIA_BATTLES_LOST_MULTIPLIER = 0.35	#0.25	# At 100% of battles lost by our side, War Exhaustion from casualties is further multiplied by this 
	WAR_EXHAUSTION_TURMOIL_FACTOR = 2.5	#2 At 100% turmoil
	WAR_EXHAUSTION_CONTESTED_ENEMY_WARGOALS = 3	#1
	OCCUPATION_STATE_BASE_WEIGHT = 1
	OCCUPATION_STATE_POP_WEIGHT = 1
	OCCUPATION_STATE_INCORPORATED_WEIGHT = 10
	STATE_CONQUEST_HOMELAND_AND_CLAIM_RADICALIZATION = 0.1
	STATE_CONQUEST_HOMELAND_AND_CLAIM_DEMILITARIZATION = 0.25
	STATE_CONQUEST_HOMELAND_OR_CLAIM_RADICALIZATION = 0.2
	STATE_CONQUEST_HOMELAND_OR_CLAIM_DEMILITARIZATION = 0.5
	STATE_CONQUEST_DEFAULT_RADICALIZATION = 0.4
	STATE_CONQUEST_DEFAULT_DEMILITARIZATION = 0.75
	NUM_PROVINCES_FOR_ADVANCEMENT_SELECTION = 5	# After having computed weights for possible advancement provinces using front_battle_province_weight, filter out all but the X top weighted provinces
	MAX_SIMULTANEOUS_BATTLES = 1	# Allows to spawn up to MAX_SIMULTANEOUS_BATTLES as long as you have that many generals with advance orders.
	LOCK_PROVINCE_CAPTURE_TO_SINGLE_STATE = no	# If `yes`, provinces will only be captured on the same state as the battle province state.
	PREFER_BATTLES_IN_UNIQUE_STATES = no	# If `yes`, will avoid creating ANY battles in the same state UNLESS there's no other option.
}

NPops = {
	ASSIMILATION_RATE = 0.003	#0.002 Percentage of pops who will Assimilate into a different Culture each month, if eligible
	MIN_ASSIMILATION = 30	#10 If there is any assmiliation at least this many people will assimilate
	CONVERSION_RATE = 0.001	#0.002 Percentage of pops who will Convert into a different Religion each month, if eligible
	MIN_CONVERSION = 10	# If there is any conversion at least this many people will convert
	RADICALS_MAX_FROM_LOW_SOL = 0.25	#0.18				# If pop is already this % radical, don't add more radicals from low SOL (Scales by delta between SoL and expected min SoL)
	RADICALS_MAX_FROM_DISCRIMINATION = 0.6	#0.5	# If pop is already this % radical, don't add more radicals from discrimination (Scales by literacy)
	MIGRATION_PULL_EMPTY_STATE = 100	# If a state has no pops at all, give it a huge migration pull
	MIGRATION_PULL_FROM_LIVING_STANDARD = 1	# Migration pull from each point of average living standard in target state	
	MIGRATION_PULL_FROM_AVAILABLE_EMPLOYMENT = 0.75	#0.5	# Migration pull is increased by for each 10k available non subsistence jobs
	MIGRATION_PULL_FROM_AVAILABLE_EMPLOYMENT_MAX = 18	#15.5		# Migration pull from available non subsistence jobs cannot exceed this
	MIGRATION_PULL_FROM_AVAILABLE_ARABLE_LAND_MAX_EMPLOYMENT_MULTIPLIER = 0.35	#0.75	# Count available arable land as though the subsistence farm has only this fraction of its max employment, so that massive states in China with mostly full subsistence farms don't get a huge migration boost
	MIGRATION_PULL_FROM_AVAILABLE_ARABLE_LAND = 0.3	#0.5			# Migration pull is increased by for each 10k available subsistence jobs
	MIGRATION_PULL_FROM_AVAILABLE_ARABLE_LAND_MAX = 15	#27		# Migration pull from available subsistence jobs cannot exceed this
	MIGRATION_PULL_REDUCTION_FROM_UNEMPLOYMENT = 1	# Migration pull is reduced by this for each 10k unemployed pops
	MIGRATION_PULL_REDUCTION_FROM_UNEMPLOYMENT_MAX = 50	# Migration pull reduction from unemployment cannot exceed this
	# The below factors are applied *after* migration pull threshold checks, so they only impact how large a share of migration a state gets
	MIGRATION_PULL_MULT_FROM_CULTURE_TARGET = 25	#30		# Migration pull multiplied by this from target state being a cultural migration target
	MIGRATION_PULL_MULT_FROM_CULTURE_TARGET_ADJACENCY = 10	#5.0	# Migration pull multiplied by this from target state being next to a cultural migration target
	MIGRATION_PULL_MULT_FROM_NO_DISCRIMINATION = 1.2	#1		# Migration pull multiplier increased by this if pop is moving from discrimination to no discrimination (not applied to mass migration targets)
	MIGRATION_PULL_MULT_FROM_HOMELANDS = 0.7	#.5				# Migration pull multiplier increased by this if pop is moving to cultural homelands (not applied to mass migration targets)
	# General factors for how many pops will migrate
	MIGRATION_PULL_HIGH_THRESHOLD = 1.25	#1.25					#	State must have a migration pull of at least market average * this to get economic immigration
	MIGRATION_PULL_LOW_THRESHOLD = 0.7	#0.75					# State must have a migration pull of less or equal than market average * this to get full amount of emigration
	ECONOMIC_MIGRATION_BASE = 0.02	# Base amount of a pop that wants to move for economic reasons
	ECONOMIC_MIGRATION_FROM_SOL_DIFFERENCE = 0.01	# Each point of difference of pop SoL to the market's average SoL makes this fraction of the pop want to economically migrate (in %)
	ECONOMIC_MIGRATION_STATE_POPULATION_THRESHOLD = 150000	#100000				# States with less pops than this have reduced economic emigration numbers to avoid total depopulation
	CULTURAL_MIGRATION_BASE = 0.075	#0.085								# Base amount of a pop that wants to move due to mass migration
	CULTURAL_MIGRATION_FROM_RADICALS = 0.25	#0.29						# At 100% radicals, this fraction of the pop wants to mass migrate
	MIGRATION_UNEMPLOYMENT_MULT = 20	# Amount of migration from SoL is increased by this when a pop is unemployed
	MIGRATION_MIN_STATE_POPS = 40000	#40000							# A state with less pops than this will not get emigration
	MIGRATION_MIN_POP_AMOUNT = 1	# No less than this amount of a pop can migrate each week (if any migration at all should happen)
	MIGRATION_MAX_POP_AMOUNT = 10000	#10000							# No more than this amount of a pop can migrate each week
	MIGRATION_MAX_PER_STATE_BASE = 550	#725					# No more than this amount of people can move from or to a state in a single week (base)	
	MIGRATION_MAX_PER_STATE_INFRASTRUCTURE = 2	#2.275				# No more than this amount of people can move from or to a state in a single week (scales with infrastructure)
	MIGRATION_MAX_EMIGRATION_AS_POPULATION_FRACTION = 0.0008	# .0007 Max emigration per week is clamped to this fraction of a state's population
	MIGRATION_MAX_PER_STATE_UNEMPLOYMENT_ORIGIN_FRACTION = 0.005	# The amount of unemployed workers in a state * this value is added to how many people can move from it (after clamping from MIGRATION_MAX_EMIGRATION_AS_POPULATION_FRACTION)
	MIGRATION_MAX_PER_STATE_UNEMPLOYMENT_TARGET_FRACTION = 0.005	# The amount of unemployed workers in a state * this value is removed from how many people can move to it (after clamping from MIGRATION_MAX_EMIGRATION_AS_POPULATION_FRACTION)
	MIGRATION_MAX_PER_STATE_CULTURAL_EMIGRATION_MULT = 5	#5.5		# Weekly emigration caps are multiplied by this amount by this for cultural-type migration (after clamping from MIGRATION_MAX_EMIGRATION_AS_POPULATION_FRACTION)
	MIGRATION_MAX_PER_STATE_CULTURAL_IMMIGRATION_MULT = 11	#12.5		# Weekly immigration caps are multiplied by this amount by this for cultural-type migration (after clamping from MIGRATION_MAX_EMIGRATION_AS_POPULATION_FRACTION)
	MIGRATION_AVERAGE_ATTRACTION_EMIGRATION_MULT = 0.23	# States with an average migration attraction gets this multiplier to emigrants
	# Factors for creating mass migration targets
	MASS_MIGRATION_ORIGIN_MIN_TURMOIL = 0.21	#0.1975			# Must have at least this much turmoil in cultural homelands to create a migration target
	MASS_MIGRATION_ORIGIN_MIN_EMIGRANTS = 90000	# 100000 A country must have at least this many possible migrants to trigger a mass migration
	MASS_MIGRATION_TARGET_MAX_TURMOIL = 0.15	#0.14			# Must have this or less turmoil among the culture for a country to be picked as a mass migration target
	MASS_MIGRATION_TARGET_MIN_ARABLE_LAND = 45	# 50 A state must have at least this much arable land to be a mass migration target
	MASS_MIGRATION_STATE_MIN_MARKET_ACCESS = 0.45	# .4 A state must have at least this much market access to their market to be a mass migration target or origin state
	MASS_MIGRATION_SPAWN_CHANCE = 1.6	# 1.8 Per week for each potential mass migration, scales with turmoil (1 = 1%)
	MASS_MIGRATION_SPAWN_CHANCE_STRUGGLING_FACTOR = 0.18	# .1 Chance increases by this for each point of SoL below 10 for a culture in a country
	MASS_MIGRATION_SPAWN_CHANCE_STARVING_FACTOR = 0.6	# .5 Chance increases by this for each point of SoL below 5 for a culture in a country (added on top of struggling factor)
	MASS_MIGRATION_TARGET_COUNTRY_RANDOM_FACTOR = 0.52	#0.51	# The higher this is, the more random the selection of mass migration country targets will be
	MASS_MIGRATION_TARGET_STATE_RANDOM_FACTOR = 0.52	#0.51		# The higher this is, the more random the selection of mass migration state targets in the target country will be
	MASS_MIGRATION_DURATION_MONTHS = 12	#12				# How long does a mass migration last in months
	MASS_MIGRATION_COOLDOWN_MONTHS = 26	#60				# 24 How many months before the same culture can mass migrate from a country again
	MASS_MIGRATION_NUM_TARGET_STATES_FOR_NO_PENALTY = 4	# Countries with at least this number of possible target states do not receive any penalty to their mass migration target score
	MASS_MIGRATION_FEW_TARGET_STATES_PENALTY = 0.2	#0.25	# Mass migration target score is divided by ( 1 + this * number of possible target states less than MASS_MIGRATION_NUM_TARGET_STATES_FOR_NO_PENALTY )
	### Pop Consolidation defines
	# Pop Consolidation identifies pops so small their impact on the economy and politics is insignificant, and merges them into other pops in the same building or state.
	# 
	# POP_MERGE_MAX_WORKFORCE_*: determines how small the pop needs to be in terms of Workforce in order to qualify to be merged with others in their same building or the unemployment pool
	# POP_MERGE_MIN_NUM_POPS_SAME_PROFESSION_*: employed pops will not get merged with others in their same building if there aren't at least this many pops of the same type in the building
	# WORKFORCE_RATIO_MAX_UNEMPLOYMENT_FACTOR_*: unemployed Pops with less than POP_MERGE_MAX_WORKFORCE and a Workforce:Dependent ratio that's this much worse than the ideal will be all turned into Dependents and merged back into pops in the same state
	# 
	# The tail of the define name corresponds to a Pop Consolidation Game Rule with the same name. 
	# When that Game Rule is active, the defined values for POP_MERGE_MAX_WORKFORCE and WORKFORCE_RATIO_MAX_UNEMPLOYMENT_FACTOR represent the minimum values, while the maximum are that of the level above it.
	# POP_MERGE_START_POP and POP_MERGE_MAX_TARGET_POP determines how high to scale the values towards the level above it.
	# For example, at Moderate Consolidation, POP_MERGE_START_POP = 50000 and POP_MERGE_MAX_TARGET_POP = 100000, and a global population of 87560 pops:
	# POP_MERGE_MAX_WORKFORCE will effectively be 45 (75% of the way from 30 to 50) and WORKFORCE_RATIO_MAX_UNEMPLOYMENT_FACTOR will effectively be 1.6244 (75% of the way from 2 to 1.5) 
	POP_MERGE_MAX_WORKFORCE_MINOR_CONSOLIDATION = 10
	POP_MERGE_MIN_NUM_POPS_SAME_PROFESSION_MINOR_CONSOLIDATION = 5
	WORKFORCE_RATIO_MAX_UNEMPLOYMENT_FACTOR_MINOR_CONSOLIDATION = 2.5
	POP_MERGE_MAX_WORKFORCE_MODERATE_CONSOLIDATION = 30
	POP_MERGE_MIN_NUM_POPS_SAME_PROFESSION_MODERATE_CONSOLIDATION = 4
	WORKFORCE_RATIO_MAX_UNEMPLOYMENT_FACTOR_MODERATE_CONSOLIDATION = 2
	POP_MERGE_MAX_WORKFORCE_AGGRESSIVE_CONSOLIDATION = 50
	POP_MERGE_MIN_NUM_POPS_SAME_PROFESSION_AGGRESSIVE_CONSOLIDATION = 3
	WORKFORCE_RATIO_MAX_UNEMPLOYMENT_FACTOR_AGGRESSIVE_CONSOLIDATION = 1.5
	POP_MERGE_MAX_WORKFORCE_MAX_CONSOLIDATION = 100
	WORKFORCE_RATIO_MAX_UNEMPLOYMENT_FACTOR_MAX_CONSOLIDATION = 1
	POP_MERGE_START_POPS = 50000
	POP_MERGE_MAX_TARGET_POPS = 100000
}
