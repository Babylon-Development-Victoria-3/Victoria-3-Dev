### Avast, ye modders
### Here be krakens
### Be warned, turn away!
babylon_berlin_invite_member = {
	add_journal_entry = {
		type = je_babylon_berlin_conference_stage_2
	}
	trigger_event = {
		id = babylon_berlin_conference.4
		days = 0
		popup = yes
	}
}

babylon_berlin_conference_calculate_points = {
	#Set max points
	set_variable = {
		name = babylon_berlin_conference_points_max
		value = babylon_berlin_conference_points_for_COUNTRY
	}
	#Set remaining points; same as above so just an initialisation
	set_variable = {
		name = babylon_berlin_conference_points_remaining
		value = babylon_berlin_conference_points_for_COUNTRY
	}
}

change_POINTS_in_STATE_in_REGION = {
	#First switches between strategic regions, then goes into each state
	#Grabs the specific variable, and adds the points
	#Extremely long.
	#Sorry.
	###
	switch = {
		trigger = $REGION$
		#Nile Basin
		1 = {
			switch = {
				trigger = $STATE$
				1 = {
					change_variable = {
						name = babylon_berlin_conference_points_in_1_1
						add = $POINTS$
					}
				}
				2 = {
					change_variable = {
						name = babylon_berlin_conference_points_in_1_2
						add = $POINTS$
					}
				}
				3 = {
					change_variable = {
						name = babylon_berlin_conference_points_in_1_3
						add = $POINTS$
					}
				}
				4 = {
					change_variable = {
						name = babylon_berlin_conference_points_in_1_4
						add = $POINTS$
					}
				}
				5 = {
					change_variable = {
						name = babylon_berlin_conference_points_in_1_5
						add = $POINTS$
					}
				}
				6 = {
					change_variable = {
						name = babylon_berlin_conference_points_in_1_6
						add = $POINTS$
					}
				}
				7 = {
					change_variable = {
						name = babylon_berlin_conference_points_in_1_7
						add = $POINTS$
					}
				}
				8 = {
					change_variable = {
						name = babylon_berlin_conference_points_in_1_8
						add = $POINTS$
					}
				}
				9 = {
					change_variable = {
						name = babylon_berlin_conference_points_in_1_9
						add = $POINTS$
					}
				}
				10 = {
					change_variable = {
						name = babylon_berlin_conference_points_in_1_10
						add = $POINTS$
					}
				}
				11 = {
					change_variable = {
						name = babylon_berlin_conference_points_in_1_11
						add = $POINTS$
					}
				}
			}
		}
		#Ethiopia
		2 = {
			switch = {
				trigger = $STATE$
				1 = {
					change_variable = {
						name = babylon_berlin_conference_points_in_2_1
						add = $POINTS$
					}
				}
				2 = {
					change_variable = {
						name = babylon_berlin_conference_points_in_2_2
						add = $POINTS$
					}
				}
				3 = {
					change_variable = {
						name = babylon_berlin_conference_points_in_2_3
						add = $POINTS$
					}
				}
				4 = {
					change_variable = {
						name = babylon_berlin_conference_points_in_2_4
						add = $POINTS$
					}
				}
				5 = {
					change_variable = {
						name = babylon_berlin_conference_points_in_2_5
						add = $POINTS$
					}
				}
			}
		}
		#North Africa
		3 = {
			switch = {
				trigger = $STATE$
				1 = {
					change_variable = {
						name = babylon_berlin_conference_points_in_3_1
						add = $POINTS$
					}
				}
				2 = {
					change_variable = {
						name = babylon_berlin_conference_points_in_3_2
						add = $POINTS$
					}
				}
				3 = {
					change_variable = {
						name = babylon_berlin_conference_points_in_3_3
						add = $POINTS$
					}
				}
				4 = {
					change_variable = {
						name = babylon_berlin_conference_points_in_3_4
						add = $POINTS$
					}
				}
				5 = {
					change_variable = {
						name = babylon_berlin_conference_points_in_3_5
						add = $POINTS$
					}
				}
				6 = {
					change_variable = {
						name = babylon_berlin_conference_points_in_3_6
						add = $POINTS$
					}
				}
				7 = {
					change_variable = {
						name = babylon_berlin_conference_points_in_3_7
						add = $POINTS$
					}
				}
				8 = {
					change_variable = {
						name = babylon_berlin_conference_points_in_3_8
						add = $POINTS$
					}
				}
				9 = {
					change_variable = {
						name = babylon_berlin_conference_points_in_3_9
						add = $POINTS$
					}
				}
				10 = {
					change_variable = {
						name = babylon_berlin_conference_points_in_3_10
						add = $POINTS$
					}
				}
				11 = {
					change_variable = {
						name = babylon_berlin_conference_points_in_3_11
						add = $POINTS$
					}
				}
				12 = {
					change_variable = {
						name = babylon_berlin_conference_points_in_3_12
						add = $POINTS$
					}
				}
				13 = {
					change_variable = {
						name = babylon_berlin_conference_points_in_3_13
						add = $POINTS$
					}
				}
				14 = {
					change_variable = {
						name = babylon_berlin_conference_points_in_3_14
						add = $POINTS$
					}
				}
			}
		}
		#Senegal
		4 = {
			switch = {
				trigger = $STATE$
				1 = {
					change_variable = {
						name = babylon_berlin_conference_points_in_4_1
						add = $POINTS$
					}
				}
				2 = {
					change_variable = {
						name = babylon_berlin_conference_points_in_4_2
						add = $POINTS$
					}
				}
				3 = {
					change_variable = {
						name = babylon_berlin_conference_points_in_4_3
						add = $POINTS$
					}
				}
				4 = {
					change_variable = {
						name = babylon_berlin_conference_points_in_4_4
						add = $POINTS$
					}
				}
				5 = {
					change_variable = {
						name = babylon_berlin_conference_points_in_4_5
						add = $POINTS$
					}
				}
				6 = {
					change_variable = {
						name = babylon_berlin_conference_points_in_4_6
						add = $POINTS$
					}
				}
				7 = {
					change_variable = {
						name = babylon_berlin_conference_points_in_4_7
						add = $POINTS$
					}
				}
				8 = {
					change_variable = {
						name = babylon_berlin_conference_points_in_4_8
						add = $POINTS$
					}
				}
				9 = {
					change_variable = {
						name = babylon_berlin_conference_points_in_4_9
						add = $POINTS$
					}
				}
				10 = {
					change_variable = {
						name = babylon_berlin_conference_points_in_4_10
						add = $POINTS$
					}
				}
				11 = {
					change_variable = {
						name = babylon_berlin_conference_points_in_4_11
						add = $POINTS$
					}
				}
				12 = {
					change_variable = {
						name = babylon_berlin_conference_points_in_4_12
						add = $POINTS$
					}
				}
				13 = {
					change_variable = {
						name = babylon_berlin_conference_points_in_4_13
						add = $POINTS$
					}
				}
				14 = {
					change_variable = {
						name = babylon_berlin_conference_points_in_4_14
						add = $POINTS$
					}
				}
			}
		}
		#Niger
		5 = {
			switch = {
				trigger = $STATE$
				1 = {
					change_variable = {
						name = babylon_berlin_conference_points_in_5_1
						add = $POINTS$
					}
				}
				2 = {
					change_variable = {
						name = babylon_berlin_conference_points_in_5_2
						add = $POINTS$
					}
				}
				3 = {
					change_variable = {
						name = babylon_berlin_conference_points_in_5_3
						add = $POINTS$
					}
				}
				4 = {
					change_variable = {
						name = babylon_berlin_conference_points_in_5_4
						add = $POINTS$
					}
				}
				5 = {
					change_variable = {
						name = babylon_berlin_conference_points_in_5_5
						add = $POINTS$
					}
				}
				6 = {
					change_variable = {
						name = babylon_berlin_conference_points_in_5_6
						add = $POINTS$
					}
				}
				7 = {
					change_variable = {
						name = babylon_berlin_conference_points_in_5_7
						add = $POINTS$
					}
				}
				8 = {
					change_variable = {
						name = babylon_berlin_conference_points_in_5_8
						add = $POINTS$
					}
				}
				9 = {
					change_variable = {
						name = babylon_berlin_conference_points_in_5_9
						add = $POINTS$
					}
				}
				10 = {
					change_variable = {
						name = babylon_berlin_conference_points_in_5_10
						add = $POINTS$
					}
				}
				11 = {
					change_variable = {
						name = babylon_berlin_conference_points_in_5_11
						add = $POINTS$
					}
				}
				12 = {
					change_variable = {
						name = babylon_berlin_conference_points_in_5_12
						add = $POINTS$
					}
				}
				13 = {
					change_variable = {
						name = babylon_berlin_conference_points_in_5_13
						add = $POINTS$
					}
				}
				14 = {
					change_variable = {
						name = babylon_berlin_conference_points_in_5_14
						add = $POINTS$
					}
				}
			}
		}
		#Congo
		6 = {
			switch = {
				trigger = $STATE$
				1 = {
					change_variable = {
						name = babylon_berlin_conference_points_in_6_1
						add = $POINTS$
					}
				}
				2 = {
					change_variable = {
						name = babylon_berlin_conference_points_in_6_2
						add = $POINTS$
					}
				}
				3 = {
					change_variable = {
						name = babylon_berlin_conference_points_in_6_3
						add = $POINTS$
					}
				}
				4 = {
					change_variable = {
						name = babylon_berlin_conference_points_in_6_4
						add = $POINTS$
					}
				}
				5 = {
					change_variable = {
						name = babylon_berlin_conference_points_in_6_5
						add = $POINTS$
					}
				}
				6 = {
					change_variable = {
						name = babylon_berlin_conference_points_in_6_6
						add = $POINTS$
					}
				}
				7 = {
					change_variable = {
						name = babylon_berlin_conference_points_in_6_7
						add = $POINTS$
					}
				}
				8 = {
					change_variable = {
						name = babylon_berlin_conference_points_in_6_8
						add = $POINTS$
					}
				}
				9 = {
					change_variable = {
						name = babylon_berlin_conference_points_in_6_9
						add = $POINTS$
					}
				}
				10 = {
					change_variable = {
						name = babylon_berlin_conference_points_in_6_10
						add = $POINTS$
					}
				}
				11 = {
					change_variable = {
						name = babylon_berlin_conference_points_in_6_11
						add = $POINTS$
					}
				}
				12 = {
					change_variable = {
						name = babylon_berlin_conference_points_in_6_12
						add = $POINTS$
					}
				}
				13 = {
					change_variable = {
						name = babylon_berlin_conference_points_in_6_13
						add = $POINTS$
					}
				}
			}
		}
		#South Africa
		7 = {
			switch = {
				trigger = $STATE$
				1 = {
					change_variable = {
						name = babylon_berlin_conference_points_in_7_1
						add = $POINTS$
					}
				}
				2 = {
					change_variable = {
						name = babylon_berlin_conference_points_in_7_2
						add = $POINTS$
					}
				}
				3 = {
					change_variable = {
						name = babylon_berlin_conference_points_in_7_3
						add = $POINTS$
					}
				}
				4 = {
					change_variable = {
						name = babylon_berlin_conference_points_in_7_4
						add = $POINTS$
					}
				}
				5 = {
					change_variable = {
						name = babylon_berlin_conference_points_in_7_5
						add = $POINTS$
					}
				}
				6 = {
					change_variable = {
						name = babylon_berlin_conference_points_in_7_6
						add = $POINTS$
					}
				}
				7 = {
					change_variable = {
						name = babylon_berlin_conference_points_in_7_7
						add = $POINTS$
					}
				}
				8 = {
					change_variable = {
						name = babylon_berlin_conference_points_in_7_8
						add = $POINTS$
					}
				}
				9 = {
					change_variable = {
						name = babylon_berlin_conference_points_in_7_9
						add = $POINTS$
					}
				}
				10 = {
					change_variable = {
						name = babylon_berlin_conference_points_in_7_10
						add = $POINTS$
					}
				}
				11 = {
					change_variable = {
						name = babylon_berlin_conference_points_in_7_11
						add = $POINTS$
					}
				}
			}
		}
		#Zanj
		8 = {
			switch = {
				trigger = $STATE$
				1 = {
					change_variable = {
						name = babylon_berlin_conference_points_in_8_1
						add = $POINTS$
					}
				}
				2 = {
					change_variable = {
						name = babylon_berlin_conference_points_in_8_2
						add = $POINTS$
					}
				}
				3 = {
					change_variable = {
						name = babylon_berlin_conference_points_in_8_3
						add = $POINTS$
					}
				}
				4 = {
					change_variable = {
						name = babylon_berlin_conference_points_in_8_4
						add = $POINTS$
					}
				}
				5 = {
					change_variable = {
						name = babylon_berlin_conference_points_in_8_5
						add = $POINTS$
					}
				}
				6 = {
					change_variable = {
						name = babylon_berlin_conference_points_in_8_6
						add = $POINTS$
					}
				}
				7 = {
					change_variable = {
						name = babylon_berlin_conference_points_in_8_7
						add = $POINTS$
					}
				}
				8 = {
					change_variable = {
						name = babylon_berlin_conference_points_in_8_8
						add = $POINTS$
					}
				}
				9 = {
					change_variable = {
						name = babylon_berlin_conference_points_in_8_9
						add = $POINTS$
					}
				}
				10 = {
					change_variable = {
						name = babylon_berlin_conference_points_in_8_10
						add = $POINTS$
					}
				}
				11 = {
					change_variable = {
						name = babylon_berlin_conference_points_in_8_11
						add = $POINTS$
					}
				}
				12 = {
					change_variable = {
						name = babylon_berlin_conference_points_in_8_12
						add = $POINTS$
					}
				}
			}
		}
	}
	#####
	# Change the remaining points
	# Refreshingly simple
	# remove points from babylon_berlin_conference_points_remaining
	# If the points var is positive, remove a point from it
	# If the points var is negative (meaning you're removing a point from a state), remove a negative point, meaning you actually add a point to the remaining var!
	# Its a win-win!
	change_variable = {
		name = babylon_berlin_conference_points_remaining
		subtract = $POINTS$
	}
}

initialise_STATE_in_REGION_point_variable = {
	switch = {
		trigger = $REGION$
		#Nile Basin
		1 = {
			switch = {
				trigger = $STATE$
				1 = {
					if = {
						limit = {
							NOT = {
								has_variable = babylon_berlin_conference_points_in_1_1
							}
						}
						set_variable = {
							name = babylon_berlin_conference_points_in_1_1
							value = 0
						}
					}
				}
				2 = {
					if = {
						limit = {
							NOT = {
								has_variable = babylon_berlin_conference_points_in_1_2
							}
						}
						set_variable = {
							name = babylon_berlin_conference_points_in_1_2
							value = 0
						}
					}
				}
				3 = {
					if = {
						limit = {
							NOT = {
								has_variable = babylon_berlin_conference_points_in_1_3
							}
						}
						set_variable = {
							name = babylon_berlin_conference_points_in_1_3
							value = 0
						}
					}
				}
				4 = {
					if = {
						limit = {
							NOT = {
								has_variable = babylon_berlin_conference_points_in_1_4
							}
						}
						set_variable = {
							name = babylon_berlin_conference_points_in_1_4
							value = 0
						}
					}
				}
				5 = {
					if = {
						limit = {
							NOT = {
								has_variable = babylon_berlin_conference_points_in_1_5
							}
						}
						set_variable = {
							name = babylon_berlin_conference_points_in_1_5
							value = 0
						}
					}
				}
				6 = {
					if = {
						limit = {
							NOT = {
								has_variable = babylon_berlin_conference_points_in_1_6
							}
						}
						set_variable = {
							name = babylon_berlin_conference_points_in_1_6
							value = 0
						}
					}
				}
				7 = {
					if = {
						limit = {
							NOT = {
								has_variable = babylon_berlin_conference_points_in_1_7
							}
						}
						set_variable = {
							name = babylon_berlin_conference_points_in_1_7
							value = 0
						}
					}
				}
				8 = {
					if = {
						limit = {
							NOT = {
								has_variable = babylon_berlin_conference_points_in_1_8
							}
						}
						set_variable = {
							name = babylon_berlin_conference_points_in_1_8
							value = 0
						}
					}
				}
				9 = {
					if = {
						limit = {
							NOT = {
								has_variable = babylon_berlin_conference_points_in_1_9
							}
						}
						set_variable = {
							name = babylon_berlin_conference_points_in_1_9
							value = 0
						}
					}
				}
				10 = {
					if = {
						limit = {
							NOT = {
								has_variable = babylon_berlin_conference_points_in_1_10
							}
						}
						set_variable = {
							name = babylon_berlin_conference_points_in_1_10
							value = 0
						}
					}
				}
				11 = {
					if = {
						limit = {
							NOT = {
								has_variable = babylon_berlin_conference_points_in_1_11
							}
						}
						set_variable = {
							name = babylon_berlin_conference_points_in_1_11
							value = 0
						}
					}
				}
			}
		}
		#Ethiopia
		2 = {
			switch = {
				trigger = $STATE$
				1 = {
					if = {
						limit = {
							NOT = {
								has_variable = babylon_berlin_conference_points_in_2_1
							}
						}
						set_variable = {
							name = babylon_berlin_conference_points_in_2_1
							value = 0
						}
					}
				}
				2 = {
					if = {
						limit = {
							NOT = {
								has_variable = babylon_berlin_conference_points_in_2_2
							}
						}
						set_variable = {
							name = babylon_berlin_conference_points_in_2_2
							value = 0
						}
					}
				}
				3 = {
					if = {
						limit = {
							NOT = {
								has_variable = babylon_berlin_conference_points_in_2_3
							}
						}
						set_variable = {
							name = babylon_berlin_conference_points_in_2_3
							value = 0
						}
					}
				}
				4 = {
					if = {
						limit = {
							NOT = {
								has_variable = babylon_berlin_conference_points_in_2_4
							}
						}
						set_variable = {
							name = babylon_berlin_conference_points_in_2_4
							value = 0
						}
					}
				}
				5 = {
					if = {
						limit = {
							NOT = {
								has_variable = babylon_berlin_conference_points_in_2_5
							}
						}
						set_variable = {
							name = babylon_berlin_conference_points_in_2_5
							value = 0
						}
					}
				}
			}
		}
		#North Africa
		3 = {
			switch = {
				trigger = $STATE$
				1 = {
					if = {
						limit = {
							NOT = {
								has_variable = babylon_berlin_conference_points_in_3_1
							}
						}
						set_variable = {
							name = babylon_berlin_conference_points_in_3_1
							value = 0
						}
					}
				}
				2 = {
					if = {
						limit = {
							NOT = {
								has_variable = babylon_berlin_conference_points_in_3_2
							}
						}
						set_variable = {
							name = babylon_berlin_conference_points_in_3_2
							value = 0
						}
					}
				}
				3 = {
					if = {
						limit = {
							NOT = {
								has_variable = babylon_berlin_conference_points_in_3_3
							}
						}
						set_variable = {
							name = babylon_berlin_conference_points_in_3_3
							value = 0
						}
					}
				}
				4 = {
					if = {
						limit = {
							NOT = {
								has_variable = babylon_berlin_conference_points_in_3_4
							}
						}
						set_variable = {
							name = babylon_berlin_conference_points_in_3_4
							value = 0
						}
					}
				}
				5 = {
					if = {
						limit = {
							NOT = {
								has_variable = babylon_berlin_conference_points_in_3_5
							}
						}
						set_variable = {
							name = babylon_berlin_conference_points_in_3_5
							value = 0
						}
					}
				}
				6 = {
					if = {
						limit = {
							NOT = {
								has_variable = babylon_berlin_conference_points_in_3_6
							}
						}
						set_variable = {
							name = babylon_berlin_conference_points_in_3_6
							value = 0
						}
					}
				}
				7 = {
					if = {
						limit = {
							NOT = {
								has_variable = babylon_berlin_conference_points_in_3_7
							}
						}
						set_variable = {
							name = babylon_berlin_conference_points_in_3_7
							value = 0
						}
					}
				}
				8 = {
					if = {
						limit = {
							NOT = {
								has_variable = babylon_berlin_conference_points_in_3_8
							}
						}
						set_variable = {
							name = babylon_berlin_conference_points_in_3_8
							value = 0
						}
					}
				}
				9 = {
					if = {
						limit = {
							NOT = {
								has_variable = babylon_berlin_conference_points_in_3_9
							}
						}
						set_variable = {
							name = babylon_berlin_conference_points_in_3_9
							value = 0
						}
					}
				}
				10 = {
					if = {
						limit = {
							NOT = {
								has_variable = babylon_berlin_conference_points_in_3_10
							}
						}
						set_variable = {
							name = babylon_berlin_conference_points_in_3_10
							value = 0
						}
					}
				}
				11 = {
					if = {
						limit = {
							NOT = {
								has_variable = babylon_berlin_conference_points_in_3_11
							}
						}
						set_variable = {
							name = babylon_berlin_conference_points_in_3_11
							value = 0
						}
					}
				}
				12 = {
					if = {
						limit = {
							NOT = {
								has_variable = babylon_berlin_conference_points_in_3_12
							}
						}
						set_variable = {
							name = babylon_berlin_conference_points_in_3_12
							value = 0
						}
					}
				}
				13 = {
					if = {
						limit = {
							NOT = {
								has_variable = babylon_berlin_conference_points_in_3_13
							}
						}
						set_variable = {
							name = babylon_berlin_conference_points_in_3_13
							value = 0
						}
					}
				}
				14 = {
					if = {
						limit = {
							NOT = {
								has_variable = babylon_berlin_conference_points_in_3_14
							}
						}
						set_variable = {
							name = babylon_berlin_conference_points_in_3_14
							value = 0
						}
					}
				}
			}
		}
		#Senegal
		4 = {
			switch = {
				trigger = $STATE$
				1 = {
					if = {
						limit = {
							NOT = {
								has_variable = babylon_berlin_conference_points_in_4_1
							}
						}
						set_variable = {
							name = babylon_berlin_conference_points_in_4_1
							value = 0
						}
					}
				}
				2 = {
					if = {
						limit = {
							NOT = {
								has_variable = babylon_berlin_conference_points_in_4_2
							}
						}
						set_variable = {
							name = babylon_berlin_conference_points_in_4_2
							value = 0
						}
					}
				}
				3 = {
					if = {
						limit = {
							NOT = {
								has_variable = babylon_berlin_conference_points_in_4_3
							}
						}
						set_variable = {
							name = babylon_berlin_conference_points_in_4_3
							value = 0
						}
					}
				}
				4 = {
					if = {
						limit = {
							NOT = {
								has_variable = babylon_berlin_conference_points_in_4_4
							}
						}
						set_variable = {
							name = babylon_berlin_conference_points_in_4_4
							value = 0
						}
					}
				}
				5 = {
					if = {
						limit = {
							NOT = {
								has_variable = babylon_berlin_conference_points_in_4_5
							}
						}
						set_variable = {
							name = babylon_berlin_conference_points_in_4_5
							value = 0
						}
					}
				}
				6 = {
					if = {
						limit = {
							NOT = {
								has_variable = babylon_berlin_conference_points_in_4_6
							}
						}
						set_variable = {
							name = babylon_berlin_conference_points_in_4_6
							value = 0
						}
					}
				}
				7 = {
					if = {
						limit = {
							NOT = {
								has_variable = babylon_berlin_conference_points_in_4_7
							}
						}
						set_variable = {
							name = babylon_berlin_conference_points_in_4_7
							value = 0
						}
					}
				}
				8 = {
					if = {
						limit = {
							NOT = {
								has_variable = babylon_berlin_conference_points_in_4_8
							}
						}
						set_variable = {
							name = babylon_berlin_conference_points_in_4_8
							value = 0
						}
					}
				}
				9 = {
					if = {
						limit = {
							NOT = {
								has_variable = babylon_berlin_conference_points_in_4_9
							}
						}
						set_variable = {
							name = babylon_berlin_conference_points_in_4_9
							value = 0
						}
					}
				}
				10 = {
					if = {
						limit = {
							NOT = {
								has_variable = babylon_berlin_conference_points_in_4_10
							}
						}
						set_variable = {
							name = babylon_berlin_conference_points_in_4_10
							value = 0
						}
					}
				}
				11 = {
					if = {
						limit = {
							NOT = {
								has_variable = babylon_berlin_conference_points_in_4_11
							}
						}
						set_variable = {
							name = babylon_berlin_conference_points_in_4_11
							value = 0
						}
					}
				}
				12 = {
					if = {
						limit = {
							NOT = {
								has_variable = babylon_berlin_conference_points_in_4_12
							}
						}
						set_variable = {
							name = babylon_berlin_conference_points_in_4_12
							value = 0
						}
					}
				}
				13 = {
					if = {
						limit = {
							NOT = {
								has_variable = babylon_berlin_conference_points_in_4_13
							}
						}
						set_variable = {
							name = babylon_berlin_conference_points_in_4_13
							value = 0
						}
					}
				}
				14 = {
					if = {
						limit = {
							NOT = {
								has_variable = babylon_berlin_conference_points_in_4_14
							}
						}
						set_variable = {
							name = babylon_berlin_conference_points_in_4_14
							value = 0
						}
					}
				}
			}
		}
		#Niger
		5 = {
			switch = {
				trigger = $STATE$
				1 = {
					if = {
						limit = {
							NOT = {
								has_variable = babylon_berlin_conference_points_in_5_1
							}
						}
						set_variable = {
							name = babylon_berlin_conference_points_in_5_1
							value = 0
						}
					}
				}
				2 = {
					if = {
						limit = {
							NOT = {
								has_variable = babylon_berlin_conference_points_in_5_2
							}
						}
						set_variable = {
							name = babylon_berlin_conference_points_in_5_2
							value = 0
						}
					}
				}
				3 = {
					if = {
						limit = {
							NOT = {
								has_variable = babylon_berlin_conference_points_in_5_3
							}
						}
						set_variable = {
							name = babylon_berlin_conference_points_in_5_3
							value = 0
						}
					}
				}
				4 = {
					if = {
						limit = {
							NOT = {
								has_variable = babylon_berlin_conference_points_in_5_4
							}
						}
						set_variable = {
							name = babylon_berlin_conference_points_in_5_4
							value = 0
						}
					}
				}
				5 = {
					if = {
						limit = {
							NOT = {
								has_variable = babylon_berlin_conference_points_in_5_5
							}
						}
						set_variable = {
							name = babylon_berlin_conference_points_in_5_5
							value = 0
						}
					}
				}
				6 = {
					if = {
						limit = {
							NOT = {
								has_variable = babylon_berlin_conference_points_in_5_6
							}
						}
						set_variable = {
							name = babylon_berlin_conference_points_in_5_6
							value = 0
						}
					}
				}
				7 = {
					if = {
						limit = {
							NOT = {
								has_variable = babylon_berlin_conference_points_in_5_7
							}
						}
						set_variable = {
							name = babylon_berlin_conference_points_in_5_7
							value = 0
						}
					}
				}
				8 = {
					if = {
						limit = {
							NOT = {
								has_variable = babylon_berlin_conference_points_in_5_8
							}
						}
						set_variable = {
							name = babylon_berlin_conference_points_in_5_8
							value = 0
						}
					}
				}
				9 = {
					if = {
						limit = {
							NOT = {
								has_variable = babylon_berlin_conference_points_in_5_9
							}
						}
						set_variable = {
							name = babylon_berlin_conference_points_in_5_9
							value = 0
						}
					}
				}
				10 = {
					if = {
						limit = {
							NOT = {
								has_variable = babylon_berlin_conference_points_in_5_10
							}
						}
						set_variable = {
							name = babylon_berlin_conference_points_in_5_10
							value = 0
						}
					}
				}
				11 = {
					if = {
						limit = {
							NOT = {
								has_variable = babylon_berlin_conference_points_in_5_11
							}
						}
						set_variable = {
							name = babylon_berlin_conference_points_in_5_11
							value = 0
						}
					}
				}
				12 = {
					if = {
						limit = {
							NOT = {
								has_variable = babylon_berlin_conference_points_in_5_12
							}
						}
						set_variable = {
							name = babylon_berlin_conference_points_in_5_12
							value = 0
						}
					}
				}
				13 = {
					if = {
						limit = {
							NOT = {
								has_variable = babylon_berlin_conference_points_in_5_13
							}
						}
						set_variable = {
							name = babylon_berlin_conference_points_in_5_13
							value = 0
						}
					}
				}
				14 = {
					if = {
						limit = {
							NOT = {
								has_variable = babylon_berlin_conference_points_in_5_14
							}
						}
						set_variable = {
							name = babylon_berlin_conference_points_in_5_14
							value = 0
						}
					}
				}
			}
		}
		#Congo
		6 = {
			switch = {
				trigger = $STATE$
				1 = {
					if = {
						limit = {
							NOT = {
								has_variable = babylon_berlin_conference_points_in_6_1
							}
						}
						set_variable = {
							name = babylon_berlin_conference_points_in_6_1
							value = 0
						}
					}
				}
				2 = {
					if = {
						limit = {
							NOT = {
								has_variable = babylon_berlin_conference_points_in_6_2
							}
						}
						set_variable = {
							name = babylon_berlin_conference_points_in_6_2
							value = 0
						}
					}
				}
				3 = {
					if = {
						limit = {
							NOT = {
								has_variable = babylon_berlin_conference_points_in_6_3
							}
						}
						set_variable = {
							name = babylon_berlin_conference_points_in_6_3
							value = 0
						}
					}
				}
				4 = {
					if = {
						limit = {
							NOT = {
								has_variable = babylon_berlin_conference_points_in_6_4
							}
						}
						set_variable = {
							name = babylon_berlin_conference_points_in_6_4
							value = 0
						}
					}
				}
				5 = {
					if = {
						limit = {
							NOT = {
								has_variable = babylon_berlin_conference_points_in_6_5
							}
						}
						set_variable = {
							name = babylon_berlin_conference_points_in_6_5
							value = 0
						}
					}
				}
				6 = {
					if = {
						limit = {
							NOT = {
								has_variable = babylon_berlin_conference_points_in_6_6
							}
						}
						set_variable = {
							name = babylon_berlin_conference_points_in_6_6
							value = 0
						}
					}
				}
				7 = {
					if = {
						limit = {
							NOT = {
								has_variable = babylon_berlin_conference_points_in_6_7
							}
						}
						set_variable = {
							name = babylon_berlin_conference_points_in_6_7
							value = 0
						}
					}
				}
				8 = {
					if = {
						limit = {
							NOT = {
								has_variable = babylon_berlin_conference_points_in_6_8
							}
						}
						set_variable = {
							name = babylon_berlin_conference_points_in_6_8
							value = 0
						}
					}
				}
				9 = {
					if = {
						limit = {
							NOT = {
								has_variable = babylon_berlin_conference_points_in_6_9
							}
						}
						set_variable = {
							name = babylon_berlin_conference_points_in_6_9
							value = 0
						}
					}
				}
				10 = {
					if = {
						limit = {
							NOT = {
								has_variable = babylon_berlin_conference_points_in_6_10
							}
						}
						set_variable = {
							name = babylon_berlin_conference_points_in_6_10
							value = 0
						}
					}
				}
				11 = {
					if = {
						limit = {
							NOT = {
								has_variable = babylon_berlin_conference_points_in_6_11
							}
						}
						set_variable = {
							name = babylon_berlin_conference_points_in_6_11
							value = 0
						}
					}
				}
				12 = {
					if = {
						limit = {
							NOT = {
								has_variable = babylon_berlin_conference_points_in_6_12
							}
						}
						set_variable = {
							name = babylon_berlin_conference_points_in_6_12
							value = 0
						}
					}
				}
				13 = {
					if = {
						limit = {
							NOT = {
								has_variable = babylon_berlin_conference_points_in_6_13
							}
						}
						set_variable = {
							name = babylon_berlin_conference_points_in_6_13
							value = 0
						}
					}
				}
			}
		}
		#South Africa
		7 = {
			switch = {
				trigger = $STATE$
				1 = {
					if = {
						limit = {
							NOT = {
								has_variable = babylon_berlin_conference_points_in_7_1
							}
						}
						set_variable = {
							name = babylon_berlin_conference_points_in_7_1
							value = 0
						}
					}
				}
				2 = {
					if = {
						limit = {
							NOT = {
								has_variable = babylon_berlin_conference_points_in_7_2
							}
						}
						set_variable = {
							name = babylon_berlin_conference_points_in_7_2
							value = 0
						}
					}
				}
				3 = {
					if = {
						limit = {
							NOT = {
								has_variable = babylon_berlin_conference_points_in_7_3
							}
						}
						set_variable = {
							name = babylon_berlin_conference_points_in_7_3
							value = 0
						}
					}
				}
				4 = {
					if = {
						limit = {
							NOT = {
								has_variable = babylon_berlin_conference_points_in_7_4
							}
						}
						set_variable = {
							name = babylon_berlin_conference_points_in_7_4
							value = 0
						}
					}
				}
				5 = {
					if = {
						limit = {
							NOT = {
								has_variable = babylon_berlin_conference_points_in_7_5
							}
						}
						set_variable = {
							name = babylon_berlin_conference_points_in_7_5
							value = 0
						}
					}
				}
				6 = {
					if = {
						limit = {
							NOT = {
								has_variable = babylon_berlin_conference_points_in_7_6
							}
						}
						set_variable = {
							name = babylon_berlin_conference_points_in_7_6
							value = 0
						}
					}
				}
				7 = {
					if = {
						limit = {
							NOT = {
								has_variable = babylon_berlin_conference_points_in_7_7
							}
						}
						set_variable = {
							name = babylon_berlin_conference_points_in_7_7
							value = 0
						}
					}
				}
				8 = {
					if = {
						limit = {
							NOT = {
								has_variable = babylon_berlin_conference_points_in_7_8
							}
						}
						set_variable = {
							name = babylon_berlin_conference_points_in_7_8
							value = 0
						}
					}
				}
				9 = {
					if = {
						limit = {
							NOT = {
								has_variable = babylon_berlin_conference_points_in_7_9
							}
						}
						set_variable = {
							name = babylon_berlin_conference_points_in_7_9
							value = 0
						}
					}
				}
				10 = {
					if = {
						limit = {
							NOT = {
								has_variable = babylon_berlin_conference_points_in_7_10
							}
						}
						set_variable = {
							name = babylon_berlin_conference_points_in_7_10
							value = 0
						}
					}
				}
				11 = {
					if = {
						limit = {
							NOT = {
								has_variable = babylon_berlin_conference_points_in_7_11
							}
						}
						set_variable = {
							name = babylon_berlin_conference_points_in_7_11
							value = 0
						}
					}
				}
			}
		}
		#Zanj
		8 = {
			switch = {
				trigger = $STATE$
				1 = {
					if = {
						limit = {
							NOT = {
								has_variable = babylon_berlin_conference_points_in_8_1
							}
						}
						set_variable = {
							name = babylon_berlin_conference_points_in_8_1
							value = 0
						}
					}
				}
				2 = {
					if = {
						limit = {
							NOT = {
								has_variable = babylon_berlin_conference_points_in_8_2
							}
						}
						set_variable = {
							name = babylon_berlin_conference_points_in_8_2
							value = 0
						}
					}
				}
				3 = {
					if = {
						limit = {
							NOT = {
								has_variable = babylon_berlin_conference_points_in_8_3
							}
						}
						set_variable = {
							name = babylon_berlin_conference_points_in_8_3
							value = 0
						}
					}
				}
				4 = {
					if = {
						limit = {
							NOT = {
								has_variable = babylon_berlin_conference_points_in_8_4
							}
						}
						set_variable = {
							name = babylon_berlin_conference_points_in_8_4
							value = 0
						}
					}
				}
				5 = {
					if = {
						limit = {
							NOT = {
								has_variable = babylon_berlin_conference_points_in_8_5
							}
						}
						set_variable = {
							name = babylon_berlin_conference_points_in_8_5
							value = 0
						}
					}
				}
				6 = {
					if = {
						limit = {
							NOT = {
								has_variable = babylon_berlin_conference_points_in_8_6
							}
						}
						set_variable = {
							name = babylon_berlin_conference_points_in_8_6
							value = 0
						}
					}
				}
				7 = {
					if = {
						limit = {
							NOT = {
								has_variable = babylon_berlin_conference_points_in_8_7
							}
						}
						set_variable = {
							name = babylon_berlin_conference_points_in_8_7
							value = 0
						}
					}
				}
				8 = {
					if = {
						limit = {
							NOT = {
								has_variable = babylon_berlin_conference_points_in_8_8
							}
						}
						set_variable = {
							name = babylon_berlin_conference_points_in_8_8
							value = 0
						}
					}
				}
				9 = {
					if = {
						limit = {
							NOT = {
								has_variable = babylon_berlin_conference_points_in_8_9
							}
						}
						set_variable = {
							name = babylon_berlin_conference_points_in_8_9
							value = 0
						}
					}
				}
				10 = {
					if = {
						limit = {
							NOT = {
								has_variable = babylon_berlin_conference_points_in_8_10
							}
						}
						set_variable = {
							name = babylon_berlin_conference_points_in_8_10
							value = 0
						}
					}
				}
				11 = {
					if = {
						limit = {
							NOT = {
								has_variable = babylon_berlin_conference_points_in_8_11
							}
						}
						set_variable = {
							name = babylon_berlin_conference_points_in_8_11
							value = 0
						}
					}
				}
				12 = {
					if = {
						limit = {
							NOT = {
								has_variable = babylon_berlin_conference_points_in_8_12
							}
						}
						set_variable = {
							name = babylon_berlin_conference_points_in_8_12
							value = 0
						}
					}
				}
			}
		}
	}
}

initialise_every_state = {
	### Egypt
	initialise_STATE_in_REGION_point_variable = {
		REGION = 1
		STATE = 1
	}
	initialise_STATE_in_REGION_point_variable = {
		REGION = 1
		STATE = 2
	}
	initialise_STATE_in_REGION_point_variable = {
		REGION = 1
		STATE = 3
	}
	initialise_STATE_in_REGION_point_variable = {
		REGION = 1
		STATE = 4
	}
	initialise_STATE_in_REGION_point_variable = {
		REGION = 1
		STATE = 5
	}
	initialise_STATE_in_REGION_point_variable = {
		REGION = 1
		STATE = 6
	}
	initialise_STATE_in_REGION_point_variable = {
		REGION = 1
		STATE = 7
	}
	initialise_STATE_in_REGION_point_variable = {
		REGION = 1
		STATE = 8
	}
	initialise_STATE_in_REGION_point_variable = {
		REGION = 1
		STATE = 9
	}
	initialise_STATE_in_REGION_point_variable = {
		REGION = 1
		STATE = 10
	}
	initialise_STATE_in_REGION_point_variable = {
		REGION = 1
		STATE = 11
	}
	### Ethiopia
	initialise_STATE_in_REGION_point_variable = {
		REGION = 2
		STATE = 1
	}
	initialise_STATE_in_REGION_point_variable = {
		REGION = 2
		STATE = 2
	}
	initialise_STATE_in_REGION_point_variable = {
		REGION = 2
		STATE = 3
	}
	initialise_STATE_in_REGION_point_variable = {
		REGION = 2
		STATE = 4
	}
	initialise_STATE_in_REGION_point_variable = {
		REGION = 2
		STATE = 5
	}
	### North Africa
	initialise_STATE_in_REGION_point_variable = {
		REGION = 3
		STATE = 1
	}
	initialise_STATE_in_REGION_point_variable = {
		REGION = 3
		STATE = 2
	}
	initialise_STATE_in_REGION_point_variable = {
		REGION = 3
		STATE = 3
	}
	initialise_STATE_in_REGION_point_variable = {
		REGION = 3
		STATE = 4
	}
	initialise_STATE_in_REGION_point_variable = {
		REGION = 3
		STATE = 5
	}
	initialise_STATE_in_REGION_point_variable = {
		REGION = 3
		STATE = 6
	}
	initialise_STATE_in_REGION_point_variable = {
		REGION = 3
		STATE = 7
	}
	initialise_STATE_in_REGION_point_variable = {
		REGION = 3
		STATE = 8
	}
	initialise_STATE_in_REGION_point_variable = {
		REGION = 3
		STATE = 9
	}
	initialise_STATE_in_REGION_point_variable = {
		REGION = 3
		STATE = 10
	}
	initialise_STATE_in_REGION_point_variable = {
		REGION = 3
		STATE = 11
	}
	initialise_STATE_in_REGION_point_variable = {
		REGION = 3
		STATE = 12
	}
	initialise_STATE_in_REGION_point_variable = {
		REGION = 3
		STATE = 13
	}
	initialise_STATE_in_REGION_point_variable = {
		REGION = 3
		STATE = 14
	}
	### Senegal
	initialise_STATE_in_REGION_point_variable = {
		REGION = 4
		STATE = 1
	}
	initialise_STATE_in_REGION_point_variable = {
		REGION = 4
		STATE = 2
	}
	initialise_STATE_in_REGION_point_variable = {
		REGION = 4
		STATE = 3
	}
	initialise_STATE_in_REGION_point_variable = {
		REGION = 4
		STATE = 4
	}
	initialise_STATE_in_REGION_point_variable = {
		REGION = 4
		STATE = 5
	}
	initialise_STATE_in_REGION_point_variable = {
		REGION = 4
		STATE = 6
	}
	initialise_STATE_in_REGION_point_variable = {
		REGION = 4
		STATE = 7
	}
	initialise_STATE_in_REGION_point_variable = {
		REGION = 4
		STATE = 8
	}
	initialise_STATE_in_REGION_point_variable = {
		REGION = 4
		STATE = 9
	}
	initialise_STATE_in_REGION_point_variable = {
		REGION = 4
		STATE = 10
	}
	initialise_STATE_in_REGION_point_variable = {
		REGION = 4
		STATE = 11
	}
	initialise_STATE_in_REGION_point_variable = {
		REGION = 4
		STATE = 12
	}
	initialise_STATE_in_REGION_point_variable = {
		REGION = 4
		STATE = 13
	}
	initialise_STATE_in_REGION_point_variable = {
		REGION = 4
		STATE = 14
	}
	### Niger
	initialise_STATE_in_REGION_point_variable = {
		REGION = 5
		STATE = 1
	}
	initialise_STATE_in_REGION_point_variable = {
		REGION = 5
		STATE = 2
	}
	initialise_STATE_in_REGION_point_variable = {
		REGION = 5
		STATE = 3
	}
	initialise_STATE_in_REGION_point_variable = {
		REGION = 5
		STATE = 4
	}
	initialise_STATE_in_REGION_point_variable = {
		REGION = 5
		STATE = 5
	}
	initialise_STATE_in_REGION_point_variable = {
		REGION = 5
		STATE = 6
	}
	initialise_STATE_in_REGION_point_variable = {
		REGION = 5
		STATE = 7
	}
	initialise_STATE_in_REGION_point_variable = {
		REGION = 5
		STATE = 8
	}
	initialise_STATE_in_REGION_point_variable = {
		REGION = 5
		STATE = 9
	}
	initialise_STATE_in_REGION_point_variable = {
		REGION = 5
		STATE = 10
	}
	initialise_STATE_in_REGION_point_variable = {
		REGION = 5
		STATE = 11
	}
	initialise_STATE_in_REGION_point_variable = {
		REGION = 5
		STATE = 12
	}
	initialise_STATE_in_REGION_point_variable = {
		REGION = 5
		STATE = 13
	}
	initialise_STATE_in_REGION_point_variable = {
		REGION = 5
		STATE = 14
	}
	### Congo
	initialise_STATE_in_REGION_point_variable = {
		REGION = 6
		STATE = 1
	}
	initialise_STATE_in_REGION_point_variable = {
		REGION = 6
		STATE = 2
	}
	initialise_STATE_in_REGION_point_variable = {
		REGION = 6
		STATE = 3
	}
	initialise_STATE_in_REGION_point_variable = {
		REGION = 6
		STATE = 4
	}
	initialise_STATE_in_REGION_point_variable = {
		REGION = 6
		STATE = 5
	}
	initialise_STATE_in_REGION_point_variable = {
		REGION = 6
		STATE = 6
	}
	initialise_STATE_in_REGION_point_variable = {
		REGION = 6
		STATE = 7
	}
	initialise_STATE_in_REGION_point_variable = {
		REGION = 6
		STATE = 8
	}
	initialise_STATE_in_REGION_point_variable = {
		REGION = 6
		STATE = 9
	}
	initialise_STATE_in_REGION_point_variable = {
		REGION = 6
		STATE = 10
	}
	initialise_STATE_in_REGION_point_variable = {
		REGION = 6
		STATE = 11
	}
	initialise_STATE_in_REGION_point_variable = {
		REGION = 6
		STATE = 12
	}
	initialise_STATE_in_REGION_point_variable = {
		REGION = 6
		STATE = 13
	}
	### South Africa
	initialise_STATE_in_REGION_point_variable = {
		REGION = 7
		STATE = 1
	}
	initialise_STATE_in_REGION_point_variable = {
		REGION = 7
		STATE = 2
	}
	initialise_STATE_in_REGION_point_variable = {
		REGION = 7
		STATE = 3
	}
	initialise_STATE_in_REGION_point_variable = {
		REGION = 7
		STATE = 4
	}
	initialise_STATE_in_REGION_point_variable = {
		REGION = 7
		STATE = 5
	}
	initialise_STATE_in_REGION_point_variable = {
		REGION = 7
		STATE = 6
	}
	initialise_STATE_in_REGION_point_variable = {
		REGION = 7
		STATE = 7
	}
	initialise_STATE_in_REGION_point_variable = {
		REGION = 7
		STATE = 8
	}
	initialise_STATE_in_REGION_point_variable = {
		REGION = 7
		STATE = 9
	}
	initialise_STATE_in_REGION_point_variable = {
		REGION = 7
		STATE = 10
	}
	initialise_STATE_in_REGION_point_variable = {
		REGION = 7
		STATE = 11
	}
	### Zanj
	initialise_STATE_in_REGION_point_variable = {
		REGION = 8
		STATE = 1
	}
	initialise_STATE_in_REGION_point_variable = {
		REGION = 8
		STATE = 2
	}
	initialise_STATE_in_REGION_point_variable = {
		REGION = 8
		STATE = 3
	}
	initialise_STATE_in_REGION_point_variable = {
		REGION = 8
		STATE = 4
	}
	initialise_STATE_in_REGION_point_variable = {
		REGION = 8
		STATE = 5
	}
	initialise_STATE_in_REGION_point_variable = {
		REGION = 8
		STATE = 6
	}
	initialise_STATE_in_REGION_point_variable = {
		REGION = 8
		STATE = 7
	}
	initialise_STATE_in_REGION_point_variable = {
		REGION = 8
		STATE = 8
	}
	initialise_STATE_in_REGION_point_variable = {
		REGION = 8
		STATE = 9
	}
	initialise_STATE_in_REGION_point_variable = {
		REGION = 8
		STATE = 10
	}
	initialise_STATE_in_REGION_point_variable = {
		REGION = 8
		STATE = 11
	}
	initialise_STATE_in_REGION_point_variable = {
		REGION = 8
		STATE = 12
	}
}

calculate_claims_in_REGION_STATE_VAR = {
	if = {
		#Only if state can actually be claimed
		limit = {
			babylon_berlin_conference_can_colonise_STATE_REGION = {
				REGION = $REGION$
				STATE = $STATE$
			}
		}
		#Initialise
		set_global_variable = {
			name = $VAR$_highscore
			value = 0
		}
		#Initialise
		set_global_variable = {
			name = $VAR$_total
			value = 0
		}
		every_country = {
			#Iterate through everyone with a stake in the state
			limit = {
				has_variable = $VAR$
				var:$VAR$ > 0
			}
			#Add to the total points given in state
			change_global_variable = {
				name = $VAR$_total
				add = var:$VAR$
			}
		}
		#Initialise the cutofff
		set_global_variable = {
			name = $VAR$_cutoff
			value = global_var:$VAR$_total
		}
		#Get 33%, the actual cutoff
		change_global_variable = {
			name = $VAR$_cutoff
			divide = 3
		}
		#Initialise the amount of claims thats been granted on this state
		set_global_variable = {
			name = $VAR$_claims_granted
			value = 0
		}
		# Undetermined how many times this will run; so a while loop is in order
		while = {
			limit = {
				# As long as theres still points in the cutoff
				global_var:$VAR$_cutoff > 0
				# 3 or less claims has been granted
				global_var:$VAR$_claims_granted <= 3
			}
			#Fetch a new highscore, minus the old holder
			set_global_variable = {
				name = $VAR$_highscore
				value = 0
			}
			every_country = {
				#Iterate through everyone with a stake in the state - except those previously granted the claim from above
				limit = {
					has_variable = $VAR$
					var:$VAR$ > 0
					NOT = {
						has_variable = $VAR$_claim_granted
					}
				}
				#Find the highscore among these countries
				if = {
					limit = {
						var:$VAR$ > global_var:$VAR$_highscore
					}
					set_global_variable = {
						name = $VAR$_highscore
						value = var:$VAR$
					}
				}
			}
			every_country = {
				# fetch 'every' country that has the exact highscore
				# unless the highscore is 0, which meant nobody tried to get it. /sad
				limit = {
					has_variable = $VAR$
					var:$VAR$ = global_var:$VAR$_highscore
					var:$VAR$ != 0
				}
				#Subtract the highscorers points from the cutoff
				change_global_variable = {
					name = $VAR$_cutoff
					subtract = var:$VAR$
				}
				#Grant a claim...
				grant_claim_on_REGION_STATE = {
					REGION = $REGION$
					STATE = $STATE$
				}
				# +1 to the variable tracking how many claims has been dished out
				change_global_variable = {
					name = $VAR$_claims_granted
					add = 1
				}
				#Make sure this doesnt run again
				set_variable = $VAR$_claim_granted
			}
			#Restart while loop
		}
		# Out of the while loop
		if = {
			limit = {
				#If theres more than 3 claims granted
				global_var:$VAR$_claims_granted > 3
			}
			#Start the super special Congo Free State round!
			congo_free_state_round_in_state_VAR = {
				REGION = $REGION$
				STATE = $STATE$
			}
		}
		# Set the state var for every country to 0
		# This ensures future rounds dont count this state as granting access
		every_country = {
			limit = {
				has_variable = $VAR$
				$VAR$ > 0
			}
			set_variable = {
				name = $VAR$
				value = 0
			}
		}
		if = {
			# If nobody managed to reach the state, give it to its free state
			# Still in the check for wether this was claimable
			limit = {
				OR = {
					NOT = {
						has_global_variable = $VAR$_claims_granted
					}
					global_var:$VAR$_claims_granted = 0
				}
			}
			congo_free_state_round_in_state_VAR = {
				REGION = $REGION$
				STATE = $STATE$
			}
		}
	}
}

grant_claim_on_REGION_STATE = {
	#Goes through... sigh...
	#Every single variable combo and grants a claim on the corresponding state...
	#I fucking hate that values from variables cant be pasted into new variable-names
	###
	### Egypt
	if = {
		limit = {
			$REGION$ = 1
			$STATE$ = 1
		}
		s:STATE_EGYPTIAN_DESERT = {
			add_claim = prev
		}
	}
	else_if = {
		limit = {
			$REGION$ = 1
			$STATE$ = 2
		}
		s:STATE_MIDDLE_EGYPT = {
			add_claim = prev
		}
	}
	else_if = {
		limit = {
			$REGION$ = 1
			$STATE$ = 3
		}
		s:STATE_UPPER_EGYPT = {
			add_claim = prev
		}
	}
	else_if = {
		limit = {
			$REGION$ = 1
			$STATE$ = 4
		}
		s:STATE_LOWER_EGYPT = {
			add_claim = prev
		}
	}
	else_if = {
		limit = {
			$REGION$ = 1
			$STATE$ = 5
		}
		s:STATE_SINAI = {
			add_claim = prev
		}
	}
	else_if = {
		limit = {
			$REGION$ = 1
			$STATE$ = 6
		}
		s:STATE_DONGOLA = {
			add_claim = prev
		}
	}
	else_if = {
		limit = {
			$REGION$ = 1
			$STATE$ = 7
		}
		s:STATE_DARFUR = {
			add_claim = prev
		}
	}
	else_if = {
		limit = {
			$REGION$ = 1
			$STATE$ = 8
		}
		s:STATE_KORDOFAN = {
			add_claim = prev
		}
	}
	else_if = {
		limit = {
			$REGION$ = 1
			$STATE$ = 9
		}
		s:STATE_EQUATORIA = {
			add_claim = prev
		}
	}
	else_if = {
		limit = {
			$REGION$ = 1
			$STATE$ = 10
		}
		s:STATE_BLUE_NILE = {
			add_claim = prev
		}
	}
	else_if = {
		limit = {
			$REGION$ = 1
			$STATE$ = 11
		}
		s:STATE_MATRUH = {
			add_claim = prev
		}
	}
	###
	### Ethiopia
	else_if = {
		limit = {
			$REGION$ = 2
			$STATE$ = 1
		}
		s:STATE_ERITREA = {
			add_claim = prev
		}
	}
	else_if = {
		limit = {
			$REGION$ = 2
			$STATE$ = 2
		}
		s:STATE_GONDER = {
			add_claim = prev
		}
	}
	else_if = {
		limit = {
			$REGION$ = 2
			$STATE$ = 3
		}
		s:STATE_AMHARA = {
			add_claim = prev
		}
	}
	else_if = {
		limit = {
			$REGION$ = 2
			$STATE$ = 4
		}
		s:STATE_OROMIA = {
			add_claim = prev
		}
	}
	else_if = {
		limit = {
			$REGION$ = 2
			$STATE$ = 5
		}
		s:STATE_SOMALILAND = {
			add_claim = prev
		}
	}
	###
	### North Africa
	else_if = {
		limit = {
			$REGION$ = 3
			$STATE$ = 1
		}
		s:STATE_WEST_SAHARA = {
			add_claim = prev
		}
	}
	else_if = {
		limit = {
			$REGION$ = 3
			$STATE$ = 2
		}
		s:STATE_SAHARA = {
			add_claim = prev
		}
	}
	else_if = {
		limit = {
			$REGION$ = 3
			$STATE$ = 3
		}
		s:STATE_EAST_SAHARA = {
			add_claim = prev
		}
	}
	else_if = {
		limit = {
			$REGION$ = 3
			$STATE$ = 4
		}
		s:STATE_MARRAKECH = {
			add_claim = prev
		}
	}
	else_if = {
		limit = {
			$REGION$ = 3
			$STATE$ = 5
		}
		s:STATE_FEZ = {
			add_claim = prev
		}
	}
	else_if = {
		limit = {
			$REGION$ = 3
			$STATE$ = 6
		}
		s:STATE_AL_RIF = {
			add_claim = prev
		}
	}
	else_if = {
		limit = {
			$REGION$ = 3
			$STATE$ = 7
		}
		s:STATE_INNER_MOROCCO = {
			add_claim = prev
		}
	}
	else_if = {
		limit = {
			$REGION$ = 3
			$STATE$ = 8
		}
		s:STATE_TLEMCEN = {
			add_claim = prev
		}
	}
	else_if = {
		limit = {
			$REGION$ = 3
			$STATE$ = 9
		}
		s:STATE_ALGIERS = {
			add_claim = prev
		}
	}
	else_if = {
		limit = {
			$REGION$ = 3
			$STATE$ = 10
		}
		s:STATE_CONSTANTINE = {
			add_claim = prev
		}
	}
	else_if = {
		limit = {
			$REGION$ = 3
			$STATE$ = 11
		}
		s:STATE_TUNISIA = {
			add_claim = prev
		}
	}
	else_if = {
		limit = {
			$REGION$ = 3
			$STATE$ = 12
		}
		s:STATE_LIBYA = {
			add_claim = prev
		}
	}
	else_if = {
		limit = {
			$REGION$ = 3
			$STATE$ = 13
		}
		s:STATE_LIBYAN_DESERT = {
			add_claim = prev
		}
	}
	else_if = {
		limit = {
			$REGION$ = 3
			$STATE$ = 14
		}
		s:STATE_TRIPOLI = {
			add_claim = prev
		}
	}
	###
	### Senegal
	else_if = {
		limit = {
			$REGION$ = 4
			$STATE$ = 1
		}
		s:STATE_GAMBIA = {
			add_claim = prev
		}
	}
	else_if = {
		limit = {
			$REGION$ = 4
			$STATE$ = 2
		}
		s:STATE_SENEGAL = {
			add_claim = prev
		}
	}
	else_if = {
		limit = {
			$REGION$ = 4
			$STATE$ = 3
		}
		s:STATE_GUINEA = {
			add_claim = prev
		}
	}
	else_if = {
		limit = {
			$REGION$ = 4
			$STATE$ = 4
		}
		s:STATE_SIERRA_LEONE = {
			add_claim = prev
		}
	}
	else_if = {
		limit = {
			$REGION$ = 4
			$STATE$ = 5
		}
		s:STATE_LIBERIA = {
			add_claim = prev
		}
	}
	else_if = {
		limit = {
			$REGION$ = 4
			$STATE$ = 6
		}
		s:STATE_WINDWARD_COAST = {
			add_claim = prev
		}
	}
	else_if = {
		limit = {
			$REGION$ = 4
			$STATE$ = 7
		}
		s:STATE_IVORY_COAST = {
			add_claim = prev
		}
	}
	else_if = {
		limit = {
			$REGION$ = 4
			$STATE$ = 8
		}
		s:STATE_GHANA = {
			add_claim = prev
		}
	}
	else_if = {
		limit = {
			$REGION$ = 4
			$STATE$ = 9
		}
		s:STATE_VOLTA = {
			add_claim = prev
		}
	}
	else_if = {
		limit = {
			$REGION$ = 4
			$STATE$ = 10
		}
		s:STATE_WESTERN_MALI = {
			add_claim = prev
		}
	}
	else_if = {
		limit = {
			$REGION$ = 4
			$STATE$ = 11
		}
		s:STATE_EASTERN_MALI = {
			add_claim = prev
		}
	}
	else_if = {
		limit = {
			$REGION$ = 4
			$STATE$ = 12
		}
		s:STATE_MAURITANIA = {
			add_claim = prev
		}
	}
	else_if = {
		limit = {
			$REGION$ = 4
			$STATE$ = 13
		}
		s:STATE_TIMBUKTU = {
			add_claim = prev
		}
	}
	else_if = {
		limit = {
			$REGION$ = 4
			$STATE$ = 14
		}
		s:STATE_INNER_MAURITANIA = {
			add_claim = prev
		}
	}
	###
	### Niger
	else_if = {
		limit = {
			$REGION$ = 5
			$STATE$ = 1
		}
		s:STATE_NIGERIA = {
			add_claim = prev
		}
	}
	else_if = {
		limit = {
			$REGION$ = 5
			$STATE$ = 2
		}
		s:STATE_NIGER_DELTA = {
			add_claim = prev
		}
	}
	else_if = {
		limit = {
			$REGION$ = 5
			$STATE$ = 3
		}
		s:STATE_YORUBA_STATES = {
			add_claim = prev
		}
	}
	else_if = {
		limit = {
			$REGION$ = 5
			$STATE$ = 4
		}
		s:STATE_OUTER_HAUSALAND = {
			add_claim = prev
		}
	}
	else_if = {
		limit = {
			$REGION$ = 5
			$STATE$ = 5
		}
		s:STATE_HAUSALAND = {
			add_claim = prev
		}
	}
	else_if = {
		limit = {
			$REGION$ = 5
			$STATE$ = 6
		}
		s:STATE_EAST_HAUSALAND = {
			add_claim = prev
		}
	}
	else_if = {
		limit = {
			$REGION$ = 5
			$STATE$ = 7
		}
		s:STATE_BORNU = {
			add_claim = prev
		}
	}
	else_if = {
		limit = {
			$REGION$ = 5
			$STATE$ = 8
		}
		s:STATE_BENIN = {
			add_claim = prev
		}
	}
	else_if = {
		limit = {
			$REGION$ = 5
			$STATE$ = 9
		}
		s:STATE_TOGO = {
			add_claim = prev
		}
	}
	else_if = {
		limit = {
			$REGION$ = 5
			$STATE$ = 10
		}
		s:STATE_DAHOMEY = {
			add_claim = prev
		}
	}
	else_if = {
		limit = {
			$REGION$ = 5
			$STATE$ = 11
		}
		s:STATE_NIGER = {
			add_claim = prev
		}
	}
	else_if = {
		limit = {
			$REGION$ = 5
			$STATE$ = 12
		}
		s:STATE_CHAD = {
			add_claim = prev
		}
	}
	else_if = {
		limit = {
			$REGION$ = 5
			$STATE$ = 13
		}
		s:STATE_NORTH_CAMEROON = {
			add_claim = prev
		}
	}
	else_if = {
		limit = {
			$REGION$ = 5
			$STATE$ = 14
		}
		s:STATE_WADDAI = {
			add_claim = prev
		}
	}
	###
	### Congo
	else_if = {
		limit = {
			$REGION$ = 6
			$STATE$ = 1
		}
		s:STATE_BAS_CONGO = {
			add_claim = prev
		}
	}
	else_if = {
		limit = {
			$REGION$ = 6
			$STATE$ = 2
		}
		s:STATE_CONGO = {
			add_claim = prev
		}
	}
	else_if = {
		limit = {
			$REGION$ = 6
			$STATE$ = 3
		}
		s:STATE_KASAI = {
			add_claim = prev
		}
	}
	else_if = {
		limit = {
			$REGION$ = 6
			$STATE$ = 4
		}
		s:STATE_EQUATEUR = {
			add_claim = prev
		}
	}
	else_if = {
		limit = {
			$REGION$ = 6
			$STATE$ = 5
		}
		s:STATE_CONGO_ORIENTALE = {
			add_claim = prev
		}
	}
	else_if = {
		limit = {
			$REGION$ = 6
			$STATE$ = 6
		}
		s:STATE_UBANGI_SHARI = {
			add_claim = prev
		}
	}
	else_if = {
		limit = {
			$REGION$ = 6
			$STATE$ = 7
		}
		s:STATE_NORTH_ANGOLA = {
			add_claim = prev
		}
	}
	else_if = {
		limit = {
			$REGION$ = 6
			$STATE$ = 8
		}
		s:STATE_EAST_ANGOLA = {
			add_claim = prev
		}
	}
	else_if = {
		limit = {
			$REGION$ = 6
			$STATE$ = 9
		}
		s:STATE_SOUTH_ANGOLA = {
			add_claim = prev
		}
	}
	else_if = {
		limit = {
			$REGION$ = 6
			$STATE$ = 10
		}
		s:STATE_ZAMBIA = {
			add_claim = prev
		}
	}
	else_if = {
		limit = {
			$REGION$ = 6
			$STATE$ = 11
		}
		s:STATE_GABON = {
			add_claim = prev
		}
	}
	else_if = {
		limit = {
			$REGION$ = 6
			$STATE$ = 12
		}
		s:STATE_SOUTH_CAMEROON = {
			add_claim = prev
		}
	}
	else_if = {
		limit = {
			$REGION$ = 6
			$STATE$ = 13
		}
		s:STATE_KATANGA = {
			add_claim = prev
		}
	}
	###
	### SouthAfrica
	else_if = {
		limit = {
			$REGION$ = 7
			$STATE$ = 1
		}
		s:STATE_NAMAQUALAND = {
			add_claim = prev
		}
	}
	else_if = {
		limit = {
			$REGION$ = 7
			$STATE$ = 2
		}
		s:STATE_BOTSWANA = {
			add_claim = prev
		}
	}
	else_if = {
		limit = {
			$REGION$ = 7
			$STATE$ = 3
		}
		s:STATE_NORTHERN_CAPE = {
			add_claim = prev
		}
	}
	else_if = {
		limit = {
			$REGION$ = 7
			$STATE$ = 4
		}
		s:STATE_CAPE_COLONY = {
			add_claim = prev
		}
	}
	else_if = {
		limit = {
			$REGION$ = 7
			$STATE$ = 5
		}
		s:STATE_EASTERN_CAPE = {
			add_claim = prev
		}
	}
	else_if = {
		limit = {
			$REGION$ = 7
			$STATE$ = 6
		}
		s:STATE_VRYSTAAT = {
			add_claim = prev
		}
	}
	else_if = {
		limit = {
			$REGION$ = 7
			$STATE$ = 7
		}
		s:STATE_TRANSVAAL = {
			add_claim = prev
		}
	}
	else_if = {
		limit = {
			$REGION$ = 7
			$STATE$ = 8
		}
		s:STATE_ZULULAND = {
			add_claim = prev
		}
	}
	else_if = {
		limit = {
			$REGION$ = 7
			$STATE$ = 9
		}
		s:STATE_HEREROLAND = {
			add_claim = prev
		}
	}
	else_if = {
		limit = {
			$REGION$ = 7
			$STATE$ = 10
		}
		s:STATE_LOURENCO_MARQUES = {
			add_claim = prev
		}
	}
	else_if = {
		limit = {
			$REGION$ = 7
			$STATE$ = 11
		}
		s:STATE_ZAMBEZI = {
			add_claim = prev
		}
	}
	###
	### Zanj
	else_if = {
		limit = {
			$REGION$ = 8
			$STATE$ = 1
		}
		s:STATE_ZANZIBAR = {
			add_claim = prev
		}
	}
	else_if = {
		limit = {
			$REGION$ = 8
			$STATE$ = 2
		}
		s:STATE_LINDI = {
			add_claim = prev
		}
	}
	else_if = {
		limit = {
			$REGION$ = 8
			$STATE$ = 3
		}
		s:STATE_MOCAMBIQUE = {
			add_claim = prev
		}
	}
	else_if = {
		limit = {
			$REGION$ = 8
			$STATE$ = 4
		}
		s:STATE_TANGANYIKA = {
			add_claim = prev
		}
	}
	else_if = {
		limit = {
			$REGION$ = 8
			$STATE$ = 5
		}
		s:STATE_SOUTH_MADAGASCAR = {
			add_claim = prev
		}
	}
	else_if = {
		limit = {
			$REGION$ = 8
			$STATE$ = 6
		}
		s:STATE_NORTH_MADAGASCAR = {
			add_claim = prev
		}
	}
	else_if = {
		limit = {
			$REGION$ = 8
			$STATE$ = 7
		}
		s:STATE_INDIAN_OCEAN_TERRITORY = {
			add_claim = prev
		}
	}
	else_if = {
		limit = {
			$REGION$ = 8
			$STATE$ = 8
		}
		s:STATE_KAZEMBE = {
			add_claim = prev
		}
	}
	else_if = {
		limit = {
			$REGION$ = 8
			$STATE$ = 9
		}
		s:STATE_ZAMBEZIA = {
			add_claim = prev
		}
	}
	else_if = {
		limit = {
			$REGION$ = 8
			$STATE$ = 10
		}
		s:STATE_KENYA = {
			add_claim = prev
		}
	}
	else_if = {
		limit = {
			$REGION$ = 8
			$STATE$ = 11
		}
		s:STATE_RIFT_VALLEY = {
			add_claim = prev
		}
	}
	else_if = {
		limit = {
			$REGION$ = 8
			$STATE$ = 12
		}
		s:STATE_UGANDA = {
			add_claim = prev
		}
	}
}

berlin_conference_stage_2_finished_effect = {
	berlin_conference_stage_2_finished_effect_round_1 = yes
	congo_free_state_dish_out_provinces_between_rounds = yes
	berlin_conference_stage_2_finished_effect_round_2 = yes
	congo_free_state_dish_out_provinces_between_rounds = yes
	berlin_conference_stage_2_finished_effect_round_3 = yes
	congo_free_state_dish_out_provinces_between_rounds = yes
	berlin_conference_stage_3_start_effect = yes
}

berlin_conference_stage_2_finished_effect_round_1 = {
	# Add coastal states in here
	# First checks babylon_berlin_conference_can_colonise_STATE_REGION (inside the calculate_claims_in_REGION_STATE_VAR effect)
	# Which should give true if any part of the state is not owned by a civilised country
	# Meaning places like Cape Colony should be excluded from the calculations
	### Egypt
	calculate_claims_in_REGION_STATE_VAR = {
		#STATE_MIDDLE_EGYPT
		REGION = 1
		STATE = 2
		VAR = babylon_berlin_conference_points_in_1_2
	}
	calculate_claims_in_REGION_STATE_VAR = {
		#STATE_UPPER_EGYPT
		REGION = 1
		STATE = 3
		VAR = babylon_berlin_conference_points_in_1_3
	}
	calculate_claims_in_REGION_STATE_VAR = {
		# STATE_LOWER_EGYPT
		REGION = 1
		STATE = 4
		VAR = babylon_berlin_conference_points_in_1_4
	}
	calculate_claims_in_REGION_STATE_VAR = {
		# STATE_SINAI
		REGION = 1
		STATE = 5
		VAR = babylon_berlin_conference_points_in_1_5
	}
	calculate_claims_in_REGION_STATE_VAR = {
		# STATE_DONGOLA
		REGION = 1
		STATE = 6
		VAR = babylon_berlin_conference_points_in_1_6
	}
	calculate_claims_in_REGION_STATE_VAR = {
		# Matruh
		REGION = 1
		STATE = 11
		VAR = babylon_berlin_conference_points_in_1_11
	}
	### Ethiopia
	calculate_claims_in_REGION_STATE_VAR = {
		# STATE_ERITREA
		REGION = 2
		STATE = 1
		VAR = babylon_berlin_conference_points_in_2_1
	}
	calculate_claims_in_REGION_STATE_VAR = {
		# STATE_SOMALILAND
		REGION = 2
		STATE = 5
		VAR = babylon_berlin_conference_points_in_2_5
	}
	### NorthAfrica
	calculate_claims_in_REGION_STATE_VAR = {
		#STATE_WEST_SAHARA
		REGION = 3
		STATE = 1
		VAR = babylon_berlin_conference_points_in_3_1
	}
	calculate_claims_in_REGION_STATE_VAR = {
		#STATE_MARRAKECH
		REGION = 3
		STATE = 4
		VAR = babylon_berlin_conference_points_in_3_4
	}
	calculate_claims_in_REGION_STATE_VAR = {
		# STATE_FEZ
		REGION = 3
		STATE = 5
		VAR = babylon_berlin_conference_points_in_3_5
	}
	calculate_claims_in_REGION_STATE_VAR = {
		# STATE_AL_RIF
		REGION = 3
		STATE = 6
		VAR = babylon_berlin_conference_points_in_3_6
	}
	calculate_claims_in_REGION_STATE_VAR = {
		# STATE_INNER_MOROCCO
		REGION = 3
		STATE = 7
		VAR = babylon_berlin_conference_points_in_3_7
	}
	calculate_claims_in_REGION_STATE_VAR = {
		# STATE_TLEMCEN				
		REGION = 3
		STATE = 8
		VAR = babylon_berlin_conference_points_in_3_8
	}
	calculate_claims_in_REGION_STATE_VAR = {
		# STATE_ALGIERS
		REGION = 3
		STATE = 9
		VAR = babylon_berlin_conference_points_in_3_9
	}
	calculate_claims_in_REGION_STATE_VAR = {
		# STATE_TUNISIA
		REGION = 3
		STATE = 11
		VAR = babylon_berlin_conference_points_in_3_11
	}
	calculate_claims_in_REGION_STATE_VAR = {
		# STATE_LIBYA
		REGION = 3
		STATE = 12
		VAR = babylon_berlin_conference_points_in_3_12
	}
	calculate_claims_in_REGION_STATE_VAR = {
		# STATE_TRIPOLI
		REGION = 3
		STATE = 14
		VAR = babylon_berlin_conference_points_in_3_14
	}
	### Senegal	
	calculate_claims_in_REGION_STATE_VAR = {
		# STATE_GAMBIA
		REGION = 4
		STATE = 1
		VAR = babylon_berlin_conference_points_in_4_1
	}
	calculate_claims_in_REGION_STATE_VAR = {
		#STATE_SENEGAL
		REGION = 4
		STATE = 2
		VAR = babylon_berlin_conference_points_in_4_2
	}
	calculate_claims_in_REGION_STATE_VAR = {
		# STATE_GUINEA
		REGION = 4
		STATE = 3
		VAR = babylon_berlin_conference_points_in_4_3
	}
	calculate_claims_in_REGION_STATE_VAR = {
		# STATE_SIERRA_LEONE
		REGION = 4
		STATE = 4
		VAR = babylon_berlin_conference_points_in_4_4
	}
	calculate_claims_in_REGION_STATE_VAR = {
		# STATE_LIBERIA
		REGION = 4
		STATE = 5
		VAR = babylon_berlin_conference_points_in_4_5
	}
	calculate_claims_in_REGION_STATE_VAR = {
		# STATE_WINDWARD_COAST
		REGION = 4
		STATE = 6
		VAR = babylon_berlin_conference_points_in_4_6
	}
	calculate_claims_in_REGION_STATE_VAR = {
		# STATE_IVORY_COAST
		REGION = 4
		STATE = 7
		VAR = babylon_berlin_conference_points_in_4_7
	}
	calculate_claims_in_REGION_STATE_VAR = {
		# STATE_GHANA
		REGION = 4
		STATE = 8
		VAR = babylon_berlin_conference_points_in_4_8
	}
	calculate_claims_in_REGION_STATE_VAR = {
		# STATE_MAURITANIA
		REGION = 4
		STATE = 12
		VAR = babylon_berlin_conference_points_in_4_12
	}
	### Niger
	calculate_claims_in_REGION_STATE_VAR = {
		# STATE_NIGER_DELTA
		REGION = 5
		STATE = 2
		VAR = babylon_berlin_conference_points_in_5_2
	}
	calculate_claims_in_REGION_STATE_VAR = {
		#STATE_YORUBA_STATES
		REGION = 5
		STATE = 3
		VAR = babylon_berlin_conference_points_in_5_3
	}
	calculate_claims_in_REGION_STATE_VAR = {
		# STATE_BENIN
		REGION = 5
		STATE = 8
		VAR = babylon_berlin_conference_points_in_5_8
	}
	calculate_claims_in_REGION_STATE_VAR = {
		# STATE_TOGO
		REGION = 5
		STATE = 9
		VAR = babylon_berlin_conference_points_in_5_9
	}
	calculate_claims_in_REGION_STATE_VAR = {
		# STATE_DAHOMEY
		REGION = 5
		STATE = 10
		VAR = babylon_berlin_conference_points_in_5_10
	}
	### Congo
	calculate_claims_in_REGION_STATE_VAR = {
		# STATE_BAS_CONGO
		REGION = 6
		STATE = 1
		VAR = babylon_berlin_conference_points_in_6_1
	}
	calculate_claims_in_REGION_STATE_VAR = {
		#STATE_CONGO
		REGION = 6
		STATE = 2
		VAR = babylon_berlin_conference_points_in_6_2
	}
	calculate_claims_in_REGION_STATE_VAR = {
		# STATE_NORTH_ANGOLA
		REGION = 6
		STATE = 7
		VAR = babylon_berlin_conference_points_in_6_7
	}
	calculate_claims_in_REGION_STATE_VAR = {
		# STATE_SOUTH_ANGOLA
		REGION = 6
		STATE = 9
		VAR = babylon_berlin_conference_points_in_6_9
	}
	calculate_claims_in_REGION_STATE_VAR = {
		# STATE_GABON
		REGION = 6
		STATE = 11
		VAR = babylon_berlin_conference_points_in_6_11
	}
	calculate_claims_in_REGION_STATE_VAR = {
		# STATE_SOUTH_CAMEROON
		REGION = 6
		STATE = 12
		VAR = babylon_berlin_conference_points_in_6_12
	}
	### SouthAfrica
	calculate_claims_in_REGION_STATE_VAR = {
		# STATE_NAMAQUALAND
		REGION = 7
		STATE = 1
		VAR = babylon_berlin_conference_points_in_7_1
	}
	calculate_claims_in_REGION_STATE_VAR = {
		#STATE_CAPE_COLONY
		REGION = 7
		STATE = 4
		VAR = babylon_berlin_conference_points_in_7_4
	}
	calculate_claims_in_REGION_STATE_VAR = {
		# STATE_EASTERN_CAPE
		REGION = 7
		STATE = 5
		VAR = babylon_berlin_conference_points_in_7_5
	}
	calculate_claims_in_REGION_STATE_VAR = {
		# STATE_ZULULAND
		REGION = 7
		STATE = 8
		VAR = babylon_berlin_conference_points_in_7_8
	}
	calculate_claims_in_REGION_STATE_VAR = {
		# STATE_HEREROLAND
		REGION = 7
		STATE = 9
		VAR = babylon_berlin_conference_points_in_7_9
	}
	calculate_claims_in_REGION_STATE_VAR = {
		# STATE_LOURENCO_MARQUES
		REGION = 7
		STATE = 10
		VAR = babylon_berlin_conference_points_in_7_10
	}
	### Zanj
	calculate_claims_in_REGION_STATE_VAR = {
		# STATE_ZANZIBAR
		REGION = 8
		STATE = 1
		VAR = babylon_berlin_conference_points_in_8_1
	}
	calculate_claims_in_REGION_STATE_VAR = {
		# STATE_MOCAMBIQUE
		REGION = 8
		STATE = 3
		VAR = babylon_berlin_conference_points_in_8_3
	}
	calculate_claims_in_REGION_STATE_VAR = {
		# STATE_SOUTH_MADAGASCAR
		REGION = 8
		STATE = 5
		VAR = babylon_berlin_conference_points_in_8_5
	}
	calculate_claims_in_REGION_STATE_VAR = {
		# STATE_NORTH_MADAGASCAR
		REGION = 8
		STATE = 6
		VAR = babylon_berlin_conference_points_in_8_6
	}
	calculate_claims_in_REGION_STATE_VAR = {
		# STATE_INDIAN_OCEAN_TERRITORY
		REGION = 8
		STATE = 7
		VAR = babylon_berlin_conference_points_in_8_7
	}
	calculate_claims_in_REGION_STATE_VAR = {
		# STATE_ZAMBEZIA
		REGION = 8
		STATE = 9
		VAR = babylon_berlin_conference_points_in_8_9
	}
	calculate_claims_in_REGION_STATE_VAR = {
		# STATE_KENYA
		REGION = 8
		STATE = 10
		VAR = babylon_berlin_conference_points_in_8_10
	}
}

berlin_conference_stage_2_finished_effect_round_2 = {
	### Nile
	calculate_claims_in_REGION_STATE_VAR = {
		#STATE_EGYPTIAN_DESERT
		REGION = 1
		STATE = 1
		VAR = babylon_berlin_conference_points_in_1_1
	}
	calculate_claims_in_REGION_STATE_VAR = {
		#STATE_DARFUR
		REGION = 1
		STATE = 7
		VAR = babylon_berlin_conference_points_in_1_7
	}
	calculate_claims_in_REGION_STATE_VAR = {
		#STATE_DARFUR
		REGION = 1
		STATE = 8
		VAR = babylon_berlin_conference_points_in_1_8
	}
	calculate_claims_in_REGION_STATE_VAR = {
		#STATE_BLUE_NILE
		REGION = 1
		STATE = 10
		VAR = babylon_berlin_conference_points_in_1_10
	}
	### Ethiopia
	calculate_claims_in_REGION_STATE_VAR = {
		#STATE_GONDER
		REGION = 1
		STATE = 10
		VAR = babylon_berlin_conference_points_in_2_2
	}
	calculate_claims_in_REGION_STATE_VAR = {
		#STATE_AMHARA
		REGION = 2
		STATE = 3
		VAR = babylon_berlin_conference_points_in_2_3
	}
	calculate_claims_in_REGION_STATE_VAR = {
		#STATE_OROMIA
		REGION = 2
		STATE = 4
		VAR = babylon_berlin_conference_points_in_2_4
	}
	### North Africa
	calculate_claims_in_REGION_STATE_VAR = {
		#STATE_SAHARA
		REGION = 3
		STATE = 2
		VAR = babylon_berlin_conference_points_in_3_2
	}
	calculate_claims_in_REGION_STATE_VAR = {
		#STATE_CONSTANTINE
		REGION = 3
		STATE = 10
		VAR = babylon_berlin_conference_points_in_3_10
	}
	calculate_claims_in_REGION_STATE_VAR = {
		#STATE_LIBYAN_DESERT
		REGION = 3
		STATE = 13
		VAR = babylon_berlin_conference_points_in_3_13
	}
	### Senegal
	calculate_claims_in_REGION_STATE_VAR = {
		#STATE_VOLTA
		REGION = 4
		STATE = 9
		VAR = babylon_berlin_conference_points_in_4_9
	}
	calculate_claims_in_REGION_STATE_VAR = {
		#STATE_WESTERN_MALI
		REGION = 4
		STATE = 10
		VAR = babylon_berlin_conference_points_in_4_10
	}
	calculate_claims_in_REGION_STATE_VAR = {
		#STATE_EASTERN_MALI
		REGION = 4
		STATE = 11
		VAR = babylon_berlin_conference_points_in_4_11
	}
	calculate_claims_in_REGION_STATE_VAR = {
		#STATE_MAURITANIA
		REGION = 4
		STATE = 12
		VAR = babylon_berlin_conference_points_in_4_11
	}
	### Niger
	calculate_claims_in_REGION_STATE_VAR = {
		#STATE_OUTER_HAUSALAND
		REGION = 5
		STATE = 4
		VAR = babylon_berlin_conference_points_in_5_4
	}
	calculate_claims_in_REGION_STATE_VAR = {
		#STATE_HAUSALAND
		REGION = 5
		STATE = 5
		VAR = babylon_berlin_conference_points_in_5_5
	}
	calculate_claims_in_REGION_STATE_VAR = {
		#STATE_EAST_HAUSALAND
		REGION = 5
		STATE = 6
		VAR = babylon_berlin_conference_points_in_5_6
	}
	calculate_claims_in_REGION_STATE_VAR = {
		#STATE_NIGER
		REGION = 5
		STATE = 11
		VAR = babylon_berlin_conference_points_in_5_11
	}
	calculate_claims_in_REGION_STATE_VAR = {
		#STATE_CHAD
		REGION = 5
		STATE = 12
		VAR = babylon_berlin_conference_points_in_5_12
	}
	calculate_claims_in_REGION_STATE_VAR = {
		#STATE_NORTH_CAMEROON
		REGION = 5
		STATE = 13
		VAR = babylon_berlin_conference_points_in_5_13
	}
	### Congo
	calculate_claims_in_REGION_STATE_VAR = {
		#STATE_KASAI
		REGION = 6
		STATE = 3
		VAR = babylon_berlin_conference_points_in_6_3
	}
	calculate_claims_in_REGION_STATE_VAR = {
		#STATE_EQUATEUR
		REGION = 6
		STATE = 4
		VAR = babylon_berlin_conference_points_in_6_4
	}
	calculate_claims_in_REGION_STATE_VAR = {
		#STATE_UBANGI_SHARI
		REGION = 6
		STATE = 6
		VAR = babylon_berlin_conference_points_in_6_6
	}
	calculate_claims_in_REGION_STATE_VAR = {
		#STATE_EAST_ANGOLA
		REGION = 6
		STATE = 8
		VAR = babylon_berlin_conference_points_in_6_8
	}
	calculate_claims_in_REGION_STATE_VAR = {
		#STATE_ZAMBIA
		REGION = 6
		STATE = 10
		VAR = babylon_berlin_conference_points_in_6_10
	}
	### South Africa
	calculate_claims_in_REGION_STATE_VAR = {
		#STATE_BOTSWANA
		REGION = 7
		STATE = 2
		VAR = babylon_berlin_conference_points_in_7_2
	}
	calculate_claims_in_REGION_STATE_VAR = {
		#STATE_NORTHERN_CAPE
		REGION = 7
		STATE = 3
		VAR = babylon_berlin_conference_points_in_7_3
	}
	calculate_claims_in_REGION_STATE_VAR = {
		#STATE_VRYSTAAT
		REGION = 7
		STATE = 6
		VAR = babylon_berlin_conference_points_in_7_6
	}
	calculate_claims_in_REGION_STATE_VAR = {
		#STATE_TRANSVAAL
		REGION = 7
		STATE = 7
		VAR = babylon_berlin_conference_points_in_7_7
	}
	calculate_claims_in_REGION_STATE_VAR = {
		#STATE_ZAMBEZI
		REGION = 7
		STATE = 11
		VAR = babylon_berlin_conference_points_in_7_11
	}
	### Zanj
	calculate_claims_in_REGION_STATE_VAR = {
		#STATE_LINDI
		REGION = 8
		STATE = 2
		VAR = babylon_berlin_conference_points_in_8_2
	}
	calculate_claims_in_REGION_STATE_VAR = {
		#STATE_TANGANYIKA
		REGION = 8
		STATE = 4
		VAR = babylon_berlin_conference_points_in_8_4
	}
	calculate_claims_in_REGION_STATE_VAR = {
		#STATE_KAZEMBE
		REGION = 8
		STATE = 8
		VAR = babylon_berlin_conference_points_in_8_8
	}
	calculate_claims_in_REGION_STATE_VAR = {
		#STATE_RIFT_VALLEY
		REGION = 8
		STATE = 11
		VAR = babylon_berlin_conference_points_in_8_11
	}
}

berlin_conference_stage_2_finished_effect_round_3 = {
	### Nile
	calculate_claims_in_REGION_STATE_VAR = {
		#STATE_EQUATORIA
		REGION = 1
		STATE = 9
		VAR = babylon_berlin_conference_points_in_1_9
	}
	### Senegal
	calculate_claims_in_REGION_STATE_VAR = {
		#STATE_TIMBUKTU
		REGION = 4
		STATE = 13
		VAR = babylon_berlin_conference_points_in_4_13
	}
	### Niger
	calculate_claims_in_REGION_STATE_VAR = {
		#STATE_BORNU
		REGION = 5
		STATE = 7
		VAR = babylon_berlin_conference_points_in_5_7
	}
	calculate_claims_in_REGION_STATE_VAR = {
		#STATE_WADDAI
		REGION = 5
		STATE = 14
		VAR = babylon_berlin_conference_points_in_5_14
	}
	### Congo
	calculate_claims_in_REGION_STATE_VAR = {
		#STATE_CONGO_ORIENTALE
		REGION = 6
		STATE = 5
		VAR = babylon_berlin_conference_points_in_6_5
	}
	calculate_claims_in_REGION_STATE_VAR = {
		#STATE_KATANGA
		REGION = 6
		STATE = 13
		VAR = babylon_berlin_conference_points_in_6_13
	}
	### Zanj
	calculate_claims_in_REGION_STATE_VAR = {
		#STATE_UGANDA
		REGION = 8
		STATE = 12
		VAR = babylon_berlin_conference_points_in_8_12
	}
}

congo_free_state_round_in_state_VAR = {
	### Egypt
	if = {
		limit = {
			$REGION$ = 1
			$STATE$ = 1
		}
		congo_free_state_round_in_STATE_subroutine = {
			STATE = s:STATE_EGYPTIAN_DESERT
		}
	}
	else_if = {
		limit = {
			$REGION$ = 1
			$STATE$ = 2
		}
		congo_free_state_round_in_STATE_subroutine = {
			STATE = s:STATE_MIDDLE_EGYPT
		}
	}
	else_if = {
		limit = {
			$REGION$ = 1
			$STATE$ = 3
		}
		congo_free_state_round_in_STATE_subroutine = {
			STATE = s:STATE_UPPER_EGYPT
		}
	}
	else_if = {
		limit = {
			$REGION$ = 1
			$STATE$ = 4
		}
		congo_free_state_round_in_STATE_subroutine = {
			STATE = s:STATE_LOWER_EGYPT
		}
	}
	else_if = {
		limit = {
			$REGION$ = 1
			$STATE$ = 5
		}
		congo_free_state_round_in_STATE_subroutine = {
			STATE = s:STATE_SINAI
		}
	}
	else_if = {
		limit = {
			$REGION$ = 1
			$STATE$ = 6
		}
		congo_free_state_round_in_STATE_subroutine = {
			STATE = s:STATE_DONGOLA
		}
	}
	else_if = {
		limit = {
			$REGION$ = 1
			$STATE$ = 7
		}
		congo_free_state_round_in_STATE_subroutine = {
			STATE = s:STATE_DARFUR
		}
	}
	else_if = {
		limit = {
			$REGION$ = 1
			$STATE$ = 8
		}
		congo_free_state_round_in_STATE_subroutine = {
			STATE = s:STATE_KORDOFAN
		}
	}
	else_if = {
		limit = {
			$REGION$ = 1
			$STATE$ = 9
		}
		congo_free_state_round_in_STATE_subroutine = {
			STATE = s:STATE_EQUATORIA
		}
	}
	else_if = {
		limit = {
			$REGION$ = 1
			$STATE$ = 10
		}
		congo_free_state_round_in_STATE_subroutine = {
			STATE = s:STATE_BLUE_NILE
		}
	}
	else_if = {
		limit = {
			$REGION$ = 1
			$STATE$ = 11
		}
		congo_free_state_round_in_STATE_subroutine = {
			STATE = s:STATE_MATRUH
		}
	}
	###
	### Ethiopia
	else_if = {
		limit = {
			$REGION$ = 2
			$STATE$ = 1
		}
		congo_free_state_round_in_STATE_subroutine = {
			STATE = s:STATE_ERITREA
		}
	}
	else_if = {
		limit = {
			$REGION$ = 2
			$STATE$ = 2
		}
		congo_free_state_round_in_STATE_subroutine = {
			STATE = s:STATE_GONDER
		}
	}
	else_if = {
		limit = {
			$REGION$ = 2
			$STATE$ = 3
		}
		congo_free_state_round_in_STATE_subroutine = {
			STATE = s:STATE_AMHARA
		}
	}
	else_if = {
		limit = {
			$REGION$ = 2
			$STATE$ = 4
		}
		congo_free_state_round_in_STATE_subroutine = {
			STATE = s:STATE_OROMIA
		}
	}
	else_if = {
		limit = {
			$REGION$ = 2
			$STATE$ = 5
		}
		congo_free_state_round_in_STATE_subroutine = {
			STATE = s:STATE_SOMALILAND
		}
	}
	###
	### North Africa
	else_if = {
		limit = {
			$REGION$ = 3
			$STATE$ = 1
		}
		congo_free_state_round_in_STATE_subroutine = {
			STATE = s:STATE_WEST_SAHARA
		}
	}
	else_if = {
		limit = {
			$REGION$ = 3
			$STATE$ = 2
		}
		congo_free_state_round_in_STATE_subroutine = {
			STATE = s:STATE_SAHARA
		}
	}
	else_if = {
		limit = {
			$REGION$ = 3
			$STATE$ = 3
		}
		congo_free_state_round_in_STATE_subroutine = {
			STATE = s:STATE_EAST_SAHARA
		}
	}
	else_if = {
		limit = {
			$REGION$ = 3
			$STATE$ = 4
		}
		congo_free_state_round_in_STATE_subroutine = {
			STATE = s:STATE_MARRAKECH
		}
	}
	else_if = {
		limit = {
			$REGION$ = 3
			$STATE$ = 5
		}
		congo_free_state_round_in_STATE_subroutine = {
			STATE = s:STATE_FEZ
		}
	}
	else_if = {
		limit = {
			$REGION$ = 3
			$STATE$ = 6
		}
		congo_free_state_round_in_STATE_subroutine = {
			STATE = s:STATE_AL_RIF
		}
	}
	else_if = {
		limit = {
			$REGION$ = 3
			$STATE$ = 7
		}
		congo_free_state_round_in_STATE_subroutine = {
			STATE = s:STATE_INNER_MOROCCO
		}
	}
	else_if = {
		limit = {
			$REGION$ = 3
			$STATE$ = 8
		}
		congo_free_state_round_in_STATE_subroutine = {
			STATE = s:STATE_TLEMCEN
		}
	}
	else_if = {
		limit = {
			$REGION$ = 3
			$STATE$ = 9
		}
		congo_free_state_round_in_STATE_subroutine = {
			STATE = s:STATE_ALGIERS
		}
	}
	else_if = {
		limit = {
			$REGION$ = 3
			$STATE$ = 10
		}
		congo_free_state_round_in_STATE_subroutine = {
			STATE = s:STATE_CONSTANTINE
		}
	}
	else_if = {
		limit = {
			$REGION$ = 3
			$STATE$ = 11
		}
		congo_free_state_round_in_STATE_subroutine = {
			STATE = s:STATE_TUNISIA
		}
	}
	else_if = {
		limit = {
			$REGION$ = 3
			$STATE$ = 12
		}
		congo_free_state_round_in_STATE_subroutine = {
			STATE = s:STATE_LIBYA
		}
	}
	else_if = {
		limit = {
			$REGION$ = 3
			$STATE$ = 13
		}
		congo_free_state_round_in_STATE_subroutine = {
			STATE = s:STATE_LIBYAN_DESERT
		}
	}
	else_if = {
		limit = {
			$REGION$ = 3
			$STATE$ = 14
		}
		congo_free_state_round_in_STATE_subroutine = {
			STATE = s:STATE_TRIPOLI
		}
	}
	###
	### Senegal
	else_if = {
		limit = {
			$REGION$ = 4
			$STATE$ = 1
		}
		congo_free_state_round_in_STATE_subroutine = {
			STATE = s:STATE_GAMBIA
		}
	}
	else_if = {
		limit = {
			$REGION$ = 4
			$STATE$ = 2
		}
		congo_free_state_round_in_STATE_subroutine = {
			STATE = s:STATE_SENEGAL
		}
	}
	else_if = {
		limit = {
			$REGION$ = 4
			$STATE$ = 3
		}
		congo_free_state_round_in_STATE_subroutine = {
			STATE = s:STATE_GUINEA
		}
	}
	else_if = {
		limit = {
			$REGION$ = 4
			$STATE$ = 4
		}
		congo_free_state_round_in_STATE_subroutine = {
			STATE = s:STATE_SIERRA_LEONE
		}
	}
	else_if = {
		limit = {
			$REGION$ = 4
			$STATE$ = 5
		}
		congo_free_state_round_in_STATE_subroutine = {
			STATE = s:STATE_LIBERIA
		}
	}
	else_if = {
		limit = {
			$REGION$ = 4
			$STATE$ = 6
		}
		congo_free_state_round_in_STATE_subroutine = {
			STATE = s:STATE_WINDWARD_COAST
		}
	}
	else_if = {
		limit = {
			$REGION$ = 4
			$STATE$ = 7
		}
		congo_free_state_round_in_STATE_subroutine = {
			STATE = s:STATE_IVORY_COAST
		}
	}
	else_if = {
		limit = {
			$REGION$ = 4
			$STATE$ = 8
		}
		congo_free_state_round_in_STATE_subroutine = {
			STATE = s:STATE_GHANA
		}
	}
	else_if = {
		limit = {
			$REGION$ = 4
			$STATE$ = 9
		}
		congo_free_state_round_in_STATE_subroutine = {
			STATE = s:STATE_VOLTA
		}
	}
	else_if = {
		limit = {
			$REGION$ = 4
			$STATE$ = 10
		}
		congo_free_state_round_in_STATE_subroutine = {
			STATE = s:STATE_WESTERN_MALI
		}
	}
	else_if = {
		limit = {
			$REGION$ = 4
			$STATE$ = 11
		}
		congo_free_state_round_in_STATE_subroutine = {
			STATE = s:STATE_EASTERN_MALI
		}
	}
	else_if = {
		limit = {
			$REGION$ = 4
			$STATE$ = 12
		}
		congo_free_state_round_in_STATE_subroutine = {
			STATE = s:STATE_MAURITANIA
		}
	}
	else_if = {
		limit = {
			$REGION$ = 4
			$STATE$ = 13
		}
		congo_free_state_round_in_STATE_subroutine = {
			STATE = s:STATE_TIMBUKTU
		}
	}
	else_if = {
		limit = {
			$REGION$ = 4
			$STATE$ = 14
		}
		congo_free_state_round_in_STATE_subroutine = {
			STATE = s:STATE_INNER_MAURITANIA
		}
	}
	###
	### Niger
	else_if = {
		limit = {
			$REGION$ = 5
			$STATE$ = 1
		}
		congo_free_state_round_in_STATE_subroutine = {
			STATE = s:STATE_NIGERIA
		}
	}
	else_if = {
		limit = {
			$REGION$ = 5
			$STATE$ = 2
		}
		congo_free_state_round_in_STATE_subroutine = {
			STATE = s:STATE_NIGER_DELTA
		}
	}
	else_if = {
		limit = {
			$REGION$ = 5
			$STATE$ = 3
		}
		congo_free_state_round_in_STATE_subroutine = {
			STATE = s:STATE_YORUBA_STATES
		}
	}
	else_if = {
		limit = {
			$REGION$ = 5
			$STATE$ = 4
		}
		congo_free_state_round_in_STATE_subroutine = {
			STATE = s:STATE_OUTER_HAUSALAND
		}
	}
	else_if = {
		limit = {
			$REGION$ = 5
			$STATE$ = 5
		}
		congo_free_state_round_in_STATE_subroutine = {
			STATE = s:STATE_HAUSALAND
		}
	}
	else_if = {
		limit = {
			$REGION$ = 5
			$STATE$ = 6
		}
		congo_free_state_round_in_STATE_subroutine = {
			STATE = s:STATE_EAST_HAUSALAND
		}
	}
	else_if = {
		limit = {
			$REGION$ = 5
			$STATE$ = 7
		}
		congo_free_state_round_in_STATE_subroutine = {
			STATE = s:STATE_BORNU
		}
	}
	else_if = {
		limit = {
			$REGION$ = 5
			$STATE$ = 8
		}
		congo_free_state_round_in_STATE_subroutine = {
			STATE = s:STATE_BENIN
		}
	}
	else_if = {
		limit = {
			$REGION$ = 5
			$STATE$ = 9
		}
		congo_free_state_round_in_STATE_subroutine = {
			STATE = s:STATE_TOGO
		}
	}
	else_if = {
		limit = {
			$REGION$ = 5
			$STATE$ = 10
		}
		congo_free_state_round_in_STATE_subroutine = {
			STATE = s:STATE_DAHOMEY
		}
	}
	else_if = {
		limit = {
			$REGION$ = 5
			$STATE$ = 11
		}
		congo_free_state_round_in_STATE_subroutine = {
			STATE = s:STATE_NIGER
		}
	}
	else_if = {
		limit = {
			$REGION$ = 5
			$STATE$ = 12
		}
		congo_free_state_round_in_STATE_subroutine = {
			STATE = s:STATE_CHAD
		}
	}
	else_if = {
		limit = {
			$REGION$ = 5
			$STATE$ = 13
		}
		congo_free_state_round_in_STATE_subroutine = {
			STATE = s:STATE_NORTH_CAMEROON
		}
	}
	else_if = {
		limit = {
			$REGION$ = 5
			$STATE$ = 14
		}
		congo_free_state_round_in_STATE_subroutine = {
			STATE = s:STATE_WADDAI
		}
	}
	###
	### Congo
	else_if = {
		limit = {
			$REGION$ = 6
			$STATE$ = 1
		}
		congo_free_state_round_in_STATE_subroutine = {
			STATE = s:STATE_BAS_CONGO
		}
	}
	else_if = {
		limit = {
			$REGION$ = 6
			$STATE$ = 2
		}
		congo_free_state_round_in_STATE_subroutine = {
			STATE = s:STATE_CONGO
		}
	}
	else_if = {
		limit = {
			$REGION$ = 6
			$STATE$ = 3
		}
		congo_free_state_round_in_STATE_subroutine = {
			STATE = s:STATE_KASAI
		}
	}
	else_if = {
		limit = {
			$REGION$ = 6
			$STATE$ = 4
		}
		congo_free_state_round_in_STATE_subroutine = {
			STATE = s:STATE_EQUATEUR
		}
	}
	else_if = {
		limit = {
			$REGION$ = 6
			$STATE$ = 5
		}
		congo_free_state_round_in_STATE_subroutine = {
			STATE = s:STATE_CONGO_ORIENTALE
		}
	}
	else_if = {
		limit = {
			$REGION$ = 6
			$STATE$ = 6
		}
		congo_free_state_round_in_STATE_subroutine = {
			STATE = s:STATE_UBANGI_SHARI
		}
	}
	else_if = {
		limit = {
			$REGION$ = 6
			$STATE$ = 7
		}
		congo_free_state_round_in_STATE_subroutine = {
			STATE = s:STATE_NORTH_ANGOLA
		}
	}
	else_if = {
		limit = {
			$REGION$ = 6
			$STATE$ = 8
		}
		congo_free_state_round_in_STATE_subroutine = {
			STATE = s:STATE_EAST_ANGOLA
		}
	}
	else_if = {
		limit = {
			$REGION$ = 6
			$STATE$ = 9
		}
		congo_free_state_round_in_STATE_subroutine = {
			STATE = s:STATE_SOUTH_ANGOLA
		}
	}
	else_if = {
		limit = {
			$REGION$ = 6
			$STATE$ = 10
		}
		congo_free_state_round_in_STATE_subroutine = {
			STATE = s:STATE_ZAMBIA
		}
	}
	else_if = {
		limit = {
			$REGION$ = 6
			$STATE$ = 11
		}
		congo_free_state_round_in_STATE_subroutine = {
			STATE = s:STATE_GABON
		}
	}
	else_if = {
		limit = {
			$REGION$ = 6
			$STATE$ = 12
		}
		congo_free_state_round_in_STATE_subroutine = {
			STATE = s:STATE_SOUTH_CAMEROON
		}
	}
	else_if = {
		limit = {
			$REGION$ = 6
			$STATE$ = 13
		}
		congo_free_state_round_in_STATE_subroutine = {
			STATE = s:STATE_KATANGA
		}
	}
	###
	### SouthAfrica
	else_if = {
		limit = {
			$REGION$ = 7
			$STATE$ = 1
		}
		congo_free_state_round_in_STATE_subroutine = {
			STATE = s:STATE_NAMAQUALAND
		}
	}
	else_if = {
		limit = {
			$REGION$ = 7
			$STATE$ = 2
		}
		congo_free_state_round_in_STATE_subroutine = {
			STATE = s:STATE_BOTSWANA
		}
	}
	else_if = {
		limit = {
			$REGION$ = 7
			$STATE$ = 3
		}
		congo_free_state_round_in_STATE_subroutine = {
			STATE = s:STATE_NORTHERN_CAPE
		}
	}
	else_if = {
		limit = {
			$REGION$ = 7
			$STATE$ = 4
		}
		congo_free_state_round_in_STATE_subroutine = {
			STATE = s:STATE_CAPE_COLONY
		}
	}
	else_if = {
		limit = {
			$REGION$ = 7
			$STATE$ = 5
		}
		congo_free_state_round_in_STATE_subroutine = {
			STATE = s:STATE_EASTERN_CAPE
		}
	}
	else_if = {
		limit = {
			$REGION$ = 7
			$STATE$ = 6
		}
		congo_free_state_round_in_STATE_subroutine = {
			STATE = s:STATE_VRYSTAAT
		}
	}
	else_if = {
		limit = {
			$REGION$ = 7
			$STATE$ = 7
		}
		congo_free_state_round_in_STATE_subroutine = {
			STATE = s:STATE_TRANSVAAL
		}
	}
	else_if = {
		limit = {
			$REGION$ = 7
			$STATE$ = 8
		}
		congo_free_state_round_in_STATE_subroutine = {
			STATE = s:STATE_ZULULAND
		}
	}
	else_if = {
		limit = {
			$REGION$ = 7
			$STATE$ = 9
		}
		congo_free_state_round_in_STATE_subroutine = {
			STATE = s:STATE_HEREROLAND
		}
	}
	else_if = {
		limit = {
			$REGION$ = 7
			$STATE$ = 10
		}
		congo_free_state_round_in_STATE_subroutine = {
			STATE = s:STATE_LOURENCO_MARQUES
		}
	}
	else_if = {
		limit = {
			$REGION$ = 7
			$STATE$ = 11
		}
		congo_free_state_round_in_STATE_subroutine = {
			STATE = s:STATE_ZAMBEZI
		}
	}
	###
	### Zanj
	else_if = {
		limit = {
			$REGION$ = 8
			$STATE$ = 1
		}
		congo_free_state_round_in_STATE_subroutine = {
			STATE = s:STATE_ZANZIBAR
		}
	}
	else_if = {
		limit = {
			$REGION$ = 8
			$STATE$ = 2
		}
		congo_free_state_round_in_STATE_subroutine = {
			STATE = s:STATE_LINDI
		}
	}
	else_if = {
		limit = {
			$REGION$ = 8
			$STATE$ = 3
		}
		congo_free_state_round_in_STATE_subroutine = {
			STATE = s:STATE_MOCAMBIQUE
		}
	}
	else_if = {
		limit = {
			$REGION$ = 8
			$STATE$ = 4
		}
		congo_free_state_round_in_STATE_subroutine = {
			STATE = s:STATE_TANGANYIKA
		}
	}
	else_if = {
		limit = {
			$REGION$ = 8
			$STATE$ = 5
		}
		congo_free_state_round_in_STATE_subroutine = {
			STATE = s:STATE_SOUTH_MADAGASCAR
		}
	}
	else_if = {
		limit = {
			$REGION$ = 8
			$STATE$ = 6
		}
		congo_free_state_round_in_STATE_subroutine = {
			STATE = s:STATE_NORTH_MADAGASCAR
		}
	}
	else_if = {
		limit = {
			$REGION$ = 8
			$STATE$ = 7
		}
		congo_free_state_round_in_STATE_subroutine = {
			STATE = s:STATE_INDIAN_OCEAN_TERRITORY
		}
	}
	else_if = {
		limit = {
			$REGION$ = 8
			$STATE$ = 8
		}
		congo_free_state_round_in_STATE_subroutine = {
			STATE = s:STATE_KAZEMBE
		}
	}
	else_if = {
		limit = {
			$REGION$ = 8
			$STATE$ = 9
		}
		congo_free_state_round_in_STATE_subroutine = {
			STATE = s:STATE_ZAMBEZIA
		}
	}
	else_if = {
		limit = {
			$REGION$ = 8
			$STATE$ = 10
		}
		congo_free_state_round_in_STATE_subroutine = {
			STATE = s:STATE_KENYA
		}
	}
	else_if = {
		limit = {
			$REGION$ = 8
			$STATE$ = 11
		}
		congo_free_state_round_in_STATE_subroutine = {
			STATE = s:STATE_RIFT_VALLEY
		}
	}
	else_if = {
		limit = {
			$REGION$ = 8
			$STATE$ = 12
		}
		congo_free_state_round_in_STATE_subroutine = {
			STATE = s:STATE_UGANDA
		}
	}
}

congo_free_state_round_in_STATE_subroutine = {
	#Should be fired once for each state
	every_country = {
		limit = {
			has_claim = $STATE$
			has_variable = berlin_conference_participant
		}
		$STATE$ = {
			remove_claim = prev
		}
	}
	if = {
		#If the African Free State doesnt exist, create it
		limit = {
			$STATE$ = {
				region = sr:region_nile_basin
			}
		}
		if = {
			limit = {
				NOT = {
					exists = c:NFS
				}
				$STATE$ = {
					any_scope_state = {
						owner = {
							has_variable = berlin_conference_participant
						}
						save_temporary_scope_as = create_country_scope
					}
				}
			}
			create_country = {
				tag = NFS
				origin = root
				state = scope:create_country_scope
			}
		}
		else = {
			# Else add the state to a list to be referenced later
			add_to_global_variable_list = {
				name = babylon_add_to_NFS_states
				target = $STATE$
			}
		}
	}
	if = {
		limit = {
			$STATE$ = {
				region = sr:region_ethiopia
			}
		}
		if = {
			limit = {
				NOT = {
					exists = c:EFS
				}
				$STATE$ = {
					any_scope_state = {
						owner = {
							has_variable = berlin_conference_participant
						}
						save_temporary_scope_as = create_country_scope
					}
				}
			}
			create_country = {
				tag = EFS
				origin = root
				state = scope:create_country_scope
			}
		}
		else = {
			add_to_global_variable_list = {
				name = babylon_add_to_EFS_states
				target = $STATE$
			}
		}
	}
	if = {
		limit = {
			$STATE$ = {
				region = sr:region_north_africa
			}
		}
		if = {
			limit = {
				NOT = {
					exists = c:MFS
				}
				$STATE$ = {
					any_scope_state = {
						owner = {
							has_variable = berlin_conference_participant
						}
						save_temporary_scope_as = create_country_scope
					}
				}
			}
			create_country = {
				tag = MFS
				origin = root
				state = scope:create_country_scope
			}
		}
		else = {
			add_to_global_variable_list = {
				name = babylon_add_to_MFS_states
				target = $STATE$
			}
		}
	}
	if = {
		limit = {
			$STATE$ = {
				region = sr:region_senegal
			}
		}
		if = {
			limit = {
				NOT = {
					exists = c:SFS
				}
				$STATE$ = {
					any_scope_state = {
						owner = {
							has_variable = berlin_conference_participant
						}
						save_temporary_scope_as = create_country_scope
					}
				}
			}
			create_country = {
				tag = SFS
				origin = root
				state = scope:create_country_scope
			}
		}
		else = {
			add_to_global_variable_list = {
				name = babylon_add_to_SFS_states
				target = $STATE$
			}
		}
	}
	if = {
		limit = {
			$STATE$ = {
				region = sr:region_niger
			}
		}
		if = {
			limit = {
				NOT = {
					exists = c:IFS
				}
				$STATE$ = {
					any_scope_state = {
						owner = {
							has_variable = berlin_conference_participant
						}
						save_temporary_scope_as = create_country_scope
					}
				}
			}
			create_country = {
				tag = IFS
				origin = root
				state = scope:create_country_scope
			}
		}
		else = {
			add_to_global_variable_list = {
				name = babylon_add_to_IFS_states
				target = $STATE$
			}
		}
	}
	if = {
		limit = {
			$STATE$ = {
				region = sr:region_congo
			}
		}
		if = {
			limit = {
				NOT = {
					exists = c:CFS
				}
				$STATE$ = {
					any_scope_state = {
						owner = {
							has_variable = berlin_conference_participant
						}
						save_temporary_scope_as = create_country_scope
					}
				}
			}
			create_country = {
				tag = CFS
				origin = root
				state = scope:create_country_scope
			}
		}
		else = {
			add_to_global_variable_list = {
				name = babylon_add_to_CFS_states
				target = $STATE$
			}
		}
	}
	if = {
		limit = {
			$STATE$ = {
				region = sr:region_southern_africa
			}
		}
		if = {
			limit = {
				NOT = {
					exists = c:OFS
				}
				$STATE$ = {
					any_scope_state = {
						owner = {
							has_variable = berlin_conference_participant
						}
						save_temporary_scope_as = create_country_scope
					}
				}
			}
			create_country = {
				tag = OFS
				origin = root
				state = scope:create_country_scope
			}
		}
		else = {
			add_to_global_variable_list = {
				name = babylon_add_to_OFS_states
				target = $STATE$
			}
		}
	}
	if = {
		limit = {
			$STATE$ = {
				region = sr:region_zanj
			}
		}
		if = {
			limit = {
				NOT = {
					exists = c:ZFS
				}
				$STATE$ = {
					any_scope_state = {
						owner = {
							has_variable = berlin_conference_participant
						}
						save_temporary_scope_as = create_country_scope
					}
				}
			}
			create_country = {
				tag = ZFS
				origin = root
				state = scope:create_country_scope
			}
		}
		else = {
			add_to_global_variable_list = {
				name = babylon_add_to_ZFS_states
				target = $STATE$
			}
		}
	}
}

berlin_conference_distribute_points_for_ai = {
	while = {
		limit = {
			# While points remain
			var:babylon_berlin_conference_points_remaining > 0
		}
		random_list = {
			1 = {
				trigger = {
					babylon_berlin_conference_can_colonise_STATE_REGION = {
						REGION = 1
						STATE = 1
					}
				}
				modifier = {
					# This country got the province
					if = {
						limit = {
							this = c:GBR
						}
						add = 25
					}
					if = {
						limit = {
							has_variable = babylon_berlin_conference_ai_strategic_objective_1
						}
						add = 25
					}
				}
				berlin_conference_distribute_points_for_ai_subroutine_REGION_STATE = {
					REGION = 1
					STATE = 1
				}
			}
			1 = {
				trigger = {
					babylon_berlin_conference_can_colonise_STATE_REGION = {
						REGION = 1
						STATE = 2
					}
				}
				modifier = {
					# This country got the province
					if = {
						limit = {
							this = c:GBR
						}
						add = 25
					}
					if = {
						limit = {
							has_variable = babylon_berlin_conference_ai_strategic_objective_1
						}
						add = 25
					}
				}
				berlin_conference_distribute_points_for_ai_subroutine_REGION_STATE = {
					REGION = 1
					STATE = 2
				}
			}
			1 = {
				trigger = {
					babylon_berlin_conference_can_colonise_STATE_REGION = {
						REGION = 1
						STATE = 3
					}
				}
				modifier = {
					# This country got the province
					if = {
						limit = {
							this = c:GBR
						}
						add = 25
					}
					if = {
						limit = {
							has_variable = babylon_berlin_conference_ai_strategic_objective_1
						}
						add = 25
					}
				}
				berlin_conference_distribute_points_for_ai_subroutine_REGION_STATE = {
					REGION = 1
					STATE = 3
				}
			}
			1 = {
				trigger = {
					babylon_berlin_conference_can_colonise_STATE_REGION = {
						REGION = 1
						STATE = 4
					}
				}
				modifier = {
					# This country got the province
					if = {
						limit = {
							this = c:GBR
						}
						add = 25
					}
					if = {
						limit = {
							has_variable = babylon_berlin_conference_ai_strategic_objective_1
						}
						add = 25
					}
				}
				berlin_conference_distribute_points_for_ai_subroutine_REGION_STATE = {
					REGION = 1
					STATE = 4
				}
			}
			1 = {
				trigger = {
					babylon_berlin_conference_can_colonise_STATE_REGION = {
						REGION = 1
						STATE = 5
					}
				}
				modifier = {
					# This country got the province
					if = {
						limit = {
							this = c:GBR
						}
						add = 25
					}
					if = {
						limit = {
							has_variable = babylon_berlin_conference_ai_strategic_objective_1
						}
						add = 25
					}
				}
				berlin_conference_distribute_points_for_ai_subroutine_REGION_STATE = {
					REGION = 1
					STATE = 5
				}
			}
			1 = {
				trigger = {
					babylon_berlin_conference_can_colonise_STATE_REGION = {
						REGION = 1
						STATE = 6
					}
				}
				modifier = {
					if = {
						limit = {
							this = c:FRA
						}
						add = 5
					}
					if = {
						limit = {
							this = c:GBR
						}
						add = 25
					}
					if = {
						limit = {
							has_variable = babylon_berlin_conference_ai_strategic_objective_2
						}
						add = 25
					}
				}
				berlin_conference_distribute_points_for_ai_subroutine_REGION_STATE = {
					REGION = 1
					STATE = 6
				}
			}
			1 = {
				trigger = {
					babylon_berlin_conference_can_colonise_STATE_REGION = {
						REGION = 1
						STATE = 7
					}
				}
				modifier = {
					if = {
						limit = {
							this = c:FRA
						}
						add = 5
					}
					if = {
						limit = {
							this = c:GBR
						}
						add = 25
					}
					if = {
						limit = {
							has_variable = babylon_berlin_conference_ai_strategic_objective_2
						}
						add = 25
					}
				}
				berlin_conference_distribute_points_for_ai_subroutine_REGION_STATE = {
					REGION = 1
					STATE = 7
				}
			}
			1 = {
				trigger = {
					babylon_berlin_conference_can_colonise_STATE_REGION = {
						REGION = 1
						STATE = 8
					}
				}
				modifier = {
					if = {
						limit = {
							this = c:FRA
						}
						add = 5
					}
					if = {
						limit = {
							this = c:GBR
						}
						add = 25
					}
					if = {
						limit = {
							has_variable = babylon_berlin_conference_ai_strategic_objective_2
						}
						add = 25
					}
				}
				berlin_conference_distribute_points_for_ai_subroutine_REGION_STATE = {
					REGION = 1
					STATE = 8
				}
			}
			1 = {
				trigger = {
					babylon_berlin_conference_can_colonise_STATE_REGION = {
						REGION = 1
						STATE = 9
					}
				}
				modifier = {
					if = {
						limit = {
							this = c:FRA
						}
						add = 5
					}
					if = {
						limit = {
							this = c:GBR
						}
						add = 25
					}
					if = {
						limit = {
							has_variable = babylon_berlin_conference_ai_strategic_objective_5
						}
						add = 25
					}
				}
				berlin_conference_distribute_points_for_ai_subroutine_REGION_STATE = {
					REGION = 1
					STATE = 9
				}
			}
			1 = {
				trigger = {
					babylon_berlin_conference_can_colonise_STATE_REGION = {
						REGION = 1
						STATE = 10
					}
				}
				modifier = {
					if = {
						limit = {
							this = c:FRA
						}
						add = 5
					}
					if = {
						limit = {
							this = c:GBR
						}
						add = 25
					}
					if = {
						limit = {
							has_variable = babylon_berlin_conference_ai_strategic_objective_2
						}
						add = 25
					}
				}
				berlin_conference_distribute_points_for_ai_subroutine_REGION_STATE = {
					REGION = 1
					STATE = 10
				}
			}
			1 = {
				trigger = {
					babylon_berlin_conference_can_colonise_STATE_REGION = {
						REGION = 1
						STATE = 11
					}
				}
				modifier = {
					if = {
						limit = {
							this = c:GBR
						}
						add = 25
					}
					if = {
						limit = {
							has_variable = babylon_berlin_conference_ai_strategic_objective_1
						}
						add = 25
					}
				}
				berlin_conference_distribute_points_for_ai_subroutine_REGION_STATE = {
					REGION = 1
					STATE = 11
				}
			}
			1 = {
				trigger = {
					babylon_berlin_conference_can_colonise_STATE_REGION = {
						REGION = 2
						STATE = 1
					}
				}
				modifier = {
					if = {
						limit = {
							this = c:GBR
						}
						add = 5
					}
					if = {
						limit = {
							OR = {
								country_has_primary_culture = cu:north_italian
								country_has_primary_culture = cu:south_italian
								this = c:FRA
							}
						}
						add = 25
					}
					if = {
						limit = {
							has_variable = babylon_berlin_conference_ai_strategic_objective_4
						}
						add = 25
					}
				}
				berlin_conference_distribute_points_for_ai_subroutine_REGION_STATE = {
					REGION = 2
					STATE = 1
				}
			}
			1 = {
				trigger = {
					babylon_berlin_conference_can_colonise_STATE_REGION = {
						REGION = 2
						STATE = 2
					}
				}
				modifier = {
					if = {
						limit = {
							OR = {
								this = c:FRA
								country_has_primary_culture = cu:north_italian
								country_has_primary_culture = cu:south_italian
							}
						}
						add = 5
					}
					if = {
						limit = {
							has_variable = babylon_berlin_conference_ai_strategic_objective_3
						}
						add = 25
					}
				}
				#Nobody got this province - independent Ethiopia
				berlin_conference_distribute_points_for_ai_subroutine_REGION_STATE = {
					REGION = 2
					STATE = 2
				}
			}
			1 = {
				trigger = {
					babylon_berlin_conference_can_colonise_STATE_REGION = {
						REGION = 2
						STATE = 3
					}
				}
				modifier = {
					# Wanted by these countries
					if = {
						limit = {
							OR = {
								country_has_primary_culture = cu:south_german
								this = c:AUS
								country_has_primary_culture = cu:north_italian
								country_has_primary_culture = cu:south_italian
							}
						}
						add = 5
					}
					if = {
						limit = {
							has_variable = babylon_berlin_conference_ai_strategic_objective_3
						}
						add = 25
					}
				}
				#Nobody got this province - independent Ethiopia
				berlin_conference_distribute_points_for_ai_subroutine_REGION_STATE = {
					REGION = 2
					STATE = 3
				}
			}
			1 = {
				trigger = {
					babylon_berlin_conference_can_colonise_STATE_REGION = {
						REGION = 2
						STATE = 4
					}
				}
				modifier = {
					# Wanted by these countries
					if = {
						limit = {
							OR = {
								country_has_primary_culture = cu:south_german
								this = c:AUS
								country_has_primary_culture = cu:north_italian
								country_has_primary_culture = cu:south_italian
							}
						}
						add = 5
					}
					if = {
						limit = {
							has_variable = babylon_berlin_conference_ai_strategic_objective_3
						}
						add = 25
					}
				}
				#Nobody got this province - independent Ethiopia
				berlin_conference_distribute_points_for_ai_subroutine_REGION_STATE = {
					REGION = 2
					STATE = 4
				}
			}
			1 = {
				trigger = {
					babylon_berlin_conference_can_colonise_STATE_REGION = {
						REGION = 2
						STATE = 5
					}
				}
				modifier = {
					# Wanted by these countries
					if = {
						limit = {
							OR = {
								this = c:GBR
								country_has_primary_culture = cu:north_italian
								country_has_primary_culture = cu:south_italian
							}
						}
						add = 25
					}
					if = {
						limit = {
							OR = {
								country_has_primary_culture = cu:south_german
								this = c:AUS
							}
						}
						add = 5
					}
					if = {
						limit = {
							has_variable = babylon_berlin_conference_ai_strategic_objective_4
						}
						add = 25
					}
				}
				berlin_conference_distribute_points_for_ai_subroutine_REGION_STATE = {
					REGION = 2
					STATE = 5
				}
			}
			1 = {
				trigger = {
					babylon_berlin_conference_can_colonise_STATE_REGION = {
						REGION = 3
						STATE = 1
					}
				}
				modifier = {
					# Wanted by these countries
					if = {
						limit = {
							OR = {
								country_has_primary_culture = cu:south_german
								this = c:AUS
								this = c:SPA
							}
						}
						add = 5
					}
					if = {
						limit = {
							has_variable = babylon_berlin_conference_ai_strategic_objective_24
						}
						add = 25
					}
				}
				berlin_conference_distribute_points_for_ai_subroutine_REGION_STATE = {
					REGION = 3
					STATE = 1
				}
			}
			1 = {
				trigger = {
					babylon_berlin_conference_can_colonise_STATE_REGION = {
						REGION = 3
						STATE = 2
					}
				}
				modifier = {
					# Wanted by these countries
					if = {
						limit = {
							OR = {
								country_has_primary_culture = cu:south_german
								this = c:AUS
							}
						}
						add = 5
					}
					if = {
						limit = {
							this = c:FRA
						}
						add = 5
					}
					if = {
						limit = {
							has_variable = babylon_berlin_conference_ai_strategic_objective_26
						}
						add = 25
					}
				}
				berlin_conference_distribute_points_for_ai_subroutine_REGION_STATE = {
					REGION = 3
					STATE = 2
				}
			}
			1 = {
				trigger = {
					babylon_berlin_conference_can_colonise_STATE_REGION = {
						REGION = 3
						STATE = 3
					}
				}
				modifier = {
					# Wanted by these countries
					if = {
						limit = {
							this = c:FRA
						}
						add = 25
					}
					if = {
						limit = {
							has_variable = babylon_berlin_conference_ai_strategic_objective_26
						}
						add = 25
					}
				}
				berlin_conference_distribute_points_for_ai_subroutine_REGION_STATE = {
					REGION = 3
					STATE = 3
				}
			}
			1 = {
				trigger = {
					babylon_berlin_conference_can_colonise_STATE_REGION = {
						REGION = 3
						STATE = 4
					}
				}
				modifier = {
					# Wanted by these countries
					if = {
						limit = {
							OR = {
								this = c:FRA
								country_has_primary_culture = cu:south_german
								this = c:AUS
							}
						}
						add = 5
					}
					if = {
						limit = {
							has_variable = babylon_berlin_conference_ai_strategic_objective_27
						}
						add = 25
					}
				}
				berlin_conference_distribute_points_for_ai_subroutine_REGION_STATE = {
					REGION = 3
					STATE = 4
				}
			}
			1 = {
				trigger = {
					babylon_berlin_conference_can_colonise_STATE_REGION = {
						REGION = 3
						STATE = 5
					}
				}
				modifier = {
					# Wanted by these countries
					if = {
						limit = {
							OR = {
								this = c:FRA
								country_has_primary_culture = cu:south_german
								this = c:AUS
							}
						}
						add = 5
					}
					if = {
						limit = {
							has_variable = babylon_berlin_conference_ai_strategic_objective_27
						}
						add = 25
					}
				}
				berlin_conference_distribute_points_for_ai_subroutine_REGION_STATE = {
					REGION = 3
					STATE = 5
				}
			}
			1 = {
				trigger = {
					babylon_berlin_conference_can_colonise_STATE_REGION = {
						REGION = 3
						STATE = 6
					}
				}
				modifier = {
					# Wanted by these countries
					if = {
						limit = {
							OR = {
								this = c:SPA
								country_has_primary_culture = cu:south_german
								this = c:AUS
							}
						}
						add = 5
					}
					if = {
						limit = {
							has_variable = babylon_berlin_conference_ai_strategic_objective_27
						}
						add = 25
					}
				}
				berlin_conference_distribute_points_for_ai_subroutine_REGION_STATE = {
					REGION = 3
					STATE = 6
				}
			}
			1 = {
				trigger = {
					babylon_berlin_conference_can_colonise_STATE_REGION = {
						REGION = 3
						STATE = 7
					}
				}
				modifier = {
					# Wanted by these countries
					if = {
						limit = {
							OR = {
								this = c:FRA
								country_has_primary_culture = cu:south_german
								this = c:AUS
							}
						}
						add = 5
					}
					if = {
						limit = {
							has_variable = babylon_berlin_conference_ai_strategic_objective_27
						}
						add = 25
					}
				}
				berlin_conference_distribute_points_for_ai_subroutine_REGION_STATE = {
					REGION = 3
					STATE = 7
				}
			}
			1 = {
				trigger = {
					babylon_berlin_conference_can_colonise_STATE_REGION = {
						REGION = 3
						STATE = 8
					}
				}
				modifier = {
					# Wanted by these countries
					if = {
						limit = {
							this = c:FRA
						}
						add = 25
					}
					if = {
						limit = {
							has_variable = babylon_berlin_conference_ai_strategic_objective_28
						}
						add = 25
					}
				}
				berlin_conference_distribute_points_for_ai_subroutine_REGION_STATE = {
					REGION = 3
					STATE = 8
				}
			}
			1 = {
				trigger = {
					babylon_berlin_conference_can_colonise_STATE_REGION = {
						REGION = 3
						STATE = 9
					}
				}
				modifier = {
					# Wanted by these countries
					if = {
						limit = {
							this = c:FRA
						}
						add = 25
					}
					if = {
						limit = {
							has_variable = babylon_berlin_conference_ai_strategic_objective_28
						}
						add = 25
					}
				}
				berlin_conference_distribute_points_for_ai_subroutine_REGION_STATE = {
					REGION = 3
					STATE = 9
				}
			}
			1 = {
				trigger = {
					babylon_berlin_conference_can_colonise_STATE_REGION = {
						REGION = 3
						STATE = 10
					}
				}
				modifier = {
					# Wanted by these countries
					if = {
						limit = {
							this = c:FRA
						}
						add = 25
					}
					if = {
						limit = {
							has_variable = babylon_berlin_conference_ai_strategic_objective_28
						}
						add = 25
					}
				}
				berlin_conference_distribute_points_for_ai_subroutine_REGION_STATE = {
					REGION = 3
					STATE = 10
				}
			}
			1 = {
				trigger = {
					babylon_berlin_conference_can_colonise_STATE_REGION = {
						REGION = 3
						STATE = 11
					}
				}
				modifier = {
					# Wanted by these countries
					if = {
						limit = {
							OR = {
								country_has_primary_culture = cu:north_italian
								country_has_primary_culture = cu:south_italian
							}
						}
						add = 5
					}
					if = {
						limit = {
							this = c:FRA
						}
						add = 25
					}
					if = {
						limit = {
							has_variable = babylon_berlin_conference_ai_strategic_objective_28
						}
						add = 25
					}
				}
				berlin_conference_distribute_points_for_ai_subroutine_REGION_STATE = {
					REGION = 3
					STATE = 11
				}
			}
			1 = {
				trigger = {
					babylon_berlin_conference_can_colonise_STATE_REGION = {
						REGION = 3
						STATE = 12
					}
				}
				modifier = {
					# Wanted by these countries
					if = {
						limit = {
							OR = {
								country_has_primary_culture = cu:north_italian
								country_has_primary_culture = cu:south_italian
							}
						}
						add = 25
					}
					if = {
						limit = {
							has_variable = babylon_berlin_conference_ai_strategic_objective_29
						}
						add = 25
					}
				}
				berlin_conference_distribute_points_for_ai_subroutine_REGION_STATE = {
					REGION = 3
					STATE = 12
				}
			}
			1 = {
				trigger = {
					babylon_berlin_conference_can_colonise_STATE_REGION = {
						REGION = 3
						STATE = 13
					}
				}
				modifier = {
					# Wanted by these countries
					if = {
						limit = {
							OR = {
								country_has_primary_culture = cu:north_italian
								country_has_primary_culture = cu:south_italian
								this = c:GBR
							}
						}
						add = 5
					}
					if = {
						limit = {
							has_variable = babylon_berlin_conference_ai_strategic_objective_29
						}
						add = 25
					}
				}
				berlin_conference_distribute_points_for_ai_subroutine_REGION_STATE = {
					REGION = 3
					STATE = 13
				}
			}
			1 = {
				trigger = {
					babylon_berlin_conference_can_colonise_STATE_REGION = {
						REGION = 3
						STATE = 14
					}
				}
				modifier = {
					# Wanted by these countries
					if = {
						limit = {
							OR = {
								country_has_primary_culture = cu:north_italian
								country_has_primary_culture = cu:south_italian
							}
						}
						add = 25
					}
					if = {
						limit = {
							has_variable = babylon_berlin_conference_ai_strategic_objective_29
						}
						add = 25
					}
				}
				berlin_conference_distribute_points_for_ai_subroutine_REGION_STATE = {
					REGION = 3
					STATE = 14
				}
			}
			1 = {
				trigger = {
					babylon_berlin_conference_can_colonise_STATE_REGION = {
						REGION = 4
						STATE = 1
					}
				}
				modifier = {
					# Wanted by these countries
					if = {
						limit = {
							OR = {
								this = c:GBR
								this = c:POR
							}
						}
						add = 5
					}
					if = {
						limit = {
							this = c:FRA
						}
						add = 25
					}
					if = {
						limit = {
							has_variable = babylon_berlin_conference_ai_strategic_objective_23
						}
						add = 25
					}
				}
				berlin_conference_distribute_points_for_ai_subroutine_REGION_STATE = {
					REGION = 4
					STATE = 1
				}
			}
			1 = {
				trigger = {
					babylon_berlin_conference_can_colonise_STATE_REGION = {
						REGION = 4
						STATE = 2
					}
				}
				modifier = {
					# Wanted by these countries
					if = {
						limit = {
							this = c:FRA
						}
						add = 25
					}
					if = {
						limit = {
							has_variable = babylon_berlin_conference_ai_strategic_objective_23
						}
						add = 25
					}
				}
				berlin_conference_distribute_points_for_ai_subroutine_REGION_STATE = {
					REGION = 4
					STATE = 2
				}
			}
			1 = {
				trigger = {
					babylon_berlin_conference_can_colonise_STATE_REGION = {
						REGION = 4
						STATE = 3
					}
				}
				modifier = {
					# Wanted by these countries
					if = {
						limit = {
							this = c:FRA
						}
						add = 25
					}
					if = {
						limit = {
							has_variable = babylon_berlin_conference_ai_strategic_objective_23
						}
						add = 25
					}
				}
				berlin_conference_distribute_points_for_ai_subroutine_REGION_STATE = {
					REGION = 4
					STATE = 3
				}
			}
			1 = {
				trigger = {
					babylon_berlin_conference_can_colonise_STATE_REGION = {
						REGION = 4
						STATE = 4
					}
				}
				modifier = {
					# Wanted by these countries
					if = {
						limit = {
							this = c:GBR
						}
						add = 5
					}
					if = {
						limit = {
							has_variable = babylon_berlin_conference_ai_strategic_objective_22
						}
						add = 25
					}
				}
				berlin_conference_distribute_points_for_ai_subroutine_REGION_STATE = {
					REGION = 4
					STATE = 4
				}
			}
			1 = {
				trigger = {
					babylon_berlin_conference_can_colonise_STATE_REGION = {
						REGION = 4
						STATE = 5
					}
				}
				modifier = {
					# Wanted by these countries
					if = {
						limit = {
							OR = {
								this = c:LIB
								this = c:USA
							}
						}
						add = 5
					}
					if = {
						limit = {
							has_variable = babylon_berlin_conference_ai_strategic_objective_22
						}
						add = 25
					}
				}
				berlin_conference_distribute_points_for_ai_subroutine_REGION_STATE = {
					REGION = 4
					STATE = 5
				}
			}
			1 = {
				trigger = {
					babylon_berlin_conference_can_colonise_STATE_REGION = {
						REGION = 4
						STATE = 6
					}
				}
				modifier = {
					# Wanted by these countries
					if = {
						limit = {
							this = c:FRA
						}
						add = 25
					}
					if = {
						limit = {
							has_variable = babylon_berlin_conference_ai_strategic_objective_21
						}
						add = 25
					}
				}
				berlin_conference_distribute_points_for_ai_subroutine_REGION_STATE = {
					REGION = 4
					STATE = 6
				}
			}
			1 = {
				trigger = {
					babylon_berlin_conference_can_colonise_STATE_REGION = {
						REGION = 4
						STATE = 7
					}
				}
				modifier = {
					# Wanted by these countries
					if = {
						limit = {
							this = c:FRA
						}
						add = 25
					}
					if = {
						limit = {
							has_variable = babylon_berlin_conference_ai_strategic_objective_21
						}
						add = 25
					}
				}
				berlin_conference_distribute_points_for_ai_subroutine_REGION_STATE = {
					REGION = 4
					STATE = 7
				}
			}
			1 = {
				trigger = {
					babylon_berlin_conference_can_colonise_STATE_REGION = {
						REGION = 4
						STATE = 8
					}
				}
				modifier = {
					# Wanted by these countries
					if = {
						limit = {
							this = c:GBR
						}
						add = 5
					}
					if = {
						limit = {
							has_variable = babylon_berlin_conference_ai_strategic_objective_20
						}
						add = 25
					}
				}
				berlin_conference_distribute_points_for_ai_subroutine_REGION_STATE = {
					REGION = 4
					STATE = 8
				}
			}
			1 = {
				trigger = {
					babylon_berlin_conference_can_colonise_STATE_REGION = {
						REGION = 4
						STATE = 9
					}
				}
				modifier = {
					# Wanted by these countries
					if = {
						limit = {
							this = c:FRA
						}
						add = 25
					}
					if = {
						limit = {
							has_variable = babylon_berlin_conference_ai_strategic_objective_21
						}
						add = 25
					}
				}
				berlin_conference_distribute_points_for_ai_subroutine_REGION_STATE = {
					REGION = 4
					STATE = 9
				}
			}
			1 = {
				trigger = {
					babylon_berlin_conference_can_colonise_STATE_REGION = {
						REGION = 4
						STATE = 10
					}
				}
				modifier = {
					# Wanted by these countries
					if = {
						limit = {
							this = c:FRA
						}
						add = 25
					}
					if = {
						limit = {
							has_variable = babylon_berlin_conference_ai_strategic_objective_23
						}
						add = 25
					}
				}
				berlin_conference_distribute_points_for_ai_subroutine_REGION_STATE = {
					REGION = 4
					STATE = 10
				}
			}
			1 = {
				trigger = {
					babylon_berlin_conference_can_colonise_STATE_REGION = {
						REGION = 4
						STATE = 11
					}
				}
				modifier = {
					# Wanted by these countries
					if = {
						limit = {
							this = c:FRA
						}
						add = 25
					}
					if = {
						limit = {
							has_variable = babylon_berlin_conference_ai_strategic_objective_21
						}
						add = 25
					}
				}
				berlin_conference_distribute_points_for_ai_subroutine_REGION_STATE = {
					REGION = 4
					STATE = 11
				}
			}
			1 = {
				trigger = {
					babylon_berlin_conference_can_colonise_STATE_REGION = {
						REGION = 4
						STATE = 12
					}
				}
				modifier = {
					# Wanted by these countries
					if = {
						limit = {
							this = c:FRA
						}
						add = 25
					}
					if = {
						limit = {
							has_variable = babylon_berlin_conference_ai_strategic_objective_24
						}
						add = 25
					}
				}
				berlin_conference_distribute_points_for_ai_subroutine_REGION_STATE = {
					REGION = 4
					STATE = 12
				}
			}
			1 = {
				trigger = {
					babylon_berlin_conference_can_colonise_STATE_REGION = {
						REGION = 4
						STATE = 13
					}
				}
				modifier = {
					# Wanted by these countries
					if = {
						limit = {
							this = c:FRA
						}
						add = 25
					}
					if = {
						limit = {
							has_variable = babylon_berlin_conference_ai_strategic_objective_25
						}
						add = 25
					}
				}
				berlin_conference_distribute_points_for_ai_subroutine_REGION_STATE = {
					REGION = 4
					STATE = 13
				}
			}
			1 = {
				trigger = {
					babylon_berlin_conference_can_colonise_STATE_REGION = {
						REGION = 4
						STATE = 14
					}
				}
				modifier = {
					# Wanted by these countries
					if = {
						limit = {
							this = c:FRA
						}
						add = 25
					}
					if = {
						limit = {
							has_variable = babylon_berlin_conference_ai_strategic_objective_24
						}
						add = 25
					}
				}
				berlin_conference_distribute_points_for_ai_subroutine_REGION_STATE = {
					REGION = 4
					STATE = 14
				}
			}
			1 = {
				trigger = {
					babylon_berlin_conference_can_colonise_STATE_REGION = {
						REGION = 5
						STATE = 1
					}
				}
				modifier = {
					# Wanted by these countries
					if = {
						limit = {
							OR = {
								this = c:GBR
								this = c:GER
								country_has_primary_culture = cu:north_german
							}
						}
						add = 5
					}
					if = {
						limit = {
							has_variable = babylon_berlin_conference_ai_strategic_objective_18
						}
						add = 25
					}
				}
				berlin_conference_distribute_points_for_ai_subroutine_REGION_STATE = {
					REGION = 5
					STATE = 1
				}
			}
			1 = {
				trigger = {
					babylon_berlin_conference_can_colonise_STATE_REGION = {
						REGION = 5
						STATE = 2
					}
				}
				modifier = {
					# Wanted by these countries
					if = {
						limit = {
							OR = {
								this = c:GBR
								this = c:SPA
							}
						}
						add = 5
					}
					if = {
						limit = {
							has_variable = babylon_berlin_conference_ai_strategic_objective_18
						}
						add = 25
					}
				}
				berlin_conference_distribute_points_for_ai_subroutine_REGION_STATE = {
					REGION = 5
					STATE = 2
				}
			}
			1 = {
				trigger = {
					babylon_berlin_conference_can_colonise_STATE_REGION = {
						REGION = 5
						STATE = 3
					}
				}
				modifier = {
					# Wanted by these countries
					if = {
						limit = {
							this = c:GBR
						}
						add = 5
					}
					if = {
						limit = {
							has_variable = babylon_berlin_conference_ai_strategic_objective_18
						}
						add = 25
					}
				}
				berlin_conference_distribute_points_for_ai_subroutine_REGION_STATE = {
					REGION = 5
					STATE = 3
				}
			}
			1 = {
				trigger = {
					babylon_berlin_conference_can_colonise_STATE_REGION = {
						REGION = 5
						STATE = 4
					}
				}
				modifier = {
					# Wanted by these countries
					if = {
						limit = {
							this = c:FRA
						}
						add = 25
					}
					if = {
						limit = {
							has_variable = babylon_berlin_conference_ai_strategic_objective_19
						}
						add = 25
					}
				}
				berlin_conference_distribute_points_for_ai_subroutine_REGION_STATE = {
					REGION = 5
					STATE = 4
				}
			}
			1 = {
				trigger = {
					babylon_berlin_conference_can_colonise_STATE_REGION = {
						REGION = 5
						STATE = 5
					}
				}
				modifier = {
					# Wanted by these countries
					if = {
						limit = {
							this = c:GBR
						}
						add = 5
					}
					if = {
						limit = {
							has_variable = babylon_berlin_conference_ai_strategic_objective_18
						}
						add = 25
					}
				}
				berlin_conference_distribute_points_for_ai_subroutine_REGION_STATE = {
					REGION = 5
					STATE = 5
				}
			}
			1 = {
				trigger = {
					babylon_berlin_conference_can_colonise_STATE_REGION = {
						REGION = 5
						STATE = 6
					}
				}
				modifier = {
					# Wanted by these countries
					if = {
						limit = {
							this = c:GBR
						}
						add = 5
					}
					if = {
						limit = {
							has_variable = babylon_berlin_conference_ai_strategic_objective_18
						}
						add = 25
					}
				}
				berlin_conference_distribute_points_for_ai_subroutine_REGION_STATE = {
					REGION = 5
					STATE = 6
				}
			}
			1 = {
				trigger = {
					babylon_berlin_conference_can_colonise_STATE_REGION = {
						REGION = 5
						STATE = 7
					}
				}
				modifier = {
					# Wanted by these countries
					if = {
						limit = {
							this = c:GBR
						}
						add = 5
					}
					if = {
						limit = {
							has_variable = babylon_berlin_conference_ai_strategic_objective_18
						}
						add = 25
					}
				}
				berlin_conference_distribute_points_for_ai_subroutine_REGION_STATE = {
					REGION = 5
					STATE = 7
				}
			}
			1 = {
				trigger = {
					babylon_berlin_conference_can_colonise_STATE_REGION = {
						REGION = 5
						STATE = 8
					}
				}
				modifier = {
					# Wanted by these countries
					if = {
						limit = {
							this = c:GBR
						}
						add = 5
					}
					if = {
						limit = {
							has_variable = babylon_berlin_conference_ai_strategic_objective_18
						}
						add = 25
					}
				}
				berlin_conference_distribute_points_for_ai_subroutine_REGION_STATE = {
					REGION = 5
					STATE = 8
				}
			}
			1 = {
				trigger = {
					babylon_berlin_conference_can_colonise_STATE_REGION = {
						REGION = 5
						STATE = 9
					}
				}
				modifier = {
					# Wanted by these countries
					if = {
						limit = {
							OR = {
								this = c:GER
								country_has_primary_culture = cu:north_german
							}
						}
						add = 5
					}
					if = {
						limit = {
							has_variable = babylon_berlin_conference_ai_strategic_objective_20
						}
						add = 25
					}
				}
				berlin_conference_distribute_points_for_ai_subroutine_REGION_STATE = {
					REGION = 5
					STATE = 9
				}
			}
			1 = {
				trigger = {
					babylon_berlin_conference_can_colonise_STATE_REGION = {
						REGION = 5
						STATE = 10
					}
				}
				modifier = {
					# Wanted by these countries
					if = {
						limit = {
							this = c:FRA
						}
						add = 25
					}
					if = {
						limit = {
							has_variable = babylon_berlin_conference_ai_strategic_objective_19
						}
						add = 25
					}
				}
				berlin_conference_distribute_points_for_ai_subroutine_REGION_STATE = {
					REGION = 5
					STATE = 10
				}
			}
			1 = {
				trigger = {
					babylon_berlin_conference_can_colonise_STATE_REGION = {
						REGION = 5
						STATE = 11
					}
				}
				modifier = {
					# Wanted by these countries
					if = {
						limit = {
							this = c:FRA
						}
						add = 25
					}
					if = {
						limit = {
							has_variable = babylon_berlin_conference_ai_strategic_objective_25
						}
						add = 25
					}
				}
				berlin_conference_distribute_points_for_ai_subroutine_REGION_STATE = {
					REGION = 5
					STATE = 11
				}
			}
			1 = {
				trigger = {
					babylon_berlin_conference_can_colonise_STATE_REGION = {
						REGION = 5
						STATE = 12
					}
				}
				modifier = {
					# Wanted by these countries
					if = {
						limit = {
							this = c:FRA
						}
						add = 25
					}
					if = {
						limit = {
							has_variable = babylon_berlin_conference_ai_strategic_objective_17
						}
						add = 25
					}
				}
				berlin_conference_distribute_points_for_ai_subroutine_REGION_STATE = {
					REGION = 5
					STATE = 12
				}
			}
			1 = {
				trigger = {
					babylon_berlin_conference_can_colonise_STATE_REGION = {
						REGION = 5
						STATE = 13
					}
				}
				modifier = {
					# Wanted by these countries
					if = {
						limit = {
							OR = {
								this = c:GER
								country_has_primary_culture = cu:north_german
							}
						}
						add = 25
					}
					if = {
						limit = {
							this = c:FRA
						}
						add = 5
					}
					if = {
						limit = {
							has_variable = babylon_berlin_conference_ai_strategic_objective_16
						}
						add = 25
					}
				}
				berlin_conference_distribute_points_for_ai_subroutine_REGION_STATE = {
					REGION = 5
					STATE = 13
				}
			}
			1 = {
				trigger = {
					babylon_berlin_conference_can_colonise_STATE_REGION = {
						REGION = 5
						STATE = 14
					}
				}
				modifier = {
					# Wanted by these countries
					if = {
						limit = {
							OR = {
								this = c:GER
								country_has_primary_culture = cu:north_german
							}
						}
						add = 5
					}
					if = {
						limit = {
							this = c:FRA
						}
						add = 25
					}
					if = {
						limit = {
							has_variable = babylon_berlin_conference_ai_strategic_objective_17
						}
						add = 25
					}
				}
				berlin_conference_distribute_points_for_ai_subroutine_REGION_STATE = {
					REGION = 5
					STATE = 14
				}
			}
			1 = {
				trigger = {
					babylon_berlin_conference_can_colonise_STATE_REGION = {
						REGION = 6
						STATE = 1
					}
				}
				modifier = {
					# Wanted by these countries
					if = {
						limit = {
							OR = {
								this = c:FRA
								this = c:GER
								country_has_primary_culture = cu:north_german
							}
						}
						add = 5
					}
					if = {
						limit = {
							has_variable = babylon_berlin_conference_ai_strategic_objective_15
						}
						add = 25
					}
				}
				#Congo Free State
				berlin_conference_distribute_points_for_ai_subroutine_REGION_STATE = {
					REGION = 6
					STATE = 1
				}
			}
			1 = {
				trigger = {
					babylon_berlin_conference_can_colonise_STATE_REGION = {
						REGION = 6
						STATE = 2
					}
				}
				modifier = {
					# Wanted by these countries
					if = {
						limit = {
							OR = {
								this = c:GER
								country_has_primary_culture = cu:north_german
								this = c:SPA
							}
						}
						add = 5
					}
					if = {
						limit = {
							this = c:FRA
						}
						add = 25
					}
					if = {
						limit = {
							has_variable = babylon_berlin_conference_ai_strategic_objective_15
						}
						add = 25
					}
				}
				berlin_conference_distribute_points_for_ai_subroutine_REGION_STATE = {
					REGION = 6
					STATE = 2
				}
			}
			1 = {
				trigger = {
					babylon_berlin_conference_can_colonise_STATE_REGION = {
						REGION = 6
						STATE = 3
					}
				}
				modifier = {
					# Wanted by these countries
					if = {
						limit = {
							OR = {
								this = c:FRA
								this = c:GER
								country_has_primary_culture = cu:north_german
							}
						}
						add = 5
					}
					if = {
						limit = {
							has_variable = babylon_berlin_conference_ai_strategic_objective_14
						}
						add = 25
					}
				}
				# Congo
				berlin_conference_distribute_points_for_ai_subroutine_REGION_STATE = {
					REGION = 6
					STATE = 3
				}
			}
			1 = {
				trigger = {
					babylon_berlin_conference_can_colonise_STATE_REGION = {
						REGION = 6
						STATE = 4
					}
				}
				modifier = {
					# Wanted by these countries
					if = {
						limit = {
							this = c:FRA
						}
						add = 5
					}
					if = {
						limit = {
							has_variable = babylon_berlin_conference_ai_strategic_objective_14
						}
						add = 25
					}
				}
				# Congo
				berlin_conference_distribute_points_for_ai_subroutine_REGION_STATE = {
					REGION = 6
					STATE = 4
				}
			}
			1 = {
				trigger = {
					babylon_berlin_conference_can_colonise_STATE_REGION = {
						REGION = 6
						STATE = 5
					}
				}
				modifier = {
					# Wanted by these countries
					if = {
						limit = {
							OR = {
								this = c:FRA
								this = c:GER
								country_has_primary_culture = cu:north_german
							}
						}
						add = 5
					}
					if = {
						limit = {
							has_variable = babylon_berlin_conference_ai_strategic_objective_14
						}
						add = 25
					}
				}
				# Congo
				berlin_conference_distribute_points_for_ai_subroutine_REGION_STATE = {
					REGION = 6
					STATE = 5
				}
			}
			1 = {
				trigger = {
					babylon_berlin_conference_can_colonise_STATE_REGION = {
						REGION = 6
						STATE = 6
					}
				}
				modifier = {
					# Wanted by these countries
					if = {
						limit = {
							OR = {
								this = c:FRA
								this = c:GER
								country_has_primary_culture = cu:north_german
							}
						}
						add = 25
					}
					if = {
						limit = {
							has_variable = babylon_berlin_conference_ai_strategic_objective_17
						}
						add = 25
					}
				}
				berlin_conference_distribute_points_for_ai_subroutine_REGION_STATE = {
					REGION = 6
					STATE = 6
				}
			}
			1 = {
				trigger = {
					babylon_berlin_conference_can_colonise_STATE_REGION = {
						REGION = 6
						STATE = 7
					}
				}
				modifier = {
					# Wanted by these countries
					if = {
						limit = {
							this = c:POR
						}
						add = 25
					}
					if = {
						limit = {
							has_variable = babylon_berlin_conference_ai_strategic_objective_12
						}
						add = 25
					}
				}
				berlin_conference_distribute_points_for_ai_subroutine_REGION_STATE = {
					REGION = 6
					STATE = 7
				}
			}
			1 = {
				trigger = {
					babylon_berlin_conference_can_colonise_STATE_REGION = {
						REGION = 6
						STATE = 8
					}
				}
				modifier = {
					# Wanted by these countries
					if = {
						limit = {
							this = c:POR
						}
						add = 25
					}
					if = {
						limit = {
							has_variable = babylon_berlin_conference_ai_strategic_objective_12
						}
						add = 25
					}
				}
				berlin_conference_distribute_points_for_ai_subroutine_REGION_STATE = {
					REGION = 6
					STATE = 8
				}
			}
			1 = {
				trigger = {
					babylon_berlin_conference_can_colonise_STATE_REGION = {
						REGION = 6
						STATE = 9
					}
				}
				modifier = {
					# Wanted by these countries
					if = {
						limit = {
							this = c:POR
						}
						add = 25
					}
					if = {
						limit = {
							has_variable = babylon_berlin_conference_ai_strategic_objective_12
						}
						add = 25
					}
				}
				berlin_conference_distribute_points_for_ai_subroutine_REGION_STATE = {
					REGION = 6
					STATE = 9
				}
			}
			1 = {
				trigger = {
					babylon_berlin_conference_can_colonise_STATE_REGION = {
						REGION = 6
						STATE = 10
					}
				}
				modifier = {
					# Wanted by these countries
					if = {
						limit = {
							this = c:GBR
						}
						add = 25
					}
					if = {
						limit = {
							this = c:POR
						}
						add = 5
					}
					if = {
						limit = {
							has_variable = babylon_berlin_conference_ai_strategic_objective_13
						}
						add = 25
					}
				}
				berlin_conference_distribute_points_for_ai_subroutine_REGION_STATE = {
					REGION = 6
					STATE = 10
				}
			}
			1 = {
				trigger = {
					babylon_berlin_conference_can_colonise_STATE_REGION = {
						REGION = 6
						STATE = 11
					}
				}
				modifier = {
					# Wanted by these countries
					if = {
						limit = {
							OR = {
								this = c:FRA
								this = c:GER
								country_has_primary_culture = cu:north_german
							}
						}
						add = 25
					}
					if = {
						limit = {
							this = c:SPA
						}
						add = 5
					}
					if = {
						limit = {
							has_variable = babylon_berlin_conference_ai_strategic_objective_15
						}
						add = 25
					}
				}
				berlin_conference_distribute_points_for_ai_subroutine_REGION_STATE = {
					REGION = 6
					STATE = 11
				}
			}
			1 = {
				trigger = {
					babylon_berlin_conference_can_colonise_STATE_REGION = {
						REGION = 6
						STATE = 12
					}
				}
				modifier = {
					# Wanted by these countries
					if = {
						limit = {
							OR = {
								this = c:GER
								country_has_primary_culture = cu:north_german
							}
						}
						add = 25
					}
					if = {
						limit = {
							OR = {
								this = c:FRA
								this = c:SPA
							}
						}
						add = 5
					}
					if = {
						limit = {
							has_variable = babylon_berlin_conference_ai_strategic_objective_16
						}
						add = 25
					}
				}
				berlin_conference_distribute_points_for_ai_subroutine_REGION_STATE = {
					REGION = 6
					STATE = 12
				}
			}
			1 = {
				trigger = {
					babylon_berlin_conference_can_colonise_STATE_REGION = {
						REGION = 6
						STATE = 13
					}
				}
				modifier = {
					# Wanted by these countries
					if = {
						limit = {
							OR = {
								this = c:FRA
								this = c:GER
								country_has_primary_culture = cu:north_german
							}
						}
						add = 5
					}
					if = {
						limit = {
							has_variable = babylon_berlin_conference_ai_strategic_objective_14
						}
						add = 25
					}
				}
				# Congo
				berlin_conference_distribute_points_for_ai_subroutine_REGION_STATE = {
					REGION = 6
					STATE = 13
				}
			}
			1 = {
				trigger = {
					babylon_berlin_conference_can_colonise_STATE_REGION = {
						REGION = 7
						STATE = 1
					}
				}
				modifier = {
					# Wanted by these countries
					if = {
						limit = {
							OR = {
								this = c:GBR
								this = c:GER
								country_has_primary_culture = cu:north_german
							}
						}
						add = 5
					}
					if = {
						limit = {
							has_variable = babylon_berlin_conference_ai_strategic_objective_11
						}
						add = 25
					}
				}
				berlin_conference_distribute_points_for_ai_subroutine_REGION_STATE = {
					REGION = 7
					STATE = 1
				}
			}
			1 = {
				trigger = {
					babylon_berlin_conference_can_colonise_STATE_REGION = {
						REGION = 7
						STATE = 2
					}
				}
				modifier = {
					# Wanted by these countries
					if = {
						limit = {
							this = c:GBR
						}
						add = 25
					}
					if = {
						limit = {
							has_variable = babylon_berlin_conference_ai_strategic_objective_13
						}
						add = 25
					}
				}
				berlin_conference_distribute_points_for_ai_subroutine_REGION_STATE = {
					REGION = 7
					STATE = 2
				}
			}
			1 = {
				trigger = {
					babylon_berlin_conference_can_colonise_STATE_REGION = {
						REGION = 7
						STATE = 3
					}
				}
				modifier = {
					# Wanted by these countries
					if = {
						limit = {
							this = c:GBR
						}
						add = 25
					}
					if = {
						limit = {
							this = c:NET
						}
						add = 5
					}
					if = {
						limit = {
							has_variable = babylon_berlin_conference_ai_strategic_objective_10
						}
						add = 25
					}
				}
				berlin_conference_distribute_points_for_ai_subroutine_REGION_STATE = {
					REGION = 7
					STATE = 3
				}
			}
			1 = {
				trigger = {
					babylon_berlin_conference_can_colonise_STATE_REGION = {
						REGION = 7
						STATE = 4
					}
				}
				modifier = {
					# Wanted by these countries
					if = {
						limit = {
							this = c:GBR
						}
						add = 25
					}
					if = {
						limit = {
							this = c:NET
						}
						add = 5
					}
					if = {
						limit = {
							has_variable = babylon_berlin_conference_ai_strategic_objective_10
						}
						add = 25
					}
				}
				berlin_conference_distribute_points_for_ai_subroutine_REGION_STATE = {
					REGION = 7
					STATE = 4
				}
			}
			1 = {
				trigger = {
					babylon_berlin_conference_can_colonise_STATE_REGION = {
						REGION = 7
						STATE = 5
					}
				}
				modifier = {
					# Wanted by these countries
					if = {
						limit = {
							this = c:GBR
						}
						add = 25
					}
					if = {
						limit = {
							this = c:NET
						}
						add = 5
					}
					if = {
						limit = {
							has_variable = babylon_berlin_conference_ai_strategic_objective_10
						}
						add = 25
					}
				}
				berlin_conference_distribute_points_for_ai_subroutine_REGION_STATE = {
					REGION = 7
					STATE = 5
				}
			}
			1 = {
				trigger = {
					babylon_berlin_conference_can_colonise_STATE_REGION = {
						REGION = 7
						STATE = 6
					}
				}
				modifier = {
					# Wanted by these countries
					if = {
						limit = {
							this = c:GBR
						}
						add = 25
					}
					if = {
						limit = {
							this = c:NET
						}
						add = 5
					}
					if = {
						limit = {
							has_variable = babylon_berlin_conference_ai_strategic_objective_9
						}
						add = 25
					}
				}
				berlin_conference_distribute_points_for_ai_subroutine_REGION_STATE = {
					REGION = 7
					STATE = 6
				}
			}
			1 = {
				trigger = {
					babylon_berlin_conference_can_colonise_STATE_REGION = {
						REGION = 7
						STATE = 7
					}
				}
				modifier = {
					# Wanted by these countries
					if = {
						limit = {
							this = c:GBR
						}
						add = 25
					}
					if = {
						limit = {
							this = c:NET
						}
						add = 5
					}
					if = {
						limit = {
							has_variable = babylon_berlin_conference_ai_strategic_objective_9
						}
						add = 25
					}
				}
				berlin_conference_distribute_points_for_ai_subroutine_REGION_STATE = {
					REGION = 7
					STATE = 7
				}
			}
			1 = {
				trigger = {
					babylon_berlin_conference_can_colonise_STATE_REGION = {
						REGION = 7
						STATE = 8
					}
				}
				modifier = {
					# Wanted by these countries
					if = {
						limit = {
							this = c:GBR
						}
						add = 25
					}
					if = {
						limit = {
							this = c:NET
						}
						add = 5
					}
					if = {
						limit = {
							has_variable = babylon_berlin_conference_ai_strategic_objective_9
						}
						add = 25
					}
				}
				berlin_conference_distribute_points_for_ai_subroutine_REGION_STATE = {
					REGION = 7
					STATE = 8
				}
			}
			1 = {
				trigger = {
					babylon_berlin_conference_can_colonise_STATE_REGION = {
						REGION = 7
						STATE = 9
					}
				}
				modifier = {
					# Wanted by these countries
					if = {
						limit = {
							OR = {
								this = c:GBR
								this = c:GER
								country_has_primary_culture = cu:north_german
							}
						}
						add = 5
					}
					if = {
						limit = {
							has_variable = babylon_berlin_conference_ai_strategic_objective_11
						}
						add = 25
					}
				}
				berlin_conference_distribute_points_for_ai_subroutine_REGION_STATE = {
					REGION = 7
					STATE = 9
				}
			}
			1 = {
				trigger = {
					babylon_berlin_conference_can_colonise_STATE_REGION = {
						REGION = 7
						STATE = 10
					}
				}
				modifier = {
					# Wanted by these countries
					if = {
						limit = {
							this = c:POR
						}
						add = 25
					}
					if = {
						limit = {
							has_variable = babylon_berlin_conference_ai_strategic_objective_8
						}
						add = 25
					}
				}
				berlin_conference_distribute_points_for_ai_subroutine_REGION_STATE = {
					REGION = 7
					STATE = 10
				}
			}
			1 = {
				trigger = {
					babylon_berlin_conference_can_colonise_STATE_REGION = {
						REGION = 7
						STATE = 11
					}
				}
				modifier = {
					# Wanted by these countries
					if = {
						limit = {
							this = c:GBR
						}
						add = 25
					}
					if = {
						limit = {
							this = c:POR
						}
						add = 5
					}
					if = {
						limit = {
							has_variable = babylon_berlin_conference_ai_strategic_objective_13
						}
						add = 25
					}
				}
				berlin_conference_distribute_points_for_ai_subroutine_REGION_STATE = {
					REGION = 7
					STATE = 11
				}
			}
			1 = {
				trigger = {
					babylon_berlin_conference_can_colonise_STATE_REGION = {
						REGION = 8
						STATE = 1
					}
				}
				modifier = {
					# Wanted by these countries
					if = {
						limit = {
							OR = {
								this = c:GER
								country_has_primary_culture = cu:north_german
							}
						}
						add = 25
					}
					if = {
						limit = {
							this = c:GBR
						}
						add = 5
					}
					if = {
						limit = {
							has_variable = babylon_berlin_conference_ai_strategic_objective_6
						}
						add = 25
					}
				}
				berlin_conference_distribute_points_for_ai_subroutine_REGION_STATE = {
					REGION = 8
					STATE = 1
				}
			}
			1 = {
				trigger = {
					babylon_berlin_conference_can_colonise_STATE_REGION = {
						REGION = 8
						STATE = 2
					}
				}
				modifier = {
					# Wanted by these countries
					if = {
						limit = {
							OR = {
								this = c:GER
								country_has_primary_culture = cu:north_german
							}
						}
						add = 25
					}
					if = {
						limit = {
							this = c:GBR
						}
						add = 5
					}
					if = {
						limit = {
							has_variable = babylon_berlin_conference_ai_strategic_objective_6
						}
						add = 25
					}
				}
				berlin_conference_distribute_points_for_ai_subroutine_REGION_STATE = {
					REGION = 8
					STATE = 2
				}
			}
			1 = {
				trigger = {
					babylon_berlin_conference_can_colonise_STATE_REGION = {
						REGION = 8
						STATE = 3
					}
				}
				modifier = {
					# Wanted by these countries
					if = {
						limit = {
							this = GBR
						}
						add = 25
					}
					if = {
						limit = {
							this = c:POR
						}
						add = 5
					}
					if = {
						limit = {
							has_variable = babylon_berlin_conference_ai_strategic_objective_8
						}
						add = 25
					}
				}
				berlin_conference_distribute_points_for_ai_subroutine_REGION_STATE = {
					REGION = 8
					STATE = 3
				}
			}
			1 = {
				trigger = {
					babylon_berlin_conference_can_colonise_STATE_REGION = {
						REGION = 8
						STATE = 4
					}
				}
				modifier = {
					# Wanted by these countries
					if = {
						limit = {
							OR = {
								this = c:GER
								country_has_primary_culture = cu:north_german
							}
						}
						add = 25
					}
					if = {
						limit = {
							this = c:GBR
						}
						add = 5
					}
					if = {
						limit = {
							has_variable = babylon_berlin_conference_ai_strategic_objective_6
						}
						add = 25
					}
				}
				berlin_conference_distribute_points_for_ai_subroutine_REGION_STATE = {
					REGION = 8
					STATE = 4
				}
			}
			1 = {
				trigger = {
					babylon_berlin_conference_can_colonise_STATE_REGION = {
						REGION = 8
						STATE = 5
					}
				}
				modifier = {
					# Wanted by these countries
					if = {
						limit = {
							OR = {
								this = c:GBR
								this = c:FRA
							}
						}
						add = 5
					}
					if = {
						limit = {
							has_variable = babylon_berlin_conference_ai_strategic_objective_7
						}
						add = 25
					}
				}
				berlin_conference_distribute_points_for_ai_subroutine_REGION_STATE = {
					REGION = 8
					STATE = 5
				}
			}
			1 = {
				trigger = {
					babylon_berlin_conference_can_colonise_STATE_REGION = {
						REGION = 8
						STATE = 6
					}
				}
				modifier = {
					# Wanted by these countries
					if = {
						limit = {
							OR = {
								this = c:GBR
								this = c:FRA
							}
						}
						add = 5
					}
					if = {
						limit = {
							has_variable = babylon_berlin_conference_ai_strategic_objective_7
						}
						add = 25
					}
				}
				berlin_conference_distribute_points_for_ai_subroutine_REGION_STATE = {
					REGION = 8
					STATE = 6
				}
			}
			1 = {
				trigger = {
					babylon_berlin_conference_can_colonise_STATE_REGION = {
						REGION = 8
						STATE = 7
					}
				}
				modifier = {
					# Wanted by these countries
					if = {
						limit = {
							OR = {
								this = c:GBR
								this = c:FRA
							}
						}
						add = 25
					}
					if = {
						limit = {
							has_variable = babylon_berlin_conference_ai_strategic_objective_7
						}
						add = 25
					}
				}
				berlin_conference_distribute_points_for_ai_subroutine_REGION_STATE = {
					REGION = 8
					STATE = 7
				}
			}
			1 = {
				trigger = {
					babylon_berlin_conference_can_colonise_STATE_REGION = {
						REGION = 8
						STATE = 8
					}
				}
				modifier = {
					# Wanted by these countries
					if = {
						limit = {
							this = c:GBR
						}
						add = 25
					}
					if = {
						limit = {
							OR = {
								this = c:GER
								country_has_primary_culture = cu:north_german
							}
						}
						add = 5
					}
					if = {
						limit = {
							has_variable = babylon_berlin_conference_ai_strategic_objective_13
						}
						add = 25
					}
				}
				berlin_conference_distribute_points_for_ai_subroutine_REGION_STATE = {
					REGION = 8
					STATE = 8
				}
			}
			1 = {
				trigger = {
					babylon_berlin_conference_can_colonise_STATE_REGION = {
						REGION = 8
						STATE = 9
					}
				}
				modifier = {
					# Wanted by these countries
					if = {
						limit = {
							this = c:GBR
						}
						add = 25
					}
					if = {
						limit = {
							this = c:POR
						}
						add = 5
					}
					if = {
						limit = {
							has_variable = babylon_berlin_conference_ai_strategic_objective_8
						}
						add = 25
					}
				}
				berlin_conference_distribute_points_for_ai_subroutine_REGION_STATE = {
					REGION = 8
					STATE = 9
				}
			}
			1 = {
				trigger = {
					babylon_berlin_conference_can_colonise_STATE_REGION = {
						REGION = 8
						STATE = 10
					}
				}
				modifier = {
					# Wanted by these countries
					if = {
						limit = {
							this = c:GBR
						}
						add = 25
					}
					if = {
						limit = {
							OR = {
								this = c:GER
								country_has_primary_culture = cu:north_german
							}
						}
						add = 5
					}
					if = {
						limit = {
							has_variable = babylon_berlin_conference_ai_strategic_objective_5
						}
						add = 25
					}
				}
				berlin_conference_distribute_points_for_ai_subroutine_REGION_STATE = {
					REGION = 8
					STATE = 10
				}
			}
			1 = {
				trigger = {
					babylon_berlin_conference_can_colonise_STATE_REGION = {
						REGION = 8
						STATE = 11
					}
				}
				modifier = {
					# Wanted by these countries
					if = {
						limit = {
							this = c:GBR
						}
						add = 25
					}
					if = {
						limit = {
							OR = {
								this = c:GER
								country_has_primary_culture = cu:north_german
							}
						}
						add = 5
					}
					if = {
						limit = {
							has_variable = babylon_berlin_conference_ai_strategic_objective_5
						}
						add = 25
					}
				}
				berlin_conference_distribute_points_for_ai_subroutine_REGION_STATE = {
					REGION = 8
					STATE = 11
				}
			}
			1 = {
				trigger = {
					babylon_berlin_conference_can_colonise_STATE_REGION = {
						REGION = 8
						STATE = 12
					}
				}
				modifier = {
					# Wanted by these countries
					if = {
						limit = {
							this = c:GBR
						}
						add = 25
					}
					if = {
						limit = {
							OR = {
								this = c:GER
								country_has_primary_culture = cu:north_german
							}
						}
						add = 5
					}
					if = {
						limit = {
							has_variable = babylon_berlin_conference_ai_strategic_objective_5
						}
						add = 25
					}
				}
				berlin_conference_distribute_points_for_ai_subroutine_REGION_STATE = {
					REGION = 8
					STATE = 12
				}
			}
		}
	}
	# Out of the while loop
}

berlin_conference_distribute_points_for_ai_subroutine_REGION_STATE = {
	if = {
		# check if random state is reachable/claimable
		# Just to be sure
		limit = {
			babylon_berlin_conference_can_colonise_STATE_REGION = {
				REGION = $REGION$
				STATE = $STATE$
			}
		}
		# then give it some points
		random_list = {
			1 = {
				change_POINTS_in_STATE_in_REGION = {
					REGION = $REGION$
					STATE = $STATE$
					POINTS = 1
				}
			}
			1 = {
				trigger = {
					var:babylon_berlin_conference_points_remaining >= 2
				}
				change_POINTS_in_STATE_in_REGION = {
					REGION = $REGION$
					STATE = $STATE$
					POINTS = 2
				}
			}
			1 = {
				trigger = {
					var:babylon_berlin_conference_points_remaining >= 3
				}
				change_POINTS_in_STATE_in_REGION = {
					REGION = $REGION$
					STATE = $STATE$
					POINTS = 3
				}
			}
			1 = {
				trigger = {
					var:babylon_berlin_conference_points_remaining >= 4
				}
				change_POINTS_in_STATE_in_REGION = {
					REGION = $REGION$
					STATE = $STATE$
					POINTS = 4
				}
			}
			1 = {
				trigger = {
					var:babylon_berlin_conference_points_remaining >= 5
				}
				change_POINTS_in_STATE_in_REGION = {
					REGION = $REGION$
					STATE = $STATE$
					POINTS = 5
				}
			}
		}
	}
}

congo_free_state_dish_out_provinces_between_rounds = {
	#Goes through the lists
	every_in_global_list = {
		variable = babylon_add_to_NFS_states
		any_scope_state = {
			limit = {
				owner = {
					has_variable = berlin_conference_participant
				}
			}
			set_state_owner = c:NFS
		}
		add_claim = c:NFS
		add_modifier = {
			name = promised_to_NFS_modifier
		}
	}
	clear_global_variable_list = babylon_add_to_NFS_states
	every_in_global_list = {
		variable = babylon_add_to_EFS_states
		any_scope_state = {
			limit = {
				owner = {
					has_variable = berlin_conference_participant
				}
			}
			set_state_owner = c:EFS
		}
		add_claim = c:EFS
		add_modifier = {
			name = promised_to_EFS_modifier
		}
	}
	clear_global_variable_list = babylon_add_to_EFS_states
	every_in_global_list = {
		variable = babylon_add_to_MFS_states
		any_scope_state = {
			limit = {
				owner = {
					has_variable = berlin_conference_participant
				}
			}
			set_state_owner = c:MFS
		}
		add_claim = c:MFS
		add_modifier = {
			name = promised_to_MFS_modifier
		}
	}
	clear_global_variable_list = babylon_add_to_MFS_states
	every_in_global_list = {
		variable = babylon_add_to_SFS_states
		any_scope_state = {
			limit = {
				owner = {
					has_variable = berlin_conference_participant
				}
			}
			set_state_owner = c:SFS
		}
		add_claim = c:SFS
		add_modifier = {
			name = promised_to_SFS_modifier
		}
	}
	clear_global_variable_list = babylon_add_to_SFS_states
	every_in_global_list = {
		variable = babylon_add_to_IFS_states
		any_scope_state = {
			limit = {
				owner = {
					has_variable = berlin_conference_participant
				}
			}
			set_state_owner = c:IFS
		}
		add_claim = c:IFS
		add_modifier = {
			name = promised_to_IFS_modifier
		}
	}
	clear_global_variable_list = babylon_add_to_IFS_states
	every_in_global_list = {
		variable = babylon_add_to_CFS_states
		any_scope_state = {
			limit = {
				owner = {
					has_variable = berlin_conference_participant
				}
			}
			set_state_owner = c:CFS
		}
		add_claim = c:CFS
		add_modifier = {
			name = promised_to_CFS_modifier
		}
	}
	clear_global_variable_list = babylon_add_to_CFS_states
	every_in_global_list = {
		variable = babylon_add_to_OFS_states
		any_scope_state = {
			limit = {
				owner = {
					has_variable = berlin_conference_participant
				}
			}
			set_state_owner = c:OFS
		}
		add_claim = c:OFS
		add_modifier = {
			name = promised_to_OFS_modifier
		}
	}
	clear_global_variable_list = babylon_add_to_OFS_states
	every_in_global_list = {
		variable = babylon_add_to_ZFS_states
		any_scope_state = {
			limit = {
				owner = {
					has_variable = berlin_conference_participant
				}
			}
			set_state_owner = c:ZFS
		}
		add_claim = c:ZFS
		add_modifier = {
			name = promised_to_ZFS_modifier
		}
	}
	clear_global_variable_list = babylon_add_to_ZFS_states
}

babylon_berlin_conference_give_ai_strategic_objectives = {
	set_variable = {
		name = babylon_berlin_conference_give_ai_strategic_objective_points
		value = var:babylon_berlin_conference_points_remaining
	}
	while = {
		# Runs this once for every 25 points ROOT have
		limit = {
			var:babylon_berlin_conference_give_ai_strategic_objective_points > 0
		}
		random_list = {
			10 = {
				# Egypt proper
				trigger = {
					NOT = {
						has_variable = babylon_berlin_conference_ai_strategic_objective_1
					}
				}
				modifier = {
					if = {
						limit = {
							this = c:GBR
						}
						add = 10
					}
				}
				set_variable = babylon_berlin_conference_ai_strategic_objective_1
			}
			10 = {
				# Sudan
				trigger = {
					NOT = {
						has_variable = babylon_berlin_conference_ai_strategic_objective_2
					}
				}
				modifier = {
					if = {
						limit = {
							this = c:GBR
						}
						add = 10
					}
				}
				set_variable = babylon_berlin_conference_ai_strategic_objective_2
			}
			5 = {
				# Ethiopia proper
				trigger = {
					NOT = {
						has_variable = babylon_berlin_conference_ai_strategic_objective_3
					}
					# Should have a coastline to reach this; nobody took this historically (Ehtiopia)
					has_variable = babylon_berlin_conference_ai_strategic_objective_4
				}
				set_variable = babylon_berlin_conference_ai_strategic_objective_3
			}
			10 = {
				# Somaliland / Eritrea
				trigger = {
					NOT = {
						has_variable = babylon_berlin_conference_ai_strategic_objective_4
					}
				}
				modifier = {
					if = {
						limit = {
							OR = {
								this = c:GBR
								country_has_primary_culture = cu:north_italian
								country_has_primary_culture = cu:south_italian
							}
						}
						add = 10
					}
				}
				set_variable = babylon_berlin_conference_ai_strategic_objective_4
			}
			10 = {
				# Kenya / Uganda
				trigger = {
					NOT = {
						has_variable = babylon_berlin_conference_ai_strategic_objective_5
					}
				}
				modifier = {
					if = {
						limit = {
							this = c:GBR
						}
						add = 10
					}
				}
				set_variable = babylon_berlin_conference_ai_strategic_objective_5
			}
			10 = {
				# Tanzania / german east african possessions
				trigger = {
					NOT = {
						has_variable = babylon_berlin_conference_ai_strategic_objective_6
					}
				}
				modifier = {
					if = {
						limit = {
							OR = {
								this = c:GER
								country_has_primary_culture = cu:north_german
							}
						}
						add = 10
					}
				}
				set_variable = babylon_berlin_conference_ai_strategic_objective_6
			}
			10 = {
				# Madagascar and Islands
				trigger = {
					NOT = {
						has_variable = babylon_berlin_conference_ai_strategic_objective_7
					}
				}
				modifier = {
					if = {
						limit = {
							this = c:FRA
						}
						add = 10
					}
				}
				set_variable = babylon_berlin_conference_ai_strategic_objective_7
			}
			5 = {
				# Mocambique
				trigger = {
					NOT = {
						has_variable = babylon_berlin_conference_ai_strategic_objective_8
					}
				}
				modifier = {
					if = {
						limit = {
							this = c:POR
						}
						add = 25
					}
				}
				set_variable = babylon_berlin_conference_ai_strategic_objective_8
			}
			5 = {
				# Boer Republics
				trigger = {
					NOT = {
						has_variable = babylon_berlin_conference_ai_strategic_objective_9
					}
				}
				modifier = {
					if = {
						limit = {
							this = c:GBR
						}
						add = 25
					}
				}
				set_variable = babylon_berlin_conference_ai_strategic_objective_9
			}
			5 = {
				# Cape Colony
				trigger = {
					NOT = {
						has_variable = babylon_berlin_conference_ai_strategic_objective_10
					}
				}
				modifier = {
					if = {
						limit = {
							this = c:GBR
						}
						add = 25
					}
				}
				set_variable = babylon_berlin_conference_ai_strategic_objective_10
			}
			10 = {
				# German Southern possessions
				trigger = {
					NOT = {
						has_variable = babylon_berlin_conference_ai_strategic_objective_11
					}
				}
				modifier = {
					if = {
						limit = {
							OR = {
								this = c:GER
								country_has_primary_culture = cu:north_german
							}
						}
						add = 10
					}
				}
				set_variable = babylon_berlin_conference_ai_strategic_objective_11
			}
			5 = {
				# Angola
				trigger = {
					NOT = {
						has_variable = babylon_berlin_conference_ai_strategic_objective_12
					}
				}
				modifier = {
					if = {
						limit = {
							this = c:POR
						}
						add = 25
					}
				}
				set_variable = babylon_berlin_conference_ai_strategic_objective_12
			}
			10 = {
				# Botswana / Zimbabwe / Zambia
				trigger = {
					NOT = {
						has_variable = babylon_berlin_conference_ai_strategic_objective_13
					}
					# Inland
					OR = {
						has_variable = babylon_berlin_conference_ai_strategic_objective_8
						has_variable = babylon_berlin_conference_ai_strategic_objective_12
						has_variable = babylon_berlin_conference_ai_strategic_objective_10
						has_variable = babylon_berlin_conference_ai_strategic_objective_9
					}
				}
				modifier = {
					if = {
						limit = {
							OR = {
								this = c:GBR
								#Portugal wanted the Pink Map
								this = c:POR
							}
						}
						add = 10
					}
				}
				set_variable = babylon_berlin_conference_ai_strategic_objective_13
			}
			5 = {
				# Congo Free State
				trigger = {
					NOT = {
						has_variable = babylon_berlin_conference_ai_strategic_objective_14
					}
				}
				set_variable = babylon_berlin_conference_ai_strategic_objective_14
			}
			10 = {
				# Gabon
				trigger = {
					NOT = {
						has_variable = babylon_berlin_conference_ai_strategic_objective_15
					}
				}
				modifier = {
					if = {
						limit = {
							this = c:FRA
						}
						add = 10
					}
				}
				set_variable = babylon_berlin_conference_ai_strategic_objective_15
			}
			10 = {
				# Cameroon
				trigger = {
					NOT = {
						has_variable = babylon_berlin_conference_ai_strategic_objective_16
					}
				}
				modifier = {
					if = {
						limit = {
							OR = {
								this = c:GER
								country_has_primary_culture = cu:north_german
							}
						}
						add = 10
					}
				}
				set_variable = babylon_berlin_conference_ai_strategic_objective_16
			}
			10 = {
				# Chad / CAR
				trigger = {
					NOT = {
						has_variable = babylon_berlin_conference_ai_strategic_objective_17
					}
					# Inland
					OR = {
						has_variable = babylon_berlin_conference_ai_strategic_objective_2
						has_variable = babylon_berlin_conference_ai_strategic_objective_16
						has_variable = babylon_berlin_conference_ai_strategic_objective_8
						has_variable = babylon_berlin_conference_ai_strategic_objective_25
					}
				}
				modifier = {
					if = {
						limit = {
							this = c:FRA
						}
						add = 10
					}
				}
				set_variable = babylon_berlin_conference_ai_strategic_objective_17
			}
			10 = {
				# Nigeria
				trigger = {
					NOT = {
						has_variable = babylon_berlin_conference_ai_strategic_objective_18
					}
				}
				modifier = {
					if = {
						limit = {
							this = c:GBR
						}
						add = 10
					}
				}
				set_variable = babylon_berlin_conference_ai_strategic_objective_18
			}
			10 = {
				# Benin / parts of Southern Niger
				trigger = {
					NOT = {
						has_variable = babylon_berlin_conference_ai_strategic_objective_19
					}
				}
				modifier = {
					if = {
						limit = {
							this = c:FRA
						}
						add = 10
					}
				}
				set_variable = babylon_berlin_conference_ai_strategic_objective_19
			}
			10 = {
				# Ghana
				trigger = {
					NOT = {
						has_variable = babylon_berlin_conference_ai_strategic_objective_20
					}
				}
				modifier = {
					if = {
						limit = {
							OR = {
								this = c:GER
								country_has_primary_culture = cu:north_german
								this = c:GBR
							}
						}
						add = 10
					}
				}
				set_variable = babylon_berlin_conference_ai_strategic_objective_20
			}
			10 = {
				# Ghana
				trigger = {
					NOT = {
						has_variable = babylon_berlin_conference_ai_strategic_objective_21
					}
				}
				modifier = {
					if = {
						limit = {
							this = c:FRA
						}
						add = 10
					}
				}
				set_variable = babylon_berlin_conference_ai_strategic_objective_21
			}
			5 = {
				# Liberia and Sierra Leone
				trigger = {
					NOT = {
						has_variable = babylon_berlin_conference_ai_strategic_objective_22
					}
				}
				modifier = {
					if = {
						limit = {
							this = c:GBR
						}
						add = 25
					}
				}
				set_variable = babylon_berlin_conference_ai_strategic_objective_22
			}
			10 = {
				# Guinea / Senegal
				trigger = {
					NOT = {
						has_variable = babylon_berlin_conference_ai_strategic_objective_23
					}
				}
				modifier = {
					if = {
						limit = {
							this = c:FRA
						}
						add = 10
					}
				}
				set_variable = babylon_berlin_conference_ai_strategic_objective_23
			}
			10 = {
				# West Sahara
				trigger = {
					NOT = {
						has_variable = babylon_berlin_conference_ai_strategic_objective_24
					}
				}
				modifier = {
					if = {
						limit = {
							OR = {
								this = c:FRA
								this = c:SPA
							}
						}
						add = 10
					}
				}
				set_variable = babylon_berlin_conference_ai_strategic_objective_24
			}
			10 = {
				# Mali / Niger
				trigger = {
					NOT = {
						has_variable = babylon_berlin_conference_ai_strategic_objective_25
					}
					# Inland
					OR = {
						has_variable = babylon_berlin_conference_ai_strategic_objective_26
						has_variable = babylon_berlin_conference_ai_strategic_objective_29
						has_variable = babylon_berlin_conference_ai_strategic_objective_19
						has_variable = babylon_berlin_conference_ai_strategic_objective_21
						has_variable = babylon_berlin_conference_ai_strategic_objective_24
						has_variable = babylon_berlin_conference_ai_strategic_objective_17
					}
				}
				modifier = {
					if = {
						limit = {
							this = c:FRA
						}
						add = 10
					}
				}
				set_variable = babylon_berlin_conference_ai_strategic_objective_25
			}
			10 = {
				# Algerian Desert
				trigger = {
					NOT = {
						has_variable = babylon_berlin_conference_ai_strategic_objective_26
					}
					OR = {
						has_variable = babylon_berlin_conference_ai_strategic_objective_28
						has_variable = babylon_berlin_conference_ai_strategic_objective_27
						has_variable = babylon_berlin_conference_ai_strategic_objective_29
						has_variable = babylon_berlin_conference_ai_strategic_objective_24
						has_variable = babylon_berlin_conference_ai_strategic_objective_25
					}
				}
				modifier = {
					if = {
						limit = {
							this = c:FRA
						}
						add = 10
					}
				}
				set_variable = babylon_berlin_conference_ai_strategic_objective_26
			}
			10 = {
				# Morocco
				trigger = {
					NOT = {
						has_variable = babylon_berlin_conference_ai_strategic_objective_27
					}
				}
				modifier = {
					if = {
						limit = {
							this = c:FRA
						}
						add = 10
					}
				}
				set_variable = babylon_berlin_conference_ai_strategic_objective_27
			}
			5 = {
				# Algeria / Tunis
				trigger = {
					NOT = {
						has_variable = babylon_berlin_conference_ai_strategic_objective_28
					}
				}
				modifier = {
					if = {
						limit = {
							this = c:FRA
						}
						add = 25
					}
				}
				set_variable = babylon_berlin_conference_ai_strategic_objective_28
			}
			10 = {
				# Libya
				trigger = {
					NOT = {
						has_variable = babylon_berlin_conference_ai_strategic_objective_29
					}
				}
				modifier = {
					if = {
						limit = {
							OR = {
								country_has_primary_culture = cu:north_italian
								country_has_primary_culture = cu:south_italian
							}
						}
						add = 10
					}
				}
				set_variable = babylon_berlin_conference_ai_strategic_objective_29
			}
		}
		# Exit the random list
		# Change the objective points by 25
		change_variable = {
			name = babylon_berlin_conference_give_ai_strategic_objective_points
			subtract = 25
		}
	}
}

berlin_conference_stage_3_start_effect = {
	# Should be fired once, in the proposer preferably
	if = {
		limit = {
			exists = c:NFS
		}
		if = {
			limit = {
				has_variable = babylon_berlin_conference_proposer
			}
			# Fire only once
			# Gives 3 random candidate countries a variable each, that the participants use to give themselves scopes pointing at the candidates
			random_country = {
				limit = {
					congo_free_state_COUNTRY_is_possible_overlord = yes
				}
				set_variable = egyptian_free_state_candidate_1
			}
			random_country = {
				limit = {
					congo_free_state_COUNTRY_is_possible_overlord = yes
				}
				set_variable = egyptian_free_state_candidate_2
			}
			random_country = {
				limit = {
					congo_free_state_COUNTRY_is_possible_overlord = yes
				}
				set_variable = egyptian_free_state_candidate_3
			}
		}
		every_country = {
			limit = {
				has_variable = berlin_conference_participant
			}
			add_journal_entry = {
				type = je_babylon_egyptian_free_state_owner
			}
		}
	}
	if = {
		limit = {
			exists = c:EFS
		}
		if = {
			limit = {
				has_variable = babylon_berlin_conference_proposer
			}
			# Fire only once
			# Gives 3 random candidate countries a variable each, that the participants use to give themselves scopes pointing at the candidates
			random_country = {
				limit = {
					congo_free_state_COUNTRY_is_possible_overlord = yes
				}
				set_variable = ethiopia_free_state_candidate_1
			}
			random_country = {
				limit = {
					congo_free_state_COUNTRY_is_possible_overlord = yes
				}
				set_variable = ethiopia_free_state_candidate_2
			}
			random_country = {
				limit = {
					congo_free_state_COUNTRY_is_possible_overlord = yes
				}
				set_variable = ethiopia_free_state_candidate_3
			}
		}
		every_country = {
			limit = {
				has_variable = berlin_conference_participant
			}
			add_journal_entry = {
				type = je_babylon_ethiopia_free_state_owner
			}
		}
	}
	if = {
		limit = {
			exists = c:MFS
		}
		if = {
			limit = {
				has_variable = babylon_berlin_conference_proposer
			}
			# Fire only once
			# Gives 3 random candidate countries a variable each, that the participants use to give themselves scopes pointing at the candidates
			random_country = {
				limit = {
					congo_free_state_COUNTRY_is_possible_overlord = yes
				}
				set_variable = maghreb_free_state_candidate_1
			}
			random_country = {
				limit = {
					congo_free_state_COUNTRY_is_possible_overlord = yes
				}
				set_variable = maghreb_free_state_candidate_2
			}
			random_country = {
				limit = {
					congo_free_state_COUNTRY_is_possible_overlord = yes
				}
				set_variable = maghreb_free_state_candidate_3
			}
		}
		every_country = {
			limit = {
				has_variable = berlin_conference_participant
			}
			add_journal_entry = {
				type = je_babylon_maghreb_free_state_owner
			}
		}
	}
	if = {
		limit = {
			exists = c:SFS
		}
		if = {
			limit = {
				has_variable = babylon_berlin_conference_proposer
			}
			# Fire only once
			# Gives 3 random candidate countries a variable each, that the participants use to give themselves scopes pointing at the candidates
			random_country = {
				limit = {
					congo_free_state_COUNTRY_is_possible_overlord = yes
				}
				set_variable = senegal_free_state_candidate_1
			}
			random_country = {
				limit = {
					congo_free_state_COUNTRY_is_possible_overlord = yes
				}
				set_variable = senegal_free_state_candidate_2
			}
			random_country = {
				limit = {
					congo_free_state_COUNTRY_is_possible_overlord = yes
				}
				set_variable = senegal_free_state_candidate_3
			}
		}
		every_country = {
			limit = {
				has_variable = berlin_conference_participant
			}
			add_journal_entry = {
				type = je_babylon_senegal_free_state_owner
			}
		}
	}
	if = {
		limit = {
			exists = c:IFS
		}
		if = {
			limit = {
				has_variable = babylon_berlin_conference_proposer
			}
			# Fire only once
			# Gives 3 random candidate countries a variable each, that the participants use to give themselves scopes pointing at the candidates
			random_country = {
				limit = {
					congo_free_state_COUNTRY_is_possible_overlord = yes
				}
				set_variable = niger_free_state_candidate_1
			}
			random_country = {
				limit = {
					congo_free_state_COUNTRY_is_possible_overlord = yes
				}
				set_variable = niger_free_state_candidate_2
			}
			random_country = {
				limit = {
					congo_free_state_COUNTRY_is_possible_overlord = yes
				}
				set_variable = niger_free_state_candidate_3
			}
		}
		every_country = {
			limit = {
				has_variable = berlin_conference_participant
			}
			add_journal_entry = {
				type = je_babylon_niger_free_state_owner
			}
		}
	}
	if = {
		limit = {
			exists = c:CFS
		}
		if = {
			limit = {
				has_variable = babylon_berlin_conference_proposer
			}
			# Fire only once
			# Gives 3 random candidate countries a variable each, that the participants use to give themselves scopes pointing at the candidates
			random_country = {
				limit = {
					congo_free_state_COUNTRY_is_possible_overlord = yes
				}
				set_variable = congo_free_state_candidate_1
			}
			random_country = {
				limit = {
					congo_free_state_COUNTRY_is_possible_overlord = yes
				}
				set_variable = congo_free_state_candidate_2
			}
			random_country = {
				limit = {
					congo_free_state_COUNTRY_is_possible_overlord = yes
				}
				set_variable = congo_free_state_candidate_3
			}
		}
		every_country = {
			limit = {
				has_variable = berlin_conference_participant
			}
			add_journal_entry = {
				type = je_babylon_congo_free_state_owner
			}
		}
	}
	if = {
		limit = {
			exists = c:OFS
		}
		if = {
			limit = {
				has_variable = babylon_berlin_conference_proposer
			}
			# Fire only once
			# Gives 3 random candidate countries a variable each, that the participants use to give themselves scopes pointing at the candidates
			random_country = {
				limit = {
					congo_free_state_COUNTRY_is_possible_overlord = yes
				}
				set_variable = south_africa_free_state_candidate_1
			}
			random_country = {
				limit = {
					congo_free_state_COUNTRY_is_possible_overlord = yes
				}
				set_variable = south_africa_free_state_candidate_2
			}
			random_country = {
				limit = {
					congo_free_state_COUNTRY_is_possible_overlord = yes
				}
				set_variable = south_africa_free_state_candidate_3
			}
		}
		every_country = {
			limit = {
				has_variable = berlin_conference_participant
			}
			add_journal_entry = {
				type = je_babylon_south_africa_free_state_owner
			}
		}
	}
	if = {
		limit = {
			exists = c:ZFS
		}
		if = {
			limit = {
				has_variable = babylon_berlin_conference_proposer
			}
			# Fire only once
			# Gives 3 random candidate countries a variable each, that the participants use to give themselves scopes pointing at the candidates
			random_country = {
				limit = {
					congo_free_state_COUNTRY_is_possible_overlord = yes
				}
				set_variable = zanj_free_state_candidate_1
			}
			random_country = {
				limit = {
					congo_free_state_COUNTRY_is_possible_overlord = yes
				}
				set_variable = zanj_free_state_candidate_2
			}
			random_country = {
				limit = {
					congo_free_state_COUNTRY_is_possible_overlord = yes
				}
				set_variable = zanj_free_state_candidate_3
			}
		}
		every_country = {
			limit = {
				has_variable = berlin_conference_participant
			}
			add_journal_entry = {
				type = je_babylon_zanj_free_state_owner
			}
		}
	}
}
