on_babylon_monthly_pulse_country = {
	effect = {
		# Land trade capacity
		remove_modifier ?= modifier_land_trade_capacity
		set_local_variable = {
			name = total_infrastructure
			value = 0
		}
		set_local_variable = {
			name = number_of_states
			value = 0
		}
		every_scope_state = {
			change_local_variable = {
				name = total_infrastructure
				add = modifier:state_infrastructure_add
			}
			change_local_variable = {
				name = number_of_states
				add = 1
			}
		}
		set_local_variable = {
			name = gained_land_trade_capcity
			value = {
				add = local_var:total_infrastructure
				divide = local_var:number_of_states
				subtract = 50				# counting from 50 infrasturucture
				divide = 8				# every 8 infrastructure average is 1 land_trade capacity
			}
		}
		if = {
			limit = {
				local_var:gained_land_trade_capcity >= 1
			}
			add_modifier = {
				name = modifier_land_trade_capacity
				multiplier = local_var:gained_land_trade_capcity
			}
		}
		# Infamy modifiers
		# Remove / reset babylon infamy modifiers
		remove_modifier ?= babylon_country_infamy_workers
		remove_modifier ?= babylon_country_infamy_capitalist
		every_scope_state = {
			remove_modifier ?= babylon_state_infamy
		}
		if = {
			limit = {
				infamy > 20
			}
			# If theres infamy present...
			if = {
				limit = {
					has_law = law_type:law_command_economy
				}
				# Give command economies their own modifiers
				add_modifier = {
					name = babylon_country_infamy_workers
					multiplier = babylon_infamy_multiplier
				}
			}
			else = {
				# Rest is considered capitalist
				add_modifier = {
					name = babylon_country_infamy_capitalist
					multiplier = babylon_infamy_multiplier
				}
			}
			# No matter what form of economy, give every state a modifier
			every_scope_state = {
				add_modifier = {
					name = babylon_state_infamy
					multiplier = babylon_infamy_multiplier
				}
			}
		}
		# Give players more construction if they deserve it
		if = {
			limit = {
				is_player = no # Change to yes when it goes live
			}
			# Remove the bonus and resets it (if it exists); here in case a players rank is adjusted
			remove_modifier ?= player_construction_bonus
			if = {
				# Only re-add the modifier if the contents (multiplier) are non-zero
				limit = {
					babylon_player_construction_bonus_multiplier != 0
				}
				add_modifier = {
					name = player_construction_bonus
					multiplier = babylon_player_construction_bonus_multiplier
				}
			}
		}
		else_if = {
			limit = {
				is_player = no
				has_modifier = player_construction_bonus
			}
			remove_modifier = player_construction_bonus
		}
	}
	events = {
		naval_command_check.1		# checks
		infamy_rebalance.1		#updates provinces each month
	}
}

#scope = country
on_babylon_monthly_pulse_store_infamy = {
	effect = {
		set_variable = {
			name = infamy_on_month_start
			value = infamy
		}
	}
}

# Root = Diplomatic Play
on_babylon_contain_threat_diplo_play_war_start = {
	effect = {
		if = {
			limit = {
				has_play_goal = contain_threat
			}
			every_country = {
				limit = {
					has_variable = pariah_coalition_member
					has_strategic_adjacency = root.target
					NOT = {
						is_diplomatic_play_enemy_of = root.target
					}
				}
				add_modifier = {
					name = scared_of_pariah_prestige_loss
					months = normal_modifier_time
					is_decaying = yes
				}
			}
		}
	}
}

# Root = Releasing Country
# scope:target = Released Country
on_babylon_country_released_as_independent = {
	effect = {
		if = {
			limit = {
				is_diplomatic_play_committed_participant = no
			}
			trigger_event = {
				id = infamy_rebalance.13
				popup = yes
			}
		}
	}
}

# Root = Releasing Country
# scope:target = Released Country
on_babylon_country_released_as_own_subject = {
	effect = {
		if = {
			limit = {
				is_diplomatic_play_committed_participant = no
			}
			trigger_event = {
				id = infamy_rebalance.14
				popup = yes
			}
		}
	}
}
